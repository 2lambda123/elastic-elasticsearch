[[java-rest-high-security-authenticate]]
=== Authenticate API

[[java-rest-high-security-authenticate-execution]]
==== Execution

To authenticate and retrieve information about a user can be performed
using the `security().authenticate()` method:

["source","java",subs="attributes,callouts,macros"]
--------------------------------------------------
include-tagged::{doc-tests}/SecurityDocumentationIT.java[authenticate-execute]
--------------------------------------------------

This method does not require a request object.

[[java-rest-high-security-authenticate-response]]
==== Response

The returned `AuthenticateResponse` contains a single field, `user`. This field
, accessed with `getUser`, contains all the information about this
authenticated user.

["source","java",subs="attributes,callouts,macros"]
--------------------------------------------------
include-tagged::{doc-tests}/SecurityDocumentationIT.java[authenticate-response]
--------------------------------------------------
<1> `getUser` retrieves the `User` instance containing the information.

[[java-rest-high-security-authenticate-async]]
==== Asynchronous Execution

This request can also be executed asynchronously:

["source","java",subs="attributes,callouts,macros"]
--------------------------------------------------
include-tagged::{doc-tests}/SecurityDocumentationIT.java[authenticate-execute-async]
--------------------------------------------------
<1> The `ActionListener` to use when the execution completes. This method does
not require a request object.

The asynchronous method does not block and returns immediately. Once the request
has completed the `ActionListener` is called back using the `onResponse` method
if the execution completed successfully or using the `onFailure` method if
it failed.

  A typical listener for a `AuthenticateResponse` looks like:

  ["source","java",subs="attributes,callouts,macros"]
  --------------------------------------------------
  include-tagged::{doc-tests}/SecurityDocumentationIT.java[authenticate-execute-listener]
  --------------------------------------------------
  <1> Called when the execution completed successfully. The response is
  provided as an argument.
  <2> Called in case of a failure. The exception is provided as an argument.

