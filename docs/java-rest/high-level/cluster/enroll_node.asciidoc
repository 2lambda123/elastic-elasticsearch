--
:api: node-enrollment
:request: NodeEnrollmentRequest
:response: NodeEnrollmentResponse
--

[id="{upid}-{api}"]
=== Enroll Node API

Allows a node to configure itself to join a secured {es} cluster.

include::../execution.asciidoc[]

[id="{upid}-{api}-response"]
==== Enroll Node Response

The returned +{response}+ allows to retrieve information about the
executed operation as follows:

["source","java",subs="attributes,callouts,macros"]
--------------------------------------------------
include-tagged::{doc-tests-file}[{api}-response]
--------------------------------------------------
<1> The keystore that contains the CA key and certificate that can be used to sign the certificate the new node uses for TLS on the HTTP layer
<2> The keystore that contains the key and certificate that the new node should use for transport layer TLS.
<3> The name of the cluster
<4> A list of addresses (`<hostname>:<port>`) where the nodes of the cluster listen for transport layer connections


[id="{upid}-{api}-execute-async"]
==== Asynchronous Execution

This request can be executed asynchronously using the `cluster().enrollNodeAsync()`
method:

["source","java",subs="attributes,callouts,macros"]
--------------------------------------------------
include-tagged::{doc-tests-file}[{api}-execute-async]
--------------------------------------------------

A typical listener for a `NodeEnrollmentResponse` looks like:

["source","java",subs="attributes,callouts,macros"]
--------------------------------------------------
include-tagged::{doc-tests-file}[{api}-execute-listener]
--------------------------------------------------
<1> Called when the execution is successfully completed. The response is
provided as an argument
<2> Called in case of failure. The raised exception is provided as an argument
