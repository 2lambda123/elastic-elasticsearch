[role="xpack"]
[[search-application-search]]
=== Search Application Search

beta::[]

++++
<titleabbrev>Search Application Search</titleabbrev>
++++

Given specified query parameters, generates and executes an Elasticsearch query using the search template associated
with the search application.
Any unspecified template parameters will be assigned their default values (if applicable).

[[search-application-search-request]]
==== {api-request-title}

`POST _application/search_application/<name>/_search`

[[search-application-search-prereqs]]
==== {api-prereq-title}

Requires read privileges on the backing alias of the search application.

[[search-application-search-path-params]]

[[search-application-search-request-body]]
==== {api-request-body-title}

`params`::
(Optional, map of strings to objects)
Query parameters used to generate the Elasticsearch query from the search template associated with the search
application.
If a parameter used in the search template is not specified in `params`, the parameter's default value will be used.

[NOTE]
====
The search application can be configured to validate search template parameters.
See the `dictionary` parameter in the <<put-search-application, put search application>> API for more information.
====

[[search-application-search-response-codes]]
==== {api-response-codes-title}

`400`::
Invalid parameter passed to search template.

`404`::
Search Application `<name>` does not exist.

[[search-application-search-example]]
==== {api-examples-title}

The following example executes a search against a search application called `my-app` that uses the search template:

////
[source,console]
----
PUT /index1

PUT _application/search_application/my-app
{
  "indices": ["index1"],
  "updated_at_millis": 1682105622204,
  "template": {
    "script": {
      "lang": "mustache",
      "source": """
      {
        "query": {
          "multi_match": {
            "query": "{{query_string}}",
            "fields": ["title^{{title_boost}}", "description"]
          }
        },
        "from": "{{from}}",
        "size": "{{size}}"
      }
      """,
      "params": {
        "query_string": "*",
        "title_boost": 10,
        "from": 0,
        "size": 10
      }
    }
  }
}
----
// TESTSETUP
//////////////////////////

[source,console]
--------------------------------------------------
DELETE _application/search_application/my-app

DELETE /index1
--------------------------------------------------
// TEARDOWN

////

[source,console]
----
GET _application/search_application/my-app/
----

[source,console-result]
----
{
  "name": "my-app",
  "updated_at_millis": 1682105622204,
  "indices": ["index1"],
  "template": {
    "script": {
      "source": """
      {
        "query": {
          "multi_match": {
            "query": "{{query_string}}",
            "fields": ["title^{{title_boost}}", "description"]
          }
        },
        "from": "{{from}}",
        "size": "{{size}}"
      }
      """,
      "lang": "mustache",
      "params": {
        "title_boost": 10,
        "from": 0,
        "size": 10,
        "query_string": "*"
      }
    }
  }
}
----

The following request will use the search template to generate & execute an Elasticsearch query against the search
application:

[source,console]
----
POST _application/search_application/my-app/_search
{
  "params": {
    "query_string": "my first query",
    "title_boost": 5
  }
}
----

The generated Elasticsearch query would look like:

[source,console-result]
----
{
  "from": 0,
  "size": 10,
  "query": {
    "multi_match": {
      "query": "my first query",
      "fields": [
        "description^1.0",
        "title^5.0"
      ]
    }
  }
}
----
// TESTRESPONSE[skip:result of request not run in this document]

In this case, the `from` and `size` parameters are not specified in the request, so default values are pulled from the
search template.

The expected response is the search results from the Elasticsearch query that was generated & executed.
The response format is the same as that used by the <<search-api-response-body,Elasticsearch Search API>>:

[source,console-result]
----
{
  "took": 5,
  "timed_out": false,
  "_shards": {
    "total": 1,
    "successful": 1,
    "skipped": 0,
    "failed": 0
  },
  "hits": {
    "total": {
      "value": 20,
      "relation": "eq"
    },
    "max_score": 1.3862942,
    "hits": [
      ...
    ]
  }
}
----
// TESTRESPONSE[skip:index not populated with documents]
