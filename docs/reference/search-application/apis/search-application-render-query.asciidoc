[role="xpack"]
[[search-application-render-query]]
=== Render Search Application Query

preview::[]

++++
<titleabbrev>Render Search Application Query</titleabbrev>
++++

Given specified query parameters, generates an Elasticsearch query using the search template associated with the search
application or a default template if none is specified.
Unspecified template parameters will be assigned their default values (if applicable).
Returns the specific Elasticsearch query that would be generated and executed by calling
<<search-application-search,search application search>>.

[[search-application-render-query-request]]
==== {api-request-title}

`POST _application/search_application/<name>/_render_query`

[[search-application-render-query-prereqs]]
==== {api-prereq-title}

Requires read privileges on the backing alias of the search application.

[[search-application-render-query-request-body]]
==== {api-request-body-title}

`params`::
(Optional, map of strings to objects)
Query parameters used to generate the Elasticsearch query from the search template associated with the search
application.
If a parameter used in the search template is not specified in `params`, the parameter's default value will be used.

[NOTE]
====
The search application can be configured to validate search template parameters.
See the `dictionary` parameter in the <<put-search-application-dictionary-param, put search application>> API for more
information.
====

[[search-application-render-query-response-codes]]
==== {api-response-codes-title}

`400`::
Invalid parameter passed to search template.
Examples include:

- Missing required parameter
- Invalid parameter data type
- Invalid parameter value

`404`::
Search Application `<name>` does not exist.

[[search-application-render-query-example]]
==== {api-examples-title}

The following example generates a query for a search application called `my-app` that uses the search template:

////
[source,console]
----
PUT /index1

PUT _application/search_application/my-app
{
  "indices": ["index1"],
  "updated_at_millis": 1682105622204,
  "template": {
    "script": {
      "lang": "mustache",
      "source": """
      {
        "query": {
          "multi_match": {
            "query": "{{query_string}}",
            "fields": ["title^{{title_boost}}", "description"]
          }
        },
        "from": "{{from}}",
        "size": "{{size}}"
      }
      """,
      "params": {
        "query_string": "*",
        "title_boost": 10,
        "from": 0,
        "size": 10
      }
    }
  }
}
----
// TESTSETUP

[source,console]
--------------------------------------------------
DELETE _application/search_application/my-app

DELETE index1

--------------------------------------------------
// TEARDOWN

////

[source,console]
----
GET _application/search_application/my-app/
----

[source,console-result]
----
{
  "name": "my-app",
  "updated_at_millis": 1682105622204,
  "indices": ["index1"],
  "template": {
    "script": {
      "source": """
      {
        "query": {
          "multi_match": {
            "query": "{{query_string}}",
            "fields": ["title^{{title_boost}}", "description"]
          }
        },
        "from": "{{from}}",
        "size": "{{size}}"
      }
      """,
      "lang": "mustache",
      "params": {
        "title_boost": 10,
        "from": 0,
        "size": 10,
        "query_string": "*"
      }
    }
  }
}
----

The following request will use the search template to generate an Elasticsearch query:

[source,console]
----
POST _application/search_application/my-app/_render_query
{
  "params": {
    "query_string": "my first query",
    "title_boost": 5
  }
}
----

A sample response:

[source,console-result]
----
{
  "from": 0,
  "size": 10,
  "query": {
    "multi_match": {
      "query": "my first query",
      "fields": [
        "description^1.0",
        "title^5.0"
      ]
    }
  }
}
----
// TEST[continued]

In this case, the `from` and `size` parameters are not specified in the request, so the default values specified in the
search template are used.
