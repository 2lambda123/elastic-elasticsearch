[[mapping-routing-field]]
=== `_routing` field

By default, {es} uses a hash of the <<mapping-id-field,document `_id`>> to
assign new documents to a primary shard. This default is designed to spread an
index's data evenly across multiple shards. However, it also means a search on
the index must hit each shard or one of its replicas.

Custom routing lets you add data to a specific shard. You can later limit
searches to this shard to drastically improve search speeds.

[[use-custom-routing]]
==== Use custom routing

To use custom routing, specify a `routing` string when you add a document.
Documents with the same `routing` value are assigned to the same shard. The
document's routing value is stored in the `_routing` metadata field.

Data streams don't support custom routing.

[source,console]
----
PUT my-index-000001/_doc/1?refresh&routing=user1
{
  "my-field": "A field value"
}
----
// TESTSETUP

You can later specify these same `routing` values in a search request. If
specified, the request will only search shards for the routing values.

For example, the following request only searches shards for the `user1` and
`user2` routing values. For more search routing options, see
<<search-shard-routing>>.

[source,console]
----
GET my-index-000001/_search?routing=user1,user2
{
  "query": {
    "match": {
      "my-field": "value"
    }
  }
}
----

The value of the `_routing` field is also accessible in queries:

[source,console]
----
GET my-index-000001/_search
{
  "query": {
    "terms": {
      "_routing": [ "user1" ] <1>
    }
  }
}
----

<1> Querying on the `_routing` field (also see the <<query-dsl-ids-query,`ids` query>>)

==== Making a routing value required

When you add a document with custom routing, you must provide the same routing
value when you <<docs-index_,index>>, <<docs-get,get>>, <<docs-delete,delete>>,
or <<docs-update,update>> the document.

Forgetting the routing value can lead to a document being indexed on more than
one shard. As a safeguard, the `_routing` field can be configured to make a
custom `routing` value required for all CRUD operations:

[source,console]
------------------------------
PUT my-index-000002
{
  "mappings": {
    "_routing": {
      "required": true <1>
    }
  }
}

PUT my-index-000002/_doc/1 <2>
{
  "text": "No routing value provided"
}
------------------------------
// TEST[catch:bad_request]

<1> Routing is required for all documents.
<2> This index request throws a `routing_missing_exception`.

==== Unique IDs with custom routing

When indexing documents specifying a custom `_routing`, the uniqueness of the
`_id` is not guaranteed across all of the shards in the index. In fact,
documents with the same `_id` might end up on different shards if indexed with
different `_routing` values.

It is up to the user to ensure that IDs are unique across the index.

[[routing-index-partition]]
==== Routing to an index partition

Use the <<routing-partition-size,`index.routing_partition_size`>> index setting
to route a document to a set of shards rather than a single shard.

When the setting is enabled, {es} uses the documentâ€™s `_routing` value to select
a set of shards. {es} then uses the document `_id` to assign the document to a
shard from the set.

The `index.routing_partition_size` value determines the number of shards in the
set. A larger set means your data is more evenly distributed. However, it also
means searches will hit more shards.

Once enabled, the partitioned index will have the following limitations:

*   Mappings with <<parent-join,`join` field>> relationships cannot be created within it.
*   All mappings within the index must have the `_routing` field marked as required.
