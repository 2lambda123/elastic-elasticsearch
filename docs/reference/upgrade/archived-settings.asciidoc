[[archived-settings]]
== Archived settings

If you upgrade a cluster with a deprecated persistent cluster setting to a
version that no longer supports the setting, {es} automatically archives the
setting. Similarly, if you upgrade a cluster that contains an index with an
unsupported index setting, {es} archives the index setting.

Archived settings start with the `archived.` prefix.

[discrete]
[[archived-cluster-settings]]
=== Archived cluster settings

If your cluster contains any archived cluster settings, you'll need to remove
them before you can configure other cluster settings.

You can view archived cluster settings using the <<cluster-get-settings,cluster
get settings API>>.

[source,console]
----
GET _cluster/settings?flat_settings=true&filter_path=persistent.archived*
----

To remove all archived cluster settings, use the following
<<cluster-update-settings,cluster update settings>> request.

[source,console]
----
PUT _cluster/settings
{
  "persistent": {
    "archived.*": null
  }
}
----

{es} doesn't archive transient cluster settings or settings in
`elasticsearch.yml`. If a node includes an unsupported setting in
`elasticsearch.yml`, it will return an error at startup.

[discrete]
[[archived-index-settings]]
=== Archived index settings

IMPORTANT: Before you upgrade, remove any unsupported index settings from index
and component templates. {es} doesn't archive unsupported index settings in
templates during an upgrade. Attempts to use a template that contains an
unsupported index setting will fail and return an error. This includes automated
operations, such the {ilm-init} rollover action.

Archived index settings don't affect an index's configuration. However, they're
still considered invalid settings. They're returned in relevant API responses,
but you can't specify them when you configure an index. This applies even if the
index already has the archived setting.

You can view archived index settings using the <<indices-get-settings,get index
settings API>>.

[source,console]
----
GET my-index/_settings?flat_settings=true&filter_path=**.settings.archived*
----
// TEST[s/^/PUT my-index\n/]

Removing archived index settings requires a reindex. However, reindexing can be
resource intensive. Because archived settings don't affect an index's
configuration, you can safely leave them in place if wanted.

[source,console]
----
POST _reindex
{
  "source": {
    "index": "my-index"
  },
  "dest": {
    "index": "reindexed-v8-my-index"
  }
}
----
// TEST[s/^/PUT my-index\n/]