
When you shut down a node, the allocation process waits for
`index.unassigned.node_left.delayed_timeout` (by default, one minute) before
starting to replicate the shards on that node to other nodes in the cluster,
which can involve a lot of I/O.  Since the node is shortly going to be
restarted, this I/O is unnecessary. You can avoid racing the clock by disabling
allocation before shutting down the node:

[source,js]
--------------------------------------------------
PUT _cluster/settings
{
  "persistent": {
    "cluster.routing.allocation.enable": "none"
  }
}
--------------------------------------------------
// CONSOLE
// TEST[skip:indexes don't assign]

Additionally, the allocation process attempts to keep the shards balanced
across the cluster by performing rebalancing, moving shards between nodes. This
involves I/O that is also unnecessary if the shut-down node will shortly
return, so it is preferable for the cluster not to attempt to perform any
rebalancing until the maintenance is complete. This is the default behaviour,
but can be changed using the `cluster.routing.allocation.allow_rebalance`
setting. Make sure that this setting is unset, or set to the default value of
`indices_all_active`, before continuing.

