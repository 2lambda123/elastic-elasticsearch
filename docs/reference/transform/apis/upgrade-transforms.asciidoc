[role="xpack"]
[testenv="basic"]
[[upgrade-transforms]]
= Upgrade {transform} API

[subs="attributes"]
++++
<titleabbrev>Upgrade {transform}</titleabbrev>
++++

Upgrades all {transforms}.

[[upgrade-transforms-request]]
== {api-request-title}

`POST _transform/_upgrade`

[[upgrade-transforms-prereqs]]
== {api-prereq-title}

Requires the following privileges:

* cluster: `manage_transform` (the `transform_admin` built-in role grants this
  privilege)
* source indices: `read`, `view_index_metadata`
* destination index: `read`, `index`.


[[upgrade-transforms-desc]]
== {api-description-title}

This API upgrades all existing {transforms} that are necessary to upgrade. As 
part of the process the {transforms} are rewritten into the latest format 
including internal data structures that store state and checkpoints. The process 
also frees up resources by cleaning up previous versions.

If a step in the upgrade fails, it doesn't proceed and an error is returned that 
informs about the underlying issues. It might be necessary to manually resolve 
the problems. After resolving the problems, the upgrade can be re-run again. A 
summary is returned at the end of the process.


[[upgrade-transforms-query-parms]]
== {api-query-parms-title}

`dry_run`::
  (Optional, Boolean) When `true`, only checks for updates but does not execute 
  them. Defaults to `false`.


[[upgrade-transforms-example]]
== {api-examples-title}

To upgrade the {transforms}, perform the following API call:

[source,console]
--------------------------------------------------
POST _transform/_upgrade
--------------------------------------------------
// TEST[setup:simple_kibana_continuous_pivot]

When all {transforms} are upgraded, you receive a summary:

[source,console-result]
----
{
  "no_action": 1
}
----
// TESTRESPONSE[s/"no_action" : 1/"no_action" : $body.no_action/]
