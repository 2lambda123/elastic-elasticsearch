[[docs-multi-get]]
=== Multi get (mget) API
++++
<titleabbrev>Multi get</titleabbrev>
++++

Retrieves multiple JSON documents by ID. 

[source,console]
--------------------------------------------------
GET /_mget
{
    "docs" : [
        {
            "_index" : "twitter",
            "_id" : "1"
        },
        {
            "_index" : "twitter",
            "_id" : "2"
        }
    ]
}
--------------------------------------------------
// TEST[setup:twitter]

[[docs-multi-get-api-request]]
==== {api-request-title}

`GET /_mget`

`GET /<index>/_mget`

[[docs-multi-get-api-desc]]
==== {api-description-title}

You use `mget` to retrieve multiple documents from one or more indices.
If you specify an index in the request URI, you only need to specify the document IDs in the request body.

[source,console]
--------------------------------------------------
GET /twitter/_mget
{
    "docs" : [
        {
            "_id" : "1"
        },
        {
            "_id" : "2"
        }
    ]
}
--------------------------------------------------
// TEST[setup:twitter]

In this case, you can use the `ids` element to simplify the request:

[source,console]
--------------------------------------------------
GET /twitter/_mget
{
    "ids" : ["1", "2"]
}
--------------------------------------------------
// TEST[setup:twitter]

The response includes a `docs` array that contains the documents in the order specified in the request. 
The structure of the returned documents is similar to that returned by the <<docs-get,get>> API.
If there is a failure getting a particular document, the error is included in place of the document. 

[float]
[[mget-source-filtering]]
===== Source filtering

By default, the `_source` field is returned for every document (if stored).
Similar to the <<get-source-filtering,get>> API, you can use the `_source` parameter
to retrieve select parts of the `_source` (or none). 
You can use the URL parameters `_source`, `_source_includes`, and `_source_excludes` to specify
the defaults to use when there are no per-document instructions.

For example:

[source,console]
--------------------------------------------------
GET /_mget
{
    "docs" : [
        {
            "_index" : "test",
            "_id" : "1",
            "_source" : false
        },
        {
            "_index" : "test",
            "_id" : "2",
            "_source" : ["field3", "field4"]
        },
        {
            "_index" : "test",
            "_id" : "3",
            "_source" : {
                "include": ["user"],
                "exclude": ["user.location"]
            }
        }
    ]
}
--------------------------------------------------

[float]
[[mget-routing]]
===== Routing

If routing is used during indexing, the routing value also needs to be specified to retrieve a document. 
For example, the following request fetches `test/_doc/2`  from the shard corresponding to routing key `key1`,
and fetches `test/_doc/1` from the shard corresponding to routing key `key2`.

[source,console]
--------------------------------------------------
GET /_mget?routing=key1
{
    "docs" : [
        {
            "_index" : "test",
            "_id" : "1",
            "routing" : "key2"
        },
        {
            "_index" : "test",
            "_id" : "2"
        }
    ]
}
--------------------------------------------------

[float]
[[mget-security]]
==== Security

See <<url-access-control>>.

[float]
[[multi-get-partial-responses]]
==== Partial responses

To ensure fast responses, the multi get API responds with partial results if one or more shards fail. 
See <<shard-failures, Shard failures>> for more information.

[[docs-multi-get-api-path-params]]
==== {api-path-parms-title}

`<index>`::
(Optional, string) Name of the index that contains the documents.

[[docs-multi-get-api-query-params]]
==== {api-query-parms-title}

include::{docdir}/rest-api/common-parms.asciidoc[tag=preference]

include::{docdir}/rest-api/common-parms.asciidoc[tag=realtime]

include::{docdir}/rest-api/common-parms.asciidoc[tag=refresh]

include::{docdir}/rest-api/common-parms.asciidoc[tag=routing]

include::{docdir}/rest-api/common-parms.asciidoc[tag=stored_fields]

include::{docdir}/rest-api/common-parms.asciidoc[tag=source]

include::{docdir}/rest-api/common-parms.asciidoc[tag=source_excludes]

include::{docdir}/rest-api/common-parms.asciidoc[tag=source_includes]

[[docs-multi-get-api-example]]
==== {api-examples-title}

[float]
[[mget-fields]]
===== Get stored fields

Use the `stored_fields` parameter to specify the set of stored fields you want
to retrieve. Any requested fields that are not stored are ignored. 
For example:

[source,console]
--------------------------------------------------
GET /_mget
{
    "docs" : [
        {
            "_index" : "test",
            "_id" : "1",
            "stored_fields" : ["field1", "field2"]
        },
        {
            "_index" : "test",
            "_id" : "2",
            "stored_fields" : ["field3", "field4"]
        }
    ]
}
--------------------------------------------------

Alternatively, you can specify the `stored_fields` parameter in the query string
as a default to be applied to all documents.

[source,console]
--------------------------------------------------
GET /test/_mget?stored_fields=field1,field2
{
    "docs" : [
        {
            "_id" : "1" <1>
        },
        {
            "_id" : "2",
            "stored_fields" : ["field3", "field4"] <2>
        }
    ]
}
--------------------------------------------------
<1> Returns `field1` and `field2`
<2> Returns `field3` and `field4`