[[compound-queries]]
== Compound queries

**Compound queries** wrap other queries so you can:

* Combine multiple queries.

* Customize search results and <<query-filter-context, relevance scores>>.

* Run queries in a <<query-filter-context,filter context>> to improve
speed and performance.

[float]
[[compound-query-types]]
=== Compound query types

<<query-dsl-bool-query,`bool` query>>::
Returns documents matching one or more wrapped queries using `and`, `or`, and
`not` logic.

<<query-dsl-boosting-query,`boosting` query>>::
Returns documents matching a `positive` query while reducing the relevance score
of documents that also match a `negative` query.

<<query-dsl-constant-score-query,`constant_score` query>>::
Wraps a <<query-dsl-bool-query, filter query>> and assigns every returned
document the same relevance score.

<<query-dsl-dis-max-query,`dis_max` query>>::
Returns documents matching one or more wrapped queries. If a returned document
matches more than one of these queries, the `dis_max` query assigns the document
the highest relevance score from any matching query, plus a tie breaking
increment for any additional matching subqueries.

<<query-dsl-function-score-query,`function_score` query>>::
Changes the relevance scores of documents returned by a wrapped query. You can
use the `function_score` query to incorporate factors like popularity, recency,
distance, or custom algorithms into your search results.


include::bool-query.asciidoc[]
include::boosting-query.asciidoc[]
include::constant-score-query.asciidoc[]
include::dis-max-query.asciidoc[]
include::function-score-query.asciidoc[]