[[query-dsl-vector-similarity-query]]
=== Vector Similarity query
++++
<titleabbrev>Vector Similarity</titleabbrev>
++++

A query that allows approximate nearest neighbors search over <<dense-vector,`dense_vector`>> fields.
The query will find vectors that are within or equal to the given similarity threshold of the provide
query vector.

[[vector-similarity-query-ex-request]]
==== Example request

Let's assume we have an `l2_norm` <<dense-vector,`dense_vector`>> field.

[source,console]
----
PUT my-index
{
  "mappings": {
    "properties": {
      "title": {
        "type": "text"
      },
      "image-vector": {
        "type": "dense_vector",
        "dims": 3,
        "index": true,
        "similarity": "l2_norm"
      }
    }
  }
}
----

The following query finds vectors that are within the sphere with radius `10`
surrounding the query vector `[-5, 9, -12]`

[source,console]
----
GET /_search
{
  "query": {
    "vector_similarity": {
      "field": "image-vector",
      "query_vector": [-5, 9, -12],
      "num_candidates": 100,
      "similarity": 10.0
    }
  }
}
----

Since this is a regular query, it can be used in filter contexts and combined with other queries
within a <<query-dsl-bool-query,`bool`>> query.

The following query is a <<query-dsl-term-query,`term`>> query against `title`. If the field `image-vector` is also
within the sphere of radius `10` with origin at `[-5, 9, -12]`, `boost*similarity_score`
is added to the matching document `_score`.

[source,console]
----
GET /_search
{
  "query": {
    "bool": {
      "must": {
        "term": {
          "title": "snow"
        }
      },
      "should": {
        "vector_similarity": {
          "field": "image-vector",
          "query_vector": [-5, 9, -12],
          "num_candidates": 100,
          "similarity": 10.0,
          "boost": 5.0
        }
      }
    }
  }
}
----

[[vector-similarity-top-level-params]]
==== Top-level parameters for `vector_similarity`
`field`::
(Required, string)
include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=knn-field]

`query_vector`::
(Required, array of floats)
include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=knn-query-vector]

`num_candidates`::
(Required, int)
The number of nearest neighbor candidates to consider per shard. Cannot exceed
10,000.

`similarity`::
(Required, float)
The minimum similarity required for a document to be considered a match. The similarity
value calculated relates to the raw <<dense-vector-similarity, `similarity`>> used. Not the
document score. The matched documents are then scored according to <<dense-vector-similarity, `similarity`>>
and the provided `boost` is applied.

+
--
The `similarity` parameter is the direct vector similarity calculation.

* `l2_norm`: also known as Euclidean, will include documents where the vector is within
the `dims` dimensional hypersphere with radius `similarity` with origin at `query_vector`.
* `cosine` & `dot_product`: Only return vectors where the cosine similarity or dot-product are at least the provided
`similarity`.
--

`boost`::
(Optional, float) Floating point number used to decrease or increase the
<<relevance-scores,relevance scores>>. Defaults to `1.0`.
