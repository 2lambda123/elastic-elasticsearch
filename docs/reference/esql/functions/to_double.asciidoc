[discrete]
[[esql-to_double]]
=== `TO_DOUBLE`

*Alias*

`TO_DBL`

*Syntax*

[.text-center]
image::esql/functions/signature/to_double.svg[Embedded,opts=inline]

*Parameters*

`v`::
Input value. The input can be a single- or multi-valued column or an expression.

*Description*

Converts an input value to a double value.

If the input parameter is of a date type, its value will be interpreted as
milliseconds since the {wikipedia}/Unix_time[Unix epoch], converted to double.

Boolean *true* will be converted to double *1.0*, *false* to *0.0*.

include::types/to_double.asciidoc[]

*Example*

[source.merge.styled,esql]
----
include::{esql-specs}/floats.csv-spec[tag=to_double-str]
----
[%header.monospaced.styled,format=dsv,separator=|]
|===
include::{esql-specs}/floats.csv-spec[tag=to_double-str-result]
|===

Note that in this example, the last conversion of the string isn't possible.
When this happens, the result is a *null* value. In this case a _Warning_ header
is added to the response. The header will provide information on the source of
the failure:

`"Line 1:115: evaluation of [TO_DOUBLE(str2)] failed, treating result as null. Only first 20 failures recorded."`

A following header will contain the failure reason and the offending value:

`"java.lang.NumberFormatException: For input string: \"foo\""`
