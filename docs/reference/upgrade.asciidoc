[[setup-upgrade]]
= Upgrade {es}

{es} can usually be upgraded using a <<rolling-upgrades,Rolling upgrade>>
process so upgrading does not interrupt service. Rolling upgrades are supported:

* Between minor versions
* From 5.6 to 6.8
* From 6.8 to {prev-major-version}
* From {prev-major-version} to {version}
ifeval::[ "{bare_version}" != "{minor-version}.0" ]
* From any version since {minor-version}.0 to {version}
endif::[]

[TIP]
====
For rolling upgrades between major versions (e.g., 5.6 to 6.8), we recommend
using the {kibana-ref}/upgrade-assistant.html[Kibana Upgrade Assistant].

The upgrade assistant identifies deprecated settings in your cluster and guides
you through the process of resolving issues, including reindexing.

We also recommend checking your <<deprecation-logging,deprecation logs>> for any
other functionality that may have changed.
====

The following table shows the recommended upgrade paths to {version}.

[cols="<1,3",options="header",]
|====
|Upgrade from   
|Recommended upgrade path to {version}

ifeval::[ "{bare_version}" != "{minor-version}.0" ]
|A previous {minor-version} version (e.g., {minor-version}.0)
|<<rolling-upgrades,Rolling upgrade>> to {version}
endif::[]

|{prev-major-version}
|<<rolling-upgrades,Rolling upgrade>> to {version}

|7.0–7.15
a|
. https://www.elastic.co/guide/en/elasticsearch/reference/{prev-major-version}/rolling-upgrades.html[Rolling upgrade] to {prev-major-version}
. <<rolling-upgrades,Rolling upgrade>> to {version}

|6.8
a|
. https://www.elastic.co/guide/en/elasticsearch/reference/{prev-major-version}/rolling-upgrades.html[Rolling upgrade] to {prev-major-version}
. <<rolling-upgrades,Rolling upgrade>> to {version}

|6.0–6.7
a|

. https://www.elastic.co/guide/en/elasticsearch/reference/6.8/rolling-upgrades.html[Rolling upgrade] to 6.8
. https://www.elastic.co/guide/en/elasticsearch/reference/{prev-major-version}/rolling-upgrades.html[Rolling upgrade] to {prev-major-version}
. <<rolling-upgrades,Rolling upgrade>> to {version}
|====


[WARNING]
====
The upgrade path from 6.8 to 7.0 is *not* supported (both full cluster restart and rolling upgrade).
====

To upgrade directly to {version} from 6.7 or earlier, you must shut down the
cluster, install {version}, and restart. For more information, see
<<restart-upgrade, Full cluster restart upgrade>>.

[WARNING]
====
In-place downgrades to earlier versions are *not* supported. To downgrade to an
earlier version, <<snapshots-restore-snapshot,restore a snapshot>> taken prior
to the version upgrade.
====

{es} can read indices created in the previous major version. If you
have indices created in 5.x or before, you must reindex or delete them
before upgrading to {version}. {es} nodes will fail to start if
incompatible indices are present. Snapshots of 5.x or earlier indices cannot be
restored to a 7.x cluster even if they were created by a 6.x cluster. For
information about upgrading old indices, see <<reindex-upgrade, Reindex to upgrade>>.

When upgrading to a new version of {es}, you need to upgrade each
of the products in your Elastic Stack. For more information, see the
{stack-ref}/upgrading-elastic-stack.html[Elastic Stack Installation and Upgrade Guide].

ifeval::["{release-state}"!="released"]
[[upgrade-pre-release]]
NOTE: This documentation is for {es} {version}, which is not yet released. You
may run a pre-release build of {es} for testing, and you may upgrade from an
earlier released version to a pre-release build of {es} {version} if permitted
by the compatibility table above, but upgrading from a pre-release build to
another build (whether released or not) is unsupported. Upgrading a pre-release
build may result in errors or may appear to succeed having silently lost some
data. You should discard the contents of a cluster running a pre-release build
when moving to a different build.
endif::[]

[discrete]
[[archived-settings]]
== Archived settings

{es} typically removes support for deprecated settings at major version
releases. If you upgrade a cluster that contains a deprecated persistent cluster
setting to a version that no longer supports that setting, {es} automatically
archives the setting. Similarly, if you upgrade a cluster that contains an
index with an unsupported index setting, {es} archives the index setting.

Archived settings start with the `archived.` prefix and are ignored by {es}.

[discrete]
[[archived-cluster-settings]]
=== Archived cluster settings

After an upgrade, you can view archived cluster settings using the
<<cluster-get-settings,get cluster settings API>>.

[source,console]
----
GET _cluster/settings?flat_settings=true&filter_path=persistent.archived*
----

You can remove archived cluster settings using the
<<cluster-update-settings,update cluster settings API>>.

[source,console]
----
PUT _cluster/settings
{
  "persistent": {
    "archived.*": null
  }
}
----

{es} doesn't archive transient cluster settings or settings in
`elasticsearch.yml`. If a node includes an unsupported setting in
`elasticsearch.yml`, it will return an error at startup.

[discrete]
[[archived-index-settings]]
=== Archived index settings

IMPORTANT: Before you upgrade, remove any unsupported index settings from index
and component templates. {es} doesn't archive unsupported index settings in
templates during an upgrade. Attempts to use a template that contains an
unsupported index setting will fail and return an error. This includes automated
operations, such the {ilm-init} rollover action.

You can view archived settings for an index using the <<indices-get-settings,get
index settings API>>.

[source,console]
----
GET my-index/_settings?flat_settings=true&filter_path=**.settings.archived*
----
// TEST[s/^/PUT my-index\n/]

Removing archived index settings requires a reindex after the upgrade. However,
reindexing can be resource intensive. Because {es} ignores archived settings,
you can safely leave them in place if wanted.

[source,console]
----
POST _reindex
{
  "source": {
    "index": "my-index"
  },
  "dest": {
    "index": "reindexed-v8-my-index"
  }
}
----
// TEST[s/^/PUT my-index\n/]

include::upgrade/rolling_upgrade.asciidoc[]

include::upgrade/cluster_restart.asciidoc[]

include::upgrade/reindex_upgrade.asciidoc[]
