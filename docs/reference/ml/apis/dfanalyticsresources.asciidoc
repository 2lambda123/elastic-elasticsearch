[role="xpack"]
[testenv="platinum"]
[[ml-dfanalytics-resources]]
=== {dfanalytics-cap} resources

A {dfanalytics} configuration object has the following properties:

`analysis`::
  (object) The type of analysis that is performed on the `source`. For example: 
  `outlier_detection`. For more information, see <<dfanalytics-types>>.
  
`analyzed_fields`::
  (object) You can specify both `includes` and/or `excludes` patterns. If 
  `analyzed_fields` is not set, only the relevant fileds will be included. For 
  example all the numeric fields for {oldetection}.

`dest`::
  (object) The destination configuration of the analysis. For more information, 
  see <<dfanalytics-dest-resources>>.

`id`::
  (string) The unique identifier for the {dfanalytics-job}. This identifier can 
  contain lowercase alphanumeric characters (a-z and 0-9), hyphens, and 
  underscores. It must start and end with alphanumeric characters. This property 
  is informational; you cannot change the identifier for existing jobs.
  
`model_memory_limit`::
  (long or string) The approximate maximum amount of memory resources that are 
  required for analytical processing. Once this limit is approached, data 
  pruning becomes more aggressive. Upon exceeding this limit, new entities are 
  not modelled. The default value for {dfanalytics-jobs} is `1gb`.
  +
--
If you specify a number instead of a string, the units are assumed to be MiB.
Specifying a string is recommended for clarity. If you specify a byte size unit
of `b` or `kb` and the number does not equate to a discrete number of megabytes,
it is rounded down to the closest MiB. The minimum valid value is 1 MiB. If you
specify a value less than 1 MiB, an error occurs. For more information about
supported byte size units, see <<byte-units,Common options>>.

If your `elasticsearch.yml` file contains an `xpack.ml.max_model_memory_limit`
setting, an error occurs when you try to create {dfanalytics-jobs} that have
`model_memory_limit` values greater than that setting. For more information,
see <<ml-settings>>.
--

`source`::
  (object) The source configuration, consisting of `index` and optionally a 
  `query`. For more information, see <<dfanalytics-source-resources>>.

[float]
[[dfanalytics-types]]
==== Analysis types
  
[float]
[[oldetection-resources]]
===== {oldetection-cap} configuration objects 

An {oldetection} configuration object has the following properties:

`n_neighbors` (Optional)::
  (integer) Defines the value for how many neighbors {oldetection} should check 
  in the index for a certain point to calculate its {olscore}. When the value is 
  not set, the system will dynamically detect an appropriate value.

`method` (Optional)::
  (string) Sets the method that {oldetection} uses. If the method is 
  not set, the system assembles different models that use different methods, 
  then hierarchically combines the different models to find a solution that 
  applies to the dataset. Available methods are `lof`, `ldof`, `distance_kth_nn`, 
  `distance_knn`.

`feature_influence_threshold` (Optional):: 
  (double) The minimum {olscore} that a document needs to have in order to 
  calculate its {fiscore}. 
  Value range: 0-1 (`0.1` by default).
  
[float]
[[dfanalytics-dest-resources]]
==== Dest configuration objects

The `dest` configuration object has the following properties:

`index` (Required)::
  (string) The name of the index in which to store the results of the 
  {dfanalytics-job}.

`results_field` (Optional)::
  (string) The name of the field in which to store the results of the analysis. 
  The default value is `ml`.
  
[float]
[[dfanalytics-source-resources]]
==== Source configuration objects

The `source` configuration object has the following properties:

`index` (Required)::
  (string) The name of the index on which to perform the analysis.
  
`query`::
  (object) The {es} query domain-specific language (DSL). This value
  corresponds to the query object in an {es} search POST body. All the
  options that are supported by {es} can be used, as this object is
  passed verbatim to {es}. By default, this property has the following
  value: `{"match_all": {"boost": 1}}`.