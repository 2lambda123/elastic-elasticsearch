[[modules-discovery]]
== Discovery and cluster formation

The discovery and cluster formation processes are responsible for discovering
nodes, electing a manager, forming a cluster, and publishing the cluster state
each time it changes. All communication between nodes is done using the
<<modules-transport,transport>> layer.

The following processes and settings are part of discovery and cluster
formation:

<<modules-discovery-hosts-providers>>::

    Discovery is the process where nodes find each other when the manager is
    unknown, such as when a node has just started up or when the previous
    manager has failed.

<<modules-discovery-quorums>>::

    How {es} uses a quorum-based voting mechanism to
    make decisions even if some nodes are unavailable.

<<modules-discovery-voting>>::

    How {es} automatically updates voting configurations as nodes leave and join
    a cluster.

<<modules-discovery-bootstrap-cluster>>::

    Bootstrapping a cluster is required when an {es} cluster starts up
    for the very first time. In <<dev-vs-prod-mode,development mode>>, with no
    discovery settings configured, this is automatically performed by the nodes
    themselves. As this auto-bootstrapping is
    <<modules-discovery-quorums,inherently unsafe>>, running a node in
    <<dev-vs-prod-mode,production mode>> requires bootstrapping to be
    explicitly configured via the
    <<modules-discovery-bootstrap-cluster,`cluster.initial_master_nodes`
    setting>>.

<<modules-discovery-adding-removing-nodes,Adding and removing control nodes>>::

    It is recommended to have a small and fixed number of control nodes
    in a cluster, and to scale the cluster up and down by adding and removing
    data nodes only. However there are situations in which it may
    be desirable to add or remove control nodes. 
    This section describes the process for adding or removing
    control nodes, including the extra steps that need to be performed
    when removing more than half of the control nodes at the same time.

<<cluster-state-publishing>>::

    Cluster state publishing is the process by which the manager node
    updates the cluster state on all other nodes in the cluster.

<<cluster-fault-detection>>::

    {es} performs health checks to detect and remove faulty nodes.

<<modules-discovery-settings,Settings>>::

    There are settings that enable users to influence the discovery, cluster
    formation, manager election, and fault detection processes.

include::discovery/discovery.asciidoc[]

include::discovery/quorums.asciidoc[]

include::discovery/voting.asciidoc[]

include::discovery/bootstrapping.asciidoc[]

include::discovery/publishing.asciidoc[]

include::discovery/fault-detection.asciidoc[]
