[[misc-cluster]]
=== Miscellaneous cluster settings

[[cluster-read-only]]
==== Metadata

An entire cluster may be set to read-only with the following _dynamic_ setting:

`cluster.blocks.read_only`::

      Make the whole cluster read only (indices do not accept write
      operations), metadata is not allowed to be modified (create or delete
      indices).

WARNING: Don't rely on this setting to prevent changes to your cluster. Any
user with access to the <<cluster-update-settings,cluster-update-settings>>
API can make the cluster read-write again.


[[cluster-max-tombstones]]
==== Index Tombstones

The cluster state maintains index tombstones to explicitly denote indices that 
have been deleted.  The tombstones are maintained to prevent indices that were 
deleted when a node was offline from being reimported as dangling indices when 
the node comes back online.  The number of tombstones maintained in the cluster 
state is controlled by the following property, which cannot be updated dynamically:

`cluster.indices.tombstones.size`::

The maximum number of tombstones that can be in the cluster state before tombstones 
are purged.  The current default is 500.  Index tombstones remain in the cluster state, 
until the maximum is exceeded, at which point tombstones are purged to stay within the 
maximum allowed.  If you change this setting, set the value to the maximum number 
of index deletions that are expected during the average node downtime in a cluster.
Otherwise, you may occasionally see deleted indices re-imported as dangling indices.

[[cluster-logger]]
==== Logger

The settings which control logging can be updated dynamically with the
`logger.` prefix.  For instance, to increase the logging level of the
`indices.recovery` module to `DEBUG`, issue this request:

[source,js]
-------------------------------
PUT /_cluster/settings
{
  "transient": {
    "logger.indices.recovery": "DEBUG"
  }
}
-------------------------------

