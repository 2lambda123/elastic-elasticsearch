[[search-aggregations-bucket-filter-aggregation]]
=== Filter aggregation
++++
<titleabbrev>Filter</titleabbrev>
++++

A single bucket aggregation that narrows the set of documents
to those that match a <<query-dsl,query>>.

Example:

[source,console,id=filter-aggregation-example]
----
POST /sales/_search?size=0&filter_path=aggregations
{
  "aggs": {
    "avg_price": { "avg": { "field": "price" } },
    "t_shirts": {
      "filter": { "term": { "type": "t-shirt" } },
      "aggs": {
        "avg_price": { "avg": { "field": "price" } }
      }
    }
  }
}
----
// TEST[setup:sales]

In the above example, we calculate the average price of all sales as well as
well as the avergae price of all t-shirts.

Response:

[source,console-result]
----
{
  "aggregations": {
    "avg_price": { "value": 140.71428571428572 },
    "t_shirts": {
      "doc_count": 3,
      "avg_price": { "value": 128.33333333333334 }
    }
  }
}
----

==== Prefer top level queries to limit all results

If you have to limit all of results of running all of the aggregations based
on a query then it is faster if you change the top level `query` rather than
using a single `filter` aggregation. So do this:


[source,console,id=filter-aggregation-top-good]
----
POST /sales/_search?size=0&filter_path=aggregations
{
  "query": { "term": { "type": "t-shirt" } },
  "aggs": {
    "avg_price": { "avg": { "field": "price" } }
  }
}
----
// TEST[setup:sales]

////
[source,console-result]
----
{
  "aggregations": {
    "avg_price": { "value": 128.33333333333334 }
  }
}
----
////

Instead of this:

[source,console,id=filter-aggregation-top-bad]
----
POST /sales/_search?size=0&filter_path=aggregations
{
  "aggs": {
    "t_shirts": {
      "filter": { "term": { "type": "t-shirt" } },
      "aggs": {
        "avg_price": { "avg": { "field": "price" } }
      }
    }
  }
}
----
// TEST[setup:sales]

////
[source,console-result]
----
{
  "aggregations": {
    "t_shirts": {
      "doc_count": 3,
      "avg_price": { "value": 128.33333333333334 }
    }
  }
}
----
////

==== Prefer `filters` for multiple filters

If you have to group documents into more than one filter it is faster
to use the <<search-aggregations-bucket-filters-aggregation,`filters` aggregation>>
rather than many `filter` aggregations. So do this:

[source,console,id=filter-aggregation-many-good]
----
POST /sales/_search?size=0&filter_path=aggregations
{
  "aggs": {
    "f": {
      "filters": { 
        "filters": {
          "hats": { "term": { "type": "hat" } },
          "t_shirts": { "term": { "type": "t-shirt" } }
        }
      },
      "aggs": {
        "avg_price": { "avg": { "field": "price" } }
      }
    }
  }
}
----
// TEST[setup:sales]

////
[source,console-result]
----
{
  "aggregations": {
    "f": {
      "buckets": {
        "hats": {
          "doc_count": 3,
          "avg_price": { "value": 150.0 }
        },
        "t_shirts": {
          "doc_count": 3,
          "avg_price": { "value": 128.33333333333334 }
        }
      }
    }
  }
}
----
////

Instead of this:

[source,console,id=filter-aggregation-many-bad]
----
POST /sales/_search?size=0&filter_path=aggregations
{
  "aggs": {
    "hats": {
      "filter": { "term": { "type": "hat" } },
      "aggs": {
        "avg_price": { "avg": { "field": "price" } }
      }
    },
    "t_shirts": {
      "filter": { "term": { "type": "t-shirt" } },
      "aggs": {
        "avg_price": { "avg": { "field": "price" } }
      }
    }
  }
}
----
// TEST[setup:sales]

////
[source,console-result]
----
{
  "aggregations": {
    "hats": {
      "doc_count": 3,
      "avg_price": { "value": 150.0 }
    },
    "t_shirts": {
      "doc_count": 3,
      "avg_price": { "value": 128.33333333333334 }
    }
  }
}
----
////
