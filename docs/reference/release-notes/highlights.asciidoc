[[release-highlights]]
== What's new in {minor-version}

coming::[{minor-version}]

Here are the highlights of what's new and improved in {es} {minor-version}!
ifeval::["{release-state}"!="unreleased"]
For detailed information about this release, see the <<es-release-notes>> and
<<breaking-changes>>.

// Add previous release to the list
Other versions:

{ref-bare}/8.11/release-highlights.html[8.11]
| {ref-bare}/8.10/release-highlights.html[8.10]
| {ref-bare}/8.9/release-highlights.html[8.9]
| {ref-bare}/8.8/release-highlights.html[8.8]
| {ref-bare}/8.7/release-highlights.html[8.7]
| {ref-bare}/8.6/release-highlights.html[8.6]
| {ref-bare}/8.5/release-highlights.html[8.5]
| {ref-bare}/8.4/release-highlights.html[8.4]
| {ref-bare}/8.3/release-highlights.html[8.3]
| {ref-bare}/8.2/release-highlights.html[8.2]
| {ref-bare}/8.1/release-highlights.html[8.1]
| {ref-bare}/8.0/release-highlights.html[8.0]

endif::[]

// tag::notable-highlights[]

[discrete]
[[enable_query_phase_parallelism_within_single_shard]]
=== Enable query phase parallelism within a single shard
Activate inter-segment search concurrency by default in the query phase, in order to
enable parallelizing search execution across segments that a single shard is made of.

{es-pull}101230[#101230]

[discrete]
[[add_new_int8_hsnw_index_type_for_int8_quantization_for_hnsw]]
=== Add new `int8_hsnw` index type for int8 quantization for HNSW
This commit adds a new index type called `int8_hnsw`. This index will
automatically quantized float32 values into int8 byte values. While
this increases disk usage by 25%, it reduces memory required for 
fast HNSW search by 75%. Dramatically reducing the resource overhead
required for dense vector search.

{es-pull}102093[#102093]

// end::notable-highlights[]


