[[release-highlights]]
== What's new in {minor-version}

coming[{minor-version}]

Here are the highlights of what's new and improved in {es} {minor-version}!

For detailed information about this release, see the <<es-release-notes>> and
<<breaking-changes>>.

// Add previous release to the list
Other versions:
{ref-bare}/7.12/release-highlights.html[7.12]
| {ref-bare}/7.11/release-highlights.html[7.11]
| {ref-bare}/7.10/release-highlights.html[7.10]
| {ref-bare}/7.9/release-highlights.html[7.9]
| {ref-bare}/7.8/release-highlights.html[7.8]
| {ref-bare}/7.7/release-highlights.html[7.7]
| {ref-bare}/7.6/release-highlights-7.6.0.html[7.6]
| {ref-bare}/7.5/release-highlights-7.5.0.html[7.5]
| {ref-bare}/7.4/release-highlights-7.4.0.html[7.4]
| {ref-bare}/7.3/release-highlights-7.3.0.html[7.3]
| {ref-bare}/7.2/release-highlights-7.2.0.html[7.2]
| {ref-bare}/7.1/release-highlights-7.1.0.html[7.1]
| {ref-bare}/7.0/release-highlights-7.0.0.html[7.0]

// Use the notable-highlights tag to mark entries that
// should be featured in the Stack Installation and Upgrade Guide:
// tag::notable-highlights[]
// [discrete]
// === Heading
//
// Description.
// end::notable-highlights[]

// Omit the notable highlights tag for entries that only need to appear in the ES ref:
// [discrete]
// === Heading
//
// Description.

tag::notable-highlights[]
[discrete]
=== Frozen tier is now GA

The frozen tier and partially mounted indices (partial searchable
snapshots) that were introduced as a technical preview feature in 7.12 are
now generally available.

See the
{ref}/release-highlights.html#frozen-tier-shared-snapshot-cache[original
announcement for 7.12] for more information.

[discete]
=== Allow fields calculated by scripting at index time

Runtime fields allow you to create a synthetic field derived from the
values of other document properties at query time, which prioritises
flexibility (you can change these fields at any time) over speed. In
{minor-version} you can now generate these synthetic fields at index time,
trading off some of that flexibility for better query performance.

Scripted mappings are supported on the following field types by defining
the `script` field in the mappings: `long`, `double`, `keyword`,
`geo_point`, `ip`, `date`, and `boolean`.

[discete]
=== Match IPv4 and IPv6 addresses against CIDR ranges in Painless

You can now match IPv4 and IPv6 address against CI ranges in Painless
expression. This is useful for e.g. classifying and grouping IP addresses
which in security and monitoring use-cases. This feature is available to
all contexts, including runtime fields, ingest, search and aggregations.

Here's an example:

----
[source,painless]
CIDR c = new CIDR('10.1.1.0/25');
c.contains('10.1.1.127'); // true
c.contains('10.1.1.129'); // false

c = new CIDR('2001:0db8:85a3::/64');
c.contains('2001:0db8:85a3:0000:0000:8a2e:0370:7334'); // true
c.contains('2001:0db8:85a3:0001:0000:8a2e:0370:7334'); // false
----

end::notable-highlights[]
