[[release-highlights]]
== What's new in {minor-version}

coming[{minor-version}]

Here are the highlights of what's new and improved in {es} {minor-version}!
ifeval::["{release-state}"!="unreleased"]
For detailed information about this release, see the
<<release-notes-{elasticsearch_version}, Release notes >> and
<<breaking-changes-{minor-version}, Breaking changes>>.
endif::[]

// Add previous release to the list
Other versions:
{ref-bare}/7.11/release-highlights.html[7.11]
| {ref-bare}/7.10/release-highlights.html[7.10]
| {ref-bare}/7.9/release-highlights.html[7.9]
| {ref-bare}/7.8/release-highlights.html[7.8]
| {ref-bare}/7.7/release-highlights.html[7.7]
| {ref-bare}/7.6/release-highlights-7.6.0.html[7.6]
| {ref-bare}/7.5/release-highlights-7.5.0.html[7.5]
| {ref-bare}/7.4/release-highlights-7.4.0.html[7.4]
| {ref-bare}/7.3/release-highlights-7.3.0.html[7.3]
| {ref-bare}/7.2/release-highlights-7.2.0.html[7.2]
| {ref-bare}/7.1/release-highlights-7.1.0.html[7.1]
| {ref-bare}/7.0/release-highlights-7.0.0.html[7.0]

// tag::notable-highlights[]
[discrete]
[[eql-like-regex-keywords]]
=== EQL: `like` and `regex` keywords

In 7.12, we added the `like` and `regex` keywords to EQL. You can use the
`like` keyword to match strings to
{ref}/eql-syntax.html#eql-syntax-wildcards[wildcard patterns], such as `foo*` or
`ba?`. You can use the `regex` keyword to match strings to regular expressions.
You can use both `like` and `regex` to match a string
against a list of patterns.

By default, both keywords are case-sensitive. For case-insensitive matching,
use `like~` or `regex~`. For more information, see the
{ref}/eql-syntax.html#eql-syntax-pattern-comparison-keywords[Pattern comparison
keywords] section of the {ref}/eql-syntax.html[EQL syntax documentation].
// end::notable-highlights[]
