[[release-highlights]]
== What's new in {minor-version}

coming[{minor-version}]

Here are the highlights of what's new and improved in {es} {minor-version}!

For detailed information about this release, see the <<es-release-notes>> and
<<breaking-changes>>.

// Add previous release to the list
Other versions:
{ref-bare}/7.11/release-highlights.html[7.11]
| {ref-bare}/7.10/release-highlights.html[7.10]
| {ref-bare}/7.9/release-highlights.html[7.9]
| {ref-bare}/7.8/release-highlights.html[7.8]
| {ref-bare}/7.7/release-highlights.html[7.7]
| {ref-bare}/7.6/release-highlights-7.6.0.html[7.6]
| {ref-bare}/7.5/release-highlights-7.5.0.html[7.5]
| {ref-bare}/7.4/release-highlights-7.4.0.html[7.4]
| {ref-bare}/7.3/release-highlights-7.3.0.html[7.3]
| {ref-bare}/7.2/release-highlights-7.2.0.html[7.2]
| {ref-bare}/7.1/release-highlights-7.1.0.html[7.1]
| {ref-bare}/7.0/release-highlights-7.0.0.html[7.0]

// tag::notable-highlights[]
[discrete]
[[eql-case-insensitivity]]
=== EQL: Case-insensitive `in` lookups and functions

The `in` and `not in` {ref}/eql-syntax.html#eql-syntax-lookup-operators[lookup
operators] now support case-insensitive variants: `in~` and `not in~`. You can
also {ref}/eql-syntax.html#eql-case-insensitive-functions[make an EQL function
case-insensitive] by adding `~` after the function name, such as
`endsWith~(process_name, ".exe")`.

[discrete]
[[eql-like-regex-keywords]]
=== EQL: `like` and `regex` keywords

In 7.12, we added the `like` and `regex` keywords to EQL. You can use the `like`
keyword to match strings to {ref}/eql-syntax.html#eql-syntax-wildcards[wildcard
patterns], such as `foo*` or `ba?`. You can use the `regex` keyword to match
strings to regular expressions. You can use both `like` and `regex` to match a
string against a list of patterns.

By default, both keywords are case-sensitive. For case-insensitive matching, use
`like~` or `regex~`. For more information, see the
{ref}/eql-syntax.html#eql-syntax-pattern-comparison-keywords[Pattern comparison
keywords] section of the {ref}/eql-syntax.html[EQL syntax documentation].

[discrete]
[[retention-policy-transforms]]
=== Retention policy for transforms

{ctransforms-cap} add new data to the destination index as new entities are 
encountered. 7.12 introduces a data retention policy for {transforms} that 
enables you to delete old data. This is especially useful for the `latest` 
{transform} that has been added in 7.11. For example, if you collect the latest 
host information you might want to assume hosts have been decommissioned if they 
have not appeared in the logs for more than 30 days. At each checkpoint, 
transformed documents whose age is greater than a configured value are deleted.

[discrete]
[[hyperparameter-importance]]
=== Hyperparameter importance

{dfanalytics-cap} training is influenced by settings called hyperparameters. One 
of the training outputs is now hyperparameter importance. This value shows which 
hyperparameter had the most impact on the training, and what the optimum values 
were for each one. You can use this information to speed up the training process 
as the hyperparameter optimization process can be stopped when you see that 
gains in accuracy flatten.

[discrete]
[[search-time-runtime-support-transform]]
=== Search-time runtime fields support for {transforms}

You can now use `runtime_mappings` in {transforms} to support search-time 
runtime fields in searches of the source index. The syntax is the same as for a 
standard search. After specifying them, the runtime fields can be used in the 
rest of the {transform} configuration.
// end::notable-highlights[]