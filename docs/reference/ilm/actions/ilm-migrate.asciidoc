[role="xpack"]
[[ilm-migrate]]
=== Migrate

Phases allowed: warm, cold.

Updates the <<tier-preference-allocation-filter, `index.routing.allocation.include._tier_preference`>>
index setting in order to migrate the index to the <<modules-tiers, data tier>> corresponding
to the current phase.

If the `migrate` action is executed in the Warm phase, the
<<tier-preference-allocation-filter, `index.routing.allocation.include._tier_preference`>>
index setting will be configured to `data_warm, data_hot`, targeting the
<<warm-tier, warm tier>> if it is available or otherwise falling back to the
<<hot-tier, hot tier>>.

If the `migrate` action is executed in the Cold phase, the
<<tier-preference-allocation-filter, `index.routing.allocation.include._tier_preference`>>
index setting will be configured to `data_cold, data_warm, data_hot`, targeting the
<<cold-tier, cold tier>> if it is available or otherwise falling back to the
<<warm-tier, warm>> or <<hot-tier, hot>> tier, depending on which is available.

The migrate action is not allowed in the hot phase.
The initial index to tier allocation is performed <<data-tier-allocation, automatically>>,
unless it's configured manually or via <<indices-templates, index templates>>

[[ilm-migrate-options]]
==== Options

You can optionally disable the `migrate` action using the
`enabled` option.
An empty migrate action is enabled.

`enabled`::
(Optional, boolean)
Controls whether the index migration to data tiers is enabled or not.
Defaults to `true`.

[[ilm-automatic-index-migration]]
==== Automatic index migration

ILM will automatically inject the migrate action in the warm and cold
phases unless the phase contains an <<ilm-allocate, allocate action>> with
allocation rules defined or the migrate action is defined explicitly.

Defining an <<ilm-allocate, allocate action>> that only modifies the number of index
replicas will not prevent the migrate action from automatically being
injected into the allowed phases. In this case the <<ilm-allocate, allocate action>>
executes before the migate action providing the ability to reduce the number
of replicas before migrating the index to a different data tier.

Manually specifying an enabled migrate action and an allocate action
that defines allocation rules is prohibited. If modifying the allocation
rules via the <<ilm-allocate, allocate action>> is desired define the
migrate action with the `enabled` flag set to `false`.

[[ilm-enabled-migrate-ex]]
==== Example

The migrate action in the following policy is enabled and
the number of replicas for the index is manipulated using
the allocate action.

NOTE: ILM would've injected the migrate action automatically
in the following policy even if it wasn't manually defined.

[source,console]
--------------------------------------------------
PUT _ilm/policy/my_policy
{
  "policy": {
    "phases": {
      "warm": {
        "actions": {
          "migrate" : {
          },
          "allocate": {
            "number_of_replicas": 1
          }
        }
      }
    }
  }
}
--------------------------------------------------

[[ilm-disabled-migrate-ex]]
==== Disabled migrate action example

The migrate action in the following policy is disabled and
the allocate action assigns the index to nodes that have a
`rack_id` of _one_ or _two_.

[source,console]
--------------------------------------------------
PUT _ilm/policy/my_policy
{
  "policy": {
    "phases": {
      "warm": {
        "actions": {
          "migrate" : {
           "enabled": false
          },
          "allocate": {
            "include" : {
              "rack_id": "one,two"
            }
          }
        }
      }
    }
  }
}
--------------------------------------------------
