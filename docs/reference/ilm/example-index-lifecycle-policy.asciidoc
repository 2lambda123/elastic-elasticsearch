[role="xpack"]

[[example-using-index-lifecycle-policy]]
=== Tutorial: Customize built-in {ilm-init} policies
++++
<titleabbrev>Customize built-in {ilm-init} policies</titleabbrev>
++++

{es} includes the following built-in {ilm-init} policies:

* `logs`
* `metrics`
* `synthetics`

The {agent} uses these policies to manage backing indices for its data streams.
This tutorial shows you how to use {kib}’s *Index Lifecycle Policies* to
customize these policies based on your application's performance, resilience,
and retention requirements.


[discrete]
[[example-using-index-lifecycle-policy-scenario]]
==== Scenario

You’re tasked with sending log files to an {es} cluster. This log data has the
following data retention requirements:

* Keep logs on the hot data tier for 30 days
* Roll over to a new index if the size reaches 50GB
* After 30 days:
** Move the logs to the warm data tier
** Set <<glossary-replica-shard, replica shards>> to 1
** <<indices-forcemerge, Force merge>> multiple index segments to free up the
space used by deleted documents
* Delete logs after 90 days


[discrete]
[[example-using-index-lifecycle-policy-prerequisites]]
==== Prerequisites

To complete this tutorial, you'll need:

* An {es} cluster with hot and warm data tiers.

** {ess}:
Elastic Stack deployments on {ess} include a hot data tier by default. To add
warm data tier, edit your deployment and click **Add capacity**
under the **Warm data tier**.
+
[role="screenshot"]
image::images/ilm/tutorial-ilm-ess-add-warm-data-tier.png[Add a warm data tier to your deployment]

** Self-managed cluster:
Assign nodes the `data_hot` and `data_warm` node roles as described in
<<data-tiers>>.
+
For example, include the `data_warm` node role in the `elasticsearch.yml` file
of each node in the warm tier:
+
[source,yaml]
----
node.roles: [ "data_warm" ]
----

* A host with the {agent} installed and configured to send logs to your {es}
cluster.

[discrete]
[[example-using-index-lifecycle-policy-view-ilm-policy]]
==== View the `logs` {ilm-init} policy

The {agent} uses data streams with an index pattern of `logs-*-*` to store log
monitoring data. {es}'s built-in `logs` {ilm-init} policy automatically manages
backing indices for these data streams.

To view the `logs` policy in {kib}:

. Open the menu and go to **Stack Management > Index Lifecycle Policies**.
. Select the `logs` policy.

The `logs` policy uses our recommended rollover defaults. These defaults
initiates a rollover when the current write index size reaches 50GB or becomes
30 days old.

To confirm these rollover settings, click **Settings** under the **Hot phase**.
Then disable **Use recommended defaults**.

[role="screenshot"]
image::images/ilm/tutorial-ilm-hotphaserollover-default.png[View rollover defaults]

[discrete]
[[ilm-ex-modify-policy]]
==== Modify the `logs` policy

The default `logs` policy is enough to prevent the creation of many tiny daily
indices. You can modify the policy to meet more complex requirements.

. Activate the warm phase and click **Settings**.
+
--
[role="screenshot"]
image::images/ilm/tutorial-ilm-modify-default-warm-phase-rollover.png[Add a warm phase with custom settings]

.. Set one of the following options to control when the index moves to the warm
phase:

*** Provide a value for *Move data into phase when*. Setting this to *30 days*
keeps the indices on hot nodes for 30 days.

.. Enable **Replicas** and change *Number of replicas* to *1*.

.. Enable *Force merge* and set *Number of segments* to *1*.
--

. Activate the delete phase and set *Move data into phase when* to *90* days.
+
[role="screenshot"]
image::images/ilm/tutorial-ilm-delete-rollover.png[Add a delete phase]

. Click **Save Policy**.
