[role="xpack"]
[testenv="basic"]
[[rollup-get-rollup-caps]]
=== Get rollup job capabilities API
++++
<titleabbrev>Get rollup caps</titleabbrev>
++++

Returns the capabilities of any rollup jobs that have been configured for a
specific index or index pattern.

experimental[]
////
[float]
[[sample-api-request]]
==== {api-request-title}
// This section show the basic endpoint, without the body or optional parameters.
// Variables should use <...> syntax
// If an API supports both PUT and POST, include both here

`PUT /<follower_index>/_ccr/follow`

[float]
[[sample-api-prereqs]]
==== {api-prereq-title}
// Optional list of prerequisites.

[float]
[[sample-api-desc]]
==== {api-description-title}
// Add a more detailed description the context.
// Link to related APIs if appropriate.

[float]
[[sample-api-path-params]]
==== {api-path-parms-title}
// A list of all path parameters in the endpoint request

[float]
[[sample-api-query-params]]
==== {api-query-parms-title}
// A list of optional query parameters 

[float]
[[sample-api-request-body]]
==== {api-request-body-title}
// A list of the properties you can specify in the body of the request

[float]
[[sample-api-response-body]]
==== {api-response-body-title}
// Response body is only required for detailed responses.

[float]
[[sample-api-example]]
==== {api-example-title}
// Optional brief example.

////

[discrete]
[[get-rollup-caps-request]]
==== Request

`GET _rollup/data/<index>`

[discrete]
[[get-rollup-caps-prereqs]]
==== Prerequisites

If the {es} {security-features} are enabled, you must have `monitor`,
`monitor_rollup`, `manage` or `manage_rollup` cluster privileges to use this API.
For more information, see
{stack-ov}/security-privileges.html[Security privileges].

[discrete]
[[get-rollup-caps-desc]]
==== Description

This API is useful because a rollup job is often configured to rollup only a
subset of fields from the source index. Furthermore, only certain aggregations
can be configured for various fields, leading to a limited subset of
functionality depending on that configuration.

This API enables you to inspect an index and determine:

1. Does this index have associated rollup data somewhere in the cluster?
2. If yes to the first question, what fields were rolled up, what aggregations
can be performed, and where does the data live?

[discrete]
[[get-rollup-caps-params]]
==== Path parameters

`index`::
  (string) Index, indices or index-pattern to return rollup capabilities for.
  To fetch rollup capabilities from all jobs, use `_all`.
  
[discrete]
[[get-rollup-caps-response-body]]
==== Response body

The API returns the following information:

`rollup_jobs`::
  (array) An array of rollup job resources. For more information, see
  <<rollup-jobs-objects>>.

[discrete]
[[get-rollup-caps-examples]]
==== Examples

Imagine we have an index named `sensor-1` full of raw data. We know that the
data will grow over time, so there will be a `sensor-2`, `sensor-3`, etc.  Let's
create a rollup job that targets the index pattern `sensor-*` to accommodate
this future scaling:

[source,js]
--------------------------------------------------
PUT _rollup/job/sensor
{
    "index_pattern": "sensor-*",
    "rollup_index": "sensor_rollup",
    "cron": "*/30 * * * * ?",
    "page_size" :1000,
    "groups" : {
      "date_histogram": {
        "field": "timestamp",
        "fixed_interval": "1h",
        "delay": "7d"
      },
      "terms": {
        "fields": ["node"]
      }
    },
    "metrics": [
        {
            "field": "temperature",
            "metrics": ["min", "max", "sum"]
        },
        {
            "field": "voltage",
            "metrics": ["avg"]
        }
    ]
}
--------------------------------------------------
// CONSOLE
// TEST[setup:sensor_index]

We can then retrieve the rollup capabilities of that index pattern (`sensor-*`)
via the following command:

[source,js]
--------------------------------------------------
GET _rollup/data/sensor-*
--------------------------------------------------
// CONSOLE
// TEST[continued]

Which will yield the following response:

[source,js]
----
{
  "sensor-*" : {
    "rollup_jobs" : [
      {
        "job_id" : "sensor",
        "rollup_index" : "sensor_rollup",
        "index_pattern" : "sensor-*",
        "fields" : {
          "node" : [
            {
              "agg" : "terms"
            }
          ],
          "temperature" : [
            {
              "agg" : "min"
            },
            {
              "agg" : "max"
            },
            {
              "agg" : "sum"
            }
          ],
          "timestamp" : [
            {
              "agg" : "date_histogram",
              "time_zone" : "UTC",
              "fixed_interval" : "1h",
              "delay": "7d"
            }
          ],
          "voltage" : [
            {
              "agg" : "avg"
            }
          ]
        }
      }
    ]
  }
}
----
// TESTRESPONSE

The response that is returned contains information that is similar to the
original rollup configuration, but formatted differently.  First, there are some
house-keeping details: the rollup job's ID, the index that holds the rolled data,
the index pattern that the job was targeting.

Next it shows a list of fields that contain data eligible for rollup searches. 
Here we see four fields: `node`, `temperature`, `timestamp` and `voltage`. Each
of these fields list the aggregations that are possible. For example, you can
use a min, max or sum aggregation on the `temperature` field, but only a
`date_histogram` on `timestamp`.

Note that the `rollup_jobs` element is an array; there can be multiple,
independent jobs configured for a single index or index pattern. Each of these
jobs may have different configurations, so the API returns a list of all the
various configurations available.

We could also retrieve the same information with a request to `_all`:

[source,js]
--------------------------------------------------
GET _rollup/data/_all
--------------------------------------------------
// CONSOLE
// TEST[continued]

If we use the concrete index name (`sensor-1`):

[source,js]
--------------------------------------------------
GET _rollup/data/sensor-1
--------------------------------------------------
// CONSOLE
// TEST[continued]

...we retrieve no rollup capabilities:

[source,js]
----
{

}
----
// TESTRESPONSE

Why is this?  The original rollup job was configured against a specific index
pattern (`sensor-*`) not a concrete index (`sensor-1`). So while the index
belongs to the pattern, the rollup job is only valid across the entirety of the
pattern not just one of its containing indices. So for that reason, the get
rollup capabilities API returns only information that is based on the originally
configured index name or pattern.
