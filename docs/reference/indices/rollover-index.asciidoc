[[indices-rollover-index]]
== Rollover index API
++++
<titleabbrev>Rollover index</titleabbrev>
++++

Points an <<indices-aliases,index alias>> to a new index when the existing index
meets a condition you provide.

[float]
[[indices-rollover-index-request]]
=== {api-request-title}

`POST /<alias>/_rollover/<new-index>`

[float]
[[indices-rollover-index-desc]]
=== {api-description-title}

include::{docdir}/administering/rollover-index.asciidoc[tag=rollover-index-intro]

[float]
[[indices-rollover-index-path-params]]
=== {api-path-parms-title}

`<alias>` (Required)::
+
--
(string) <<indices-aliases,Index alias>> you wish to point to a new index.

The alias must point to a write index to successfully roll over an index.

You can achieve this in two ways, depending on your configuration:

- The alias points to a single index and the index's `is_write_index` setting is
`false` ornot configured (defaults to `null`).
+
In this scenario, the original index will have their rollover alias will be
added to the newly created index, and removed from the original (rolled-over)
index.

- The alias points to one or more indices and the index to be rolled has a
`is_write_index` setting of `true`.
+
In this scenario, the write index will have its rollover alias' `is_write_index`
set to `false`, while the newly created index will now have the rollover alias
pointing to it as the write index with `is_write_index` as `true`.
--

`<new-index>` (Optional)::
+
--
(string) Name of the new index for the `<alias>`.

This cannot be an existing index. If this index exists prior to the request,
{es} returns an error.

If no `<new-index>` is provided and the `<alias>` points to an existing index
that ends with with `-` and a number, such as `logs-000001`, the name of the nex
index follows the same pattern and increments the number, such as `logs-000002`.
The number is zero-padded with a length of 6, regardless of the existing index's
name.
--

[float]
[[indices-rollover-indexi-query-params]]
==== {api-query-parms-title}

`dry_run` (Optional)::
+
--
(boolean) Indicates whether the request only checks for matching rollover
conditions. Defaults to `false`.

If `true`, the index alias will **not** rollover, even if a condition in
`conditions` matches.
--

`include_type_name` (Optional)::
+
--
(boolean) Indicates whether the type name is included in the response. Defaults
to `false`.

NOTE: Before 7.0.0, the 'mappings' definition used to include a type name.
Although mappings in responses no longer contain a type name by default, you can
still request the old format through the parameter include_type_name. For more
details, please see <<removal-of-types>>.
--

`wait_for_active_shards` (Optional)::
(integer) Number of active shard copies required to start before returning a
response. See <<index-wait-for-active-shards>>.

include::{docdir}/rest-api/timeoutparms.asciidoc[]

[float]
[[indices-rollover-index-request-body]]
==== {api-request-body-title}

`conditions` (Required)::
(object) Defines the conditions an index can meet to roll over an alias.  If an
index meets any of these conditions when you call the roll over API, {es}
points the provided alias to a new index. See <<index-apis-conditions>>.

[float]
[[indices-rollover-index-example]]
==== {api-examples-title}

////
[source,js]
----
PUT /logs-000001
{
  "aliases": {
    "logs_write": {}
  }
}

POST _reindex?refresh
{
  "source": {
    "index": "twitter"
    },
  "dest": {
    "index": "logs-000001"
  }
}
----
// CONSOLE
// TEST[setup:huge_twitter]
////

[source,js]
----
POST /logs_write/_rollover/logs-000002
{
  "conditions": {
    "max_age":   "7d",
    "max_docs":  1000,
    "max_size":  "5gb"
  }
}
----
// CONSOLE
// TEST[continued]

The API returns the following response:

[source,js]
----
{
  "acknowledged": true,
  "shards_acknowledged": true,
  "old_index": "logs-000001",
  "new_index": "logs-000002",
  "rolled_over": true,
  "dry_run": false,
  "conditions": {
    "[max_age: 7d]": false,
    "[max_docs: 1000]": true,
    "[max_size: 5gb]": false,
  }
}
----
// TESTRESPONSE
