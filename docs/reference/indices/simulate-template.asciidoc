[[indices-simulate-template]]
=== Simulate index template API
++++
<titleabbrev>Simulate template</titleabbrev>
++++

experimental[]

Returns the index settings that would be applied by a particular 
<<indices-templates, index template>>.

////
[source,console]
--------------------------------------------------
PUT _component_template/component_template1
{
  "template": {
    "mappings": {
      "properties": {
        "@timestamp": {
          "type": "date"
        }
      }
    }
  }
}

PUT _component_template/other_component_template
{
  "template": {
    "mappings": {
      "properties": {
        "ip_address": {
          "type": "ip"
        }
      }
    }
  }
}

PUT _index_template/template_1
{
  "index_patterns": ["te*", "bar*"],
  "template": {
    "settings": {
      "number_of_shards": 1
    },
    "mappings": {
      "_source": {
        "enabled": false
      },
      "properties": {
        "host_name": {
          "type": "keyword"
        },
        "created_at": {
          "type": "date",
          "format": "EEE MMM dd HH:mm:ss Z yyyy"
        }
      }
    },
    "aliases": {
      "mydata": { }
    }
  },
  "priority": 10,
  "composed_of": ["component_template1", "other_component_template"],
  "version": 3,
  "_meta": {
    "description": "my custom"
  }
}
--------------------------------------------------
// TESTSETUP

[source,console]
--------------------------------------------------
DELETE _index_template/*
DELETE _component_template/*
--------------------------------------------------
// TEARDOWN
////

[source,console]
--------------------------------------------------
POST /_index_template/_simulate/template_1
--------------------------------------------------

[[simulate-template-api-request]]
==== {api-request-title}

`POST /_index_template/_simulate/<index-template>`


[[simulate-template-api-path-params]]
==== {api-path-parms-title}

`<index-template>`::
(Optional, string)
The name of the index template to simulate.
To simulate an arbitrary template configuration, 
omit this parameter and specify the template configuration in the request body.

[[simulate-template-api-query-params]]
==== {api-query-parms-title}

`cause`::
(Optional, string) The reason for using the specified template for the simulation. 

`create`::
(Optional, boolean) If `true`, the template passed in the body is 
only used if no existing template matches the same index pattern. 
If `false`, the template with the highest priority is used for the simulation.
Note that the template is not permanently added or updated in either case, 
it is only used for the simulation.
Defaults to `false`.

include::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=master-timeout]

[[simulate-template-api-request-body]]
==== {api-request-body-title}

`composed_of`::
(Optional, array of strings)
An ordered list of component template names. Component templates are merged in the order
specified, meaning that the last component template specified has the highest precedence. See 
<<multiple-component-templates,Composing multiple component templates>> for an example.

`index_patterns`::
(Required, array of strings)
Array of wildcard expressions
used to match the names of indices during creation.

`priority`::
(Optional, integer)
Priority to determine index template precedence when a new index is created. The index template with
the highest priority is chosen. If no priority is specified the template is treated as though it is
of priority 0 (lowest priority).
This number is not automatically generated by {es}.

`template`::
(Optional, object)
This is the template to be applied, may optionally include a `mappings`,
`settings`, or `aliases` configuration.

`version`::
(Optional, integer)
Version number used to manage index templates externally.
This number is not automatically generated by {es}.

`_meta`::
(Optional, object)
Optional user metadata about the index template. May have any contents.
This map is not automatically generated by {es}.

[[simulate-template-api-response-body]]
==== {api-response-body-title}

`overlapping`::
(array) Any templates that were superseded by the specified template.
+
.Properties of `overlapping`
[%collapsible%open]
====
`name`::
(string) The name of the superseded template.

`index_patterns`:: 
(array) The index patterns that the superseded template applies to.
====

`template`::
The template settings, mappings, and aliases that would be applied to matching indices. 

[[simulate-template-api-example]]
==== {api-examples-title}

[[simulate-existing-template-ex]]
===== Simulating an existing template

The following example creates and simulates a composed template:

[source,console]
--------------------------------------------------
PUT /_component_template/ct1                   <1>
{
  "template": {
    "settings": {
      "index.number_of_shards": 2
    }
  }
}

PUT /_component_template/ct2                    <2>
{
  "template": {
    "settings": {
      "index.number_of_replicas": 0
    },
    "mappings": {
      "properties": {
        "@timestamp": {
          "type": "date"
        }
      }
    }
  }
}

PUT /_index_template/final-template            <3>
{
  "index_patterns": ["logdata-*"],
  "composed_of": ["ct1", "ct2"],
  "priority": 5
}

POST /_index_template/_simulate/final-template <4>
--------------------------------------------------
<1> Creating a component template (ct1) setting the number of shards to two
<2> Creating another component template (ct2) setting the number of replicas to zero with mappings
<3> Creating an index template called "final" template using ct1 and ct2
<4> Simulate the settings composed using the "final-template" index template

The response shows the index settings, mappings, and aliases applied by the final-template:

[source,console-result]
---------------------------------------------------------
{
  "template" : {
    "settings" : {
      "index" : {
        "number_of_replicas" : "0", <1>
        "number_of_shards" : "2"   <2>
      }
    },
    "mappings": {                  <3>
      "properties": {
        "@timestamp": {
          "type": "date"
        }
      }
    },
    "aliases" : { }
  }
}
---------------------------------------------------------
<1> The number of replicas from `ct2`
<2> The number of shards from `ct1`
<3> The mappings from `ct1`


[[simulate-template-config-ex]]
===== Simulating an arbitrary template configuration

If you pass a template configuration in the request body, 
it is used for the simulation if it has a higher priority than existing templates.

[source,console]
--------------------------------------------------
POST /_index_template/_simulate
{
  "index_patterns": ["logdata-*"],
  "composed_of": ["ct2"],
  "priority": 10,
  "template": {
    "settings": {
      "index.number_of_replicas": 1
    }
  }
}
--------------------------------------------------
// TEST[continued]

The response shows any overlapping templates with a lower priority.

[source,console-result]
---------------------------------------------------------
{
  "template" : {
    "settings" : {
      "index" : {
        "number_of_replicas" : "1" <1>
      }
    },
    "mappings" : {
      "properties" : {
        "@timestamp" : { <2>
          "type" : "date"
        }
      }
    },
    "aliases" : { }
  },
  "overlapping" : [ <3>
    {
      "name" : "final-template",
      "index_patterns" : [
        "logdata-*"
      ]
    }
  ]
}
---------------------------------------------------------
<1> The number of replicas from the simulated template body
<2> The `@timestamp` field inherited from the "ct2" component template
<3> Any overlapping templates that would have matched, but have lower priority

