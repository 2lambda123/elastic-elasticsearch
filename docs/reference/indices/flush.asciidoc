[[indices-flush]]
=== Flush API
++++
<titleabbrev>Flush</titleabbrev>
++++

Flushes one or more indices.

[source,js]
--------------------------------------------------
POST /twitter/_flush
--------------------------------------------------
// CONSOLE
// TEST[setup:twitter]


[[flush-api-request]]
==== {api-request-title}

`POST /<index>/flush`

`GET /<index>/flush`

`POST /flush`

`GET /flush`


[[flush-api-desc]]
==== {api-description-title}

The flush API allows to flush one or more indices through an API. The
flush process of an index makes sure that any data that is currently only
persisted in the <<index-modules-translog,transaction log>> is also permanently
persisted in Lucene. This reduces recovery times as that data doesn't need to be
reindexed from the transaction logs after the Lucene indexed is opened. By
default, Elasticsearch uses heuristics in order to automatically
trigger flushes as required. It is rare for users to need to call the API directly.


[[flush-api-path-params]]
==== {api-path-parms-title}

include::{docdir}/rest-api/common-parms.asciidoc[tag=index]
+
To flush all indices,
omit this parameter
or use a value of `_all` or `*`.


[[flush-api-query-params]]
==== {api-query-parms-title}

include::{docdir}/rest-api/common-parms.asciidoc[tag=allow-no-indices]

include::{docdir}/rest-api/common-parms.asciidoc[tag=expand-wildcards]
+
Defaults to `open`.

`force`::
+
--
(Optional, boolean)
If `true`,
the request forces a flush
even if there are no changes to commit to the index.
Defaults to `true`.

You can use this parameter
to increment the generation number of the transaction log.

This parameter is considered internal.
--


include::{docdir}/rest-api/common-parms.asciidoc[tag=index-ignore-unavailable]

`wait_if_ongoing`::
+
--
(Optional, boolean)
If `true`,
the flush operation blocks until execution
when another flush operation is running.


If `false`,
{es} returns an error
if you request a flush
when another flush operation is running.

Defaults to `true`.
--


[[flush-api-example]]
==== {api-examples-title}


[[flush-api-specific-ex]]
===== Flush a specific index

[source,js]
----
POST /kimchy/_flush
----
// CONSOLE
// TEST[s/^/PUT kimchy\n/]


[[flush-multi-index]]
===== Flush several indices

[source,js]
----
POST /kimchy,elasticsearch/_flush
----
// CONSOLE
// TEST[s/^/PUT kimchy\nPUT elasticsearch\n/]


[[flush-api-all-ex]]
===== Flush all indices

[source,js]
----
POST /_flush
----
// CONSOLE
