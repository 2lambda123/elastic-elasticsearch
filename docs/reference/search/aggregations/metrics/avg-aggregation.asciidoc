[[search-aggregations-metrics-avg-aggregation]]
=== Avg

A `single-value` metrics aggregation that computes the average of numeric values that are extracted from the aggregated documents. These values can be extracted either from specific numeric fields in the documents, or be generated by a provided script.

Assuming the data consists of documents representing exams grades (between 0 and 100) of students

[source,js]
--------------------------------------------------
{
    "aggs" : {
        "avg_grade" : { "avg" : { "field" : "grade" } }
    }
}
--------------------------------------------------

The above aggregation computes the average grade over all documents. The aggregation type is `avg` and the `field` setting defines the numeric field of the documents the average will be computed on. The above will return the following:


[source,js]
--------------------------------------------------
{
    ...

    "aggregations": {
        "avg_grade": {
            "value": 75
        }
    }
}
--------------------------------------------------

The name of the aggregation (`avg_grade` above) also serves as the key by which the aggregation result can be retrieved from the returned response.

==== Script

Computing the average grade based on a script:

[source,js]
--------------------------------------------------
{
    ...,

    "aggs" : {
        "avg_grade" : { "avg" : { "script" : "doc['grade'].value" } }
    }
}
--------------------------------------------------

===== Value Script

It turned out that the exam was way above the level of the students and a grade correction needs to be applied. We can use value script to get the new average:

[source,js]
--------------------------------------------------
{
    "aggs" : {
        ...

        "aggs" : {
            "avg_corrected_grade" : { 
                "avg" : { 
                    "field" : "grade",
                    "script" : "_value * correction",
                    "params" : {
                        "correction" : 1.2
                    }
                } 
            }
        }
    }
}
--------------------------------------------------

[[search-aggregations-metrics-avg-aggregation-track-missing]]
==== Track Missing
added[1.2.0]

Like all other values source aggregations (those aggregations that are either based on document fields or on scripts) this
aggregation supports the `track_missing` setting. This setting serves as a syntactic sugar for adding a `missing`
aggregation as a sibling to this one. Behind the scenes, this flag will in fact create a normal `missing` aggregation, that
will appear in the response like a normal `missing` aggregation response. When `track_missing` is set to `true`, the name
of the created `missing` aggregation is derived from the name of this `avg` aggregation (e.g. if this `avg` aggregation
is called `avg_grade`, the name of the corresponding `missing` aggregation will be named `avg_grade_missing`. It is
also possible to just provide the name of the aggregation as the value of the `track_missing` field (that is, the `track_missing`
settings can either accepts `true|false` values or a `string` indicating the name of the `missing` aggregation.

[source,js]
--------------------------------------------------
{
    "aggs" : {
        "avg_grade" : {
            "avg" : {
                "field" : "grade",
                "track_missing" : true
            }
        }
    }
}
--------------------------------------------------

Response:

[source,js]
--------------------------------------------------
{
    ...

    "aggregations": {
        "avg_grade_missing" : {
            "value" : 4 <1>
        },
        "avg_grade": {
            "value": 75
        }
    }
}
--------------------------------------------------

<1> 4 documents are not associated with a grade

If `term_missing` is set to a string value, say `"no_grades"`, the response would then be:

[source,js]
--------------------------------------------------
{
    ...

    "aggregations": {
        "no_grades" : {
            "value" : 4
        },
        "avg_grade": {
            "value": 75
        }
    }
}
--------------------------------------------------