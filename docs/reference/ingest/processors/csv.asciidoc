[[csv-processor]]
=== CSV Processor
Extracts fields from CSV line out of a single text field within a document. Any empty field in CSV will be skipped.

[[csv-options]]
.CSV Options
[options="header"]
|======
| Name              | Required  | Default  | Description
| `field`           | yes       | -        | The field to extract data from
| `target_fields`   | yes       | -        | The array of fields to assign extracted values to
| `separator`       | no        | ,        | Separator used in CSV, has to be single character string
| `quote`           | no        | "        | Quote used in CSV, has to be single character string
| `ignore_missing`  | no        | `true`   | If `true` and `field` does not exist, the processor quietly exits without modifying the document
| `trim`            | no        | `false`  | Trim leading whitespaces in every field
include::common-options.asciidoc[]
|======

[source,js]
--------------------------------------------------
{
  "csv": {
    "field": "my_field",
    "target_fields": ["field1, field2"],
  }
}
--------------------------------------------------
// NOTCONSOLE

If the `trim` option is enabled any whitespace in the beginning of each unquoted field will be trimmed. It will also allow
whitespaces before quoted fields. For example with configuration above, a value of `A, B` will result in field `field2`
having value `{nbsp}B` (with space at the beginning) and value of `A, "B"` will throw exception. If `trim` is enabled `A, B` will result in field `field2`
having value `B` (no whitespace) and `A, "B"` will work.
