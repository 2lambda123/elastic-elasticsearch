
// tag::cloud[]
include::{docs-root}/shared/cloud/ess-getting-started.asciidoc[tag=generic]

. Click **Continue** to open {kib}, AKA the user interface for {ecloud}.

. Click **Explore on my own**.
// end::cloud[]

// tag::self-managed[]
*Start a single-node cluster*

We'll use a single-node {es} cluster in this quick start, which makes sense for testing and development.
Refer to <<docker>> for advanced Docker documentation.

. Create a new docker network.
+
[source,sh]
----
docker network create elastic
----

. Pull the {es} Docker image.
+
--
ifeval::["{release-state}"=="unreleased"]
WARNING: Version {version} has not yet been released.
No Docker image is currently available for {es} {version}.
endif::[]

[source,sh,subs="attributes"]
----
docker pull {docker-image}
----
--

. Start an {es} container.
+
[source,sh,subs="attributes"]
----
docker run --name es01 --net elastic -p 9200:9200 -it -m 1GB {docker-image}
----
+
TIP: Use the `-m` flag to set a memory limit for the container. This removes the
need to <<docker-set-heap-size,manually set the JVM size>>.
+
The command prints the `elastic` user password and an enrollment token for {kib}.

. Copy the generated `elastic` password and enrollment token. These credentials
are only shown when you start {es} for the first time.
+
We recommend storing the `elastic` password as an environment variable in your shell. Example:
+
[source,sh]
----
export ELASTIC_PASSWORD="your_password"
----

. Copy the `http_ca.crt` SSL certificate from the container to your local machine.
+
[source,sh]
----
docker cp es01:/usr/share/elasticsearch/config/certs/http_ca.crt .
----

. Make a REST API call to {es} to ensure the {es} container is running.
+
[source,sh]
----
curl --cacert http_ca.crt -u elastic:$ELASTIC_PASSWORD https://localhost:9200
----
// NOTCONSOLE

*Run {kib}*

{kib} is the user interface for Elastic. You can use {kib} to explore your {es} data and manage your cluster.
Specifically, we'll be using the Dev Tools *Console* in {kib} to make REST API calls to {es}.

. Pull the {kib} Docker image.
+
--
ifeval::["{release-state}"=="unreleased"]
WARNING: Version {version} has not yet been released.
No Docker image is currently available for {kib} {version}.
endif::[]

[source,sh,subs="attributes"]
----
docker pull {kib-docker-image}
----
--

. Start a {kib} container.
+
[source,sh,subs="attributes"]
----
docker run --name kib01 --net elastic -p 5601:5601 {kib-docker-image}
----

. When {kib} starts, it outputs a unique generated link to the terminal. To
access {kib}, open this link in a web browser.

. In your browser, enter the enrollment token that was generated when you started {es}.
+
To regenerate the token, run:
+
[source,sh]
----
docker exec -it es01 /usr/share/elasticsearch/bin/elasticsearch-create-enrollment-token -s kibana
----

. Log in to {kib} as the `elastic` user with the password that was generated
when you started {es}.
+
To regenerate the password, run:
+
[source,sh]
----
docker exec -it es01 /usr/share/elasticsearch/bin/elasticsearch-reset-password -u elastic
----
// end::self-managed[]