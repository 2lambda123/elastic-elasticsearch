// tag::cloud[]
In order to get the shards assigned we'll need to increase the number of shards 
that can be collocated on a node in order to get all shards assigned. 
Note that this requires the current data nodes having enough disk space to host 
all the data.
If the current deployment configuration doesn't have enough capacity to store
all the data, including the unassigned shards, please contact 
https://support.elastic.co[Elastic Support] to discuss available options.

**Use {kib}**

//tag::kibana-api-ex[]
. Open {kib}'s main menu and go to **Dev Tools > Console**.
+
[role="screenshot"]
image::images/kibana-console.png[{kib} Console,align="center"]

. Inspect the `index.routing.allocation.total_shards_per_node` <<indices-get-settings, index setting>> 
for the index with unassigned shards:
+
[source,console]
----
GET /my-index-000001/_settings/index.routing.allocation.total_shards_per_node
----
// TEST[setup:my_index]

. <<indices-update-settings,Increase>> the maximum number of shards that can be assigned on one node or
reset the value to unbounded (`-1`):
+
[source,console]
----
PUT /my-index-000001/_settings
{
  "index" : {
    "routing.allocation.total_shards_per_node" : -1
  }
}
----
// TEST[setup:my_index]

//end::kibana-api-ex[]
// end::cloud[]

// tag::self-managed[]
In order to get the shards assigned you can add more nodes to your {es} cluster 
and assing the indexs target tier <<assign-data-tier, node role>> to the new 
nodes. 

To inspect which tier is an index targeting for assignemnt, use the <<indices-get-settings, get index setting>>
API to retrieve the configured value for the `index.routing.allocation.include._tier_preference`
setting:

[source,console]
----
GET /my-index-000001/_settings/index.routing.allocation.include._tier_preference
----
// TEST[setup:my_index]

This will likely return a comma separated list of data tier node roles, the first
one in the list being the one with the higher priority i.e. the tier the index is
targeting.
e.g. if the tier preference is `data_warm,data_hot` the index is targeting the
`warm` tier and more nodes with the `data_warm` role are needed in the {es}
cluster.

Alternatively, if adding more nodes to the {es} cluster is not desired,
inspecting the configuration for the `index.routing.allocation.total_shards_per_node` 
<<indices-get-settings, index setting>> and increasing the configured value will 
allow more shards to be assigned on the same node.

. Inspect the `index.routing.allocation.total_shards_per_node` <<indices-get-settings, index setting>> 
for the index with unassigned shards:
+
[source,console]
----
GET /my-index-000001/_settings/index.routing.allocation.total_shards_per_node
----
// TEST[setup:my_index]

. <<indices-update-settings,Increase>> the maximum number of shards that can be assigned on one node or
reset the value to unbounded (`-1`):
+
[source,console]
----
PUT /my-index-000001/_settings
{
  "index" : {
    "routing.allocation.total_shards_per_node" : -1
  }
}
----
// TEST[setup:my_index]

// end::self-managed[]

