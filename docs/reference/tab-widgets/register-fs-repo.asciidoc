// tag::unix[]
Add the file system's path or parent directory to the `path.repo` setting in
`elasticsearch.yml` for each master and data node. For running clusters, this
requires a <<restart-cluster-rolling,rolling restart>> of each node.

[source,yaml]
----
path:
  repo:
    - /mount/backups
    - /mount/long_term_backups
----

After restarting each node, use the <<put-snapshot-repo-api,put snapshot
repository>> API to register the file system repository. Specify the file
system's path in `settings.location`:

[source,console]
----
PUT /_snapshot/my_fs_backup
{
  "type": "fs",
  "settings": {
    "location": "/mount/backups/my_fs_backup_location",
    "compress": true
  }
}
----
// TEST[skip:no access to path]

If you specify a relative path in `settings.location`, {es} resolves the path
using the first value in the `path.repo` setting.

[source,console]
----
PUT /_snapshot/my_fs_backup
{
  "type": "fs",
  "settings": {
    "location": "my_fs_backup_location",       <1>
    "compress": true
  }
}
----
// TEST[skip:no access to path]

<1> The first value in the `path.repo` setting is `/mount/backups`. This
relative path, `my_fs_backup_location`, resolves to
`/mount/backups/my_fs_backup_location`.
// end::unix[]


// tag::win[]
Add the file system's path or parent directory to the `path.repo` setting in
`elasticsearch.yml` for each master and data node. For running clusters, this
requires a <<restart-cluster-rolling,rolling restart>> of each node.

Both traditional DOS and Microsoft UNC paths are supported. The following
example uses traditional DOS paths with escaped backslashes:

[source,yaml]
----
path:
  repo:
    - "E:\\Mount\\Backups"
    - "F:\\Mount\\Long_term_backups"
----

For UNC paths, provide the server or share name as a prefix:

[source,yaml]
----
path:
  repo:
    - "\\\\MY_SERVER\\Mount\\Backups"
    - "\\\\MY_SERVER\\Mount\\Long_term_backups"
----

After restarting each node, use the <<put-snapshot-repo-api,put snapshot
repository>> API to register the file system repository. Specify the file
system's path in `settings.location`:

[source,console]
----
PUT /_snapshot/my_fs_backup
{
  "type": "fs",
  "settings": {
    "location": "E:\\Mount\\Backups\\My_fs_backup_location",
    "compress": true
  }
}
----
// TEST[skip:no access to path]

If you specify a relative path in `settings.location`, {es} resolves the path
using the first value in the `path.repo` setting.

[source,console]
----
PUT /_snapshot/my_fs_backup
{
  "type": "fs",
  "settings": {
    "location": "My_fs_backup_location",       <1>
    "compress": true
  }
}
----
// TEST[skip:no access to path]

<1> The first value in the `path.repo` setting is `E:\Mount\Backups`. This
relative path, `My_fs_backup_location`, resolves to
`E:\Mount\Backups\My_fs_backup_location`.
// end::win[]