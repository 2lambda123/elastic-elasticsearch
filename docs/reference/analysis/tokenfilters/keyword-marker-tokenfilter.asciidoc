[[analysis-keyword-marker-tokenfilter]]
=== Keyword marker token filter
++++
<titleabbrev>Keyword marker</titleabbrev>
++++

Designates specific tokens as keywords so they are not stemmed.

This filter uses Lucene's
https://lucene.apache.org/core/{lucene_version_path}/analyzers-common/org/apache/lucene/analysis/miscellaneous/KeywordMarkerFilter.html[KeywordMarkerFilter].

[TIP]
====
To preserve both a stemmed and unstemmed version of each token,
use the <<analysis-keyword-repeat-tokenfilter,`keyword_repeat`>> token filter.
====

[[analysis-keyword-marker-tokenfilter-analyze-ex]]
==== Example

The following <<indices-analyze,analyze API>> request uses the `keyword_marker`
filter to designate `jumping` as a keyword.

[source,console]
--------------------------------------------------
GET _analyze
{
  "tokenizer": "standard",
  "filter": [
    {
      "type": "keyword_marker",
      "keywords": [ "jumping" ]
    },
    {
      "type": "stemmer",
      "name": "english"
    }
  ],
  "text": "quick foxes running and jumping"
}
--------------------------------------------------

The filter produces the following tokens:

[source,text]
--------------------------------------------------
[ quick, fox, run, and, jumping ]
--------------------------------------------------

/////////////////////
[source,console-result]
--------------------------------------------------
{
  "tokens": [
    {
      "token": "quick",
      "start_offset": 0,
      "end_offset": 5,
      "type": "<ALPHANUM>",
      "position": 0
    },
    {
      "token": "fox",
      "start_offset": 6,
      "end_offset": 11,
      "type": "<ALPHANUM>",
      "position": 1
    },
    {
      "token": "run",
      "start_offset": 12,
      "end_offset": 19,
      "type": "<ALPHANUM>",
      "position": 2
    },
    {
      "token": "and",
      "start_offset": 20,
      "end_offset": 23,
      "type": "<ALPHANUM>",
      "position": 3
    },
    {
      "token": "jumping",
      "start_offset": 24,
      "end_offset": 31,
      "type": "<ALPHANUM>",
      "position": 4
    }
  ]
}
--------------------------------------------------
/////////////////////

[[analysis-keyword-marker-tokenfilter-configure-parms]]
==== Configurable parameters

`keywords`::
+
--
(Required+++*+++, array of strings)
List of keywords. Tokens that match these words are not stemmed.

Either this parameter, `keywords_path`, or `keywords_pattern` must be specified.
--

`keywords_path`::
+
--
(Required+++*+++, string)
Path to a file that contains a list of keywords. Tokens that match these words
are not stemmed.

This path must be absolute or relative to the `config` location, and the file
must be UTF-8 encoded. Each word in the file must be separated by a line break.

Either this parameter, `keywords`, or `keywords_pattern` must be specified.
--

`keywords_pattern`::
+
--
(Required+++*+++, string)
http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html[Java
regular expression] used to match tokens. Tokens that match this
expression are not stemmed.

Either this parameter, `keywords`, or `keywords_path` must be specified.

[WARNING]
========================================
A poorly written regular expression could run slowly or result in a stack
overflow error, causing the running node to suddenly exit.

See http://www.regular-expressions.info/catastrophic.html[How to avoid
catastrophic backtracking].
========================================
--

[[analysis-keyword-marker-tokenfilter-customize]]
==== Customize and add to an analyzer

To customize the `keyword_marker` filter, duplicate it to create the basis for a
new custom token filter. You can modify the filter using its configurable
parameters.

[IMPORTANT]
====
To work, the `keyword_marker` filter must be placed _before_ any stemming
filters, such as the <<analysis-stemmer-tokenfilter,`stemmer`>> or
<<analysis-porterstem-tokenfilter,`porter_stem`>> token filter, in the
<<analysis-custom-analyzer,analyzer configuration>>.
====

For example, the following <<indices-create-index,create index API>> request
uses a custom `keyword_marker` filter, `protect_keywords`, and the `porter_stem`
filter to configure a new <<analysis-custom-analyzer,custom analyzer>>.

The custom `protect_keywords` filter protects keywords specified in the
`analysis/example_word_list.txt` file from stemming by the `porter_stem` filter.

[source,console]
--------------------------------------------------
PUT keyword_marker_example
{
  "settings": {
    "analysis": {
      "analyzer": {
        "protect_cats": {
          "type": "custom",
          "tokenizer": "whitespace",
          "filter": [ "protect_keywords", "porter_stem" ]
        }
      },
      "filter": {
        "protect_keywords": {
          "type": "keyword_marker",
          "keywords": "analysis/example_word_list.txt"
        }
      }
    }
  }
}
--------------------------------------------------
