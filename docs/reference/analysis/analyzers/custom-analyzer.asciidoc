[[analysis-custom-analyzer]]
=== Custom Analyzer

An analyzer of type `custom` that allows to combine a `Tokenizer` with
zero or more `Token Filters`, and zero or more `Char Filters`. The
custom analyzer accepts a logical/registered name of the tokenizer to
use, and a list of logical/registered names of token filters.

The following are settings that can be set for a `custom` analyzer type:

[cols="<,<",options="header",]
|=======================================================================
|Setting |Description
|`tokenizer` |The logical / registered name of the tokenizer to use.

|`filter` |An optional list of logical / registered name of token
filters.

|`char_filter` |An optional list of logical / registered name of char
filters.
|=======================================================================

Here is an example:

[source,js]
--------------------------------------------------
index :
    analysis :
        analyzer : 
            myAnalyzer2 :
                type : custom
                tokenizer : myTokenizer1
                filter : [myTokenFilter1, myTokenFilter2]
                char_filter : [my_html]
        tokenizer :
            myTokenizer1 :
                type : standard
                max_token_length : 900
        filter :
            myTokenFilter1 :
                type : stop
                stopwords : [stop1, stop2, stop3, stop4]
            myTokenFilter2 :
                type : length
                min : 0
                max : 2000
        char_filter :
              my_html :
                type : html_strip
                escaped_tags : [xxx, yyy]
                read_ahead : 1024
--------------------------------------------------

[float]
[[fetching-analyzers-as-custom]]
=== Fetching Analyzers as Custom
coming[1.2.0]
While the builtin analyzers are reasonably customizable they don't allow for
inserting additional analyzers.  To do that the analyzer must be rebuilt as a
custom analyzer.  The _analyzer endpoint provides a starting point for this
process:

[source,js]
--------------------------------------------------
$ curl 'http://localhost:9200/_analyzer/standard,arabic'
--------------------------------------------------

Which returns:
[source,js]
--------------------------------------------------
{
  "analyzer": {
    "custom_arabic": {
      "tokenizer": "standard",
      "type": "custom",
      "filter": [
        "standard",
        "lowercase",
        "arabic_stop",
        "arabic_normalization",
        "arabic_stem"
      ]
    },
    "custom_standard": {
      "tokenizer": "standard",
      "type": "custom",
      "filter": [
        "standard",
        "lowercase"
      ]
    }
  },
  "filter": {
    "arabic_stemmer": {
      "language": "arabic",
      "type": "stemmer"
    },
    "arabic_stop": {
      "type": "stop",
      "stopwords": [
        "فان",
.... snip ....
        "ان"
      ]
    }
  }
}
--------------------------------------------------

Which is a copy of the analysis configuration required to build the standard
and arabic analyzers.