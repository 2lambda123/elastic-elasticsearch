== Common uses for analysis
++++
<titleabbrev>Common uses</titleabbrev>
++++

Analyzing full text often means analyzing natural, human language. While each
language is different, this usually means solving a common set of problems for
search, such as how to reduce words to their root form.

This section describes how {es} is commonly used to address these problems and
our recommendations.

[TIP]
====
If you'd like to get started quickly, we recommend using {es}'s built-in
<<analysis-standard-analyzer,`standard`>> analyzer or 
<<analysis-lang-analyzer,language analyzers>>. These analyzers provide good
out-of-the-box support for most use cases.
====

[float]
[[stemming]]
=== Stemming

Most natural languages are inflected, meaning words can change
their form to express differences, such as the following:

* _Number_:      fox, foxes
* _Tense_:       pay, paid, paying
* _Person_:      hear, hears


_Stemming_ removes these inflections to reduce tokens to a root form. This
improves retrievability by enabling matches across the various inflected forms
of a word. For example, if `foxes` is stemmed to `fox`, searches for the term
`fox` match documents that contain either `fox` or `foxes`.

[float]
[[stemming-token-filters]]
==== Stemming token filters

Stemming is handled by a <<analysis-tokenfilters,token filter>> in
the <<analyzer-anatomy,analyzer>>.

If you're unsure of which stemming token filter to use, start out with the
<<analysis-stemmer-tokenfilter,`stemmer`>> filter, which supports multiple
languages and stemmer types. The <<analysis-stemmer-tokenfilter,`stemmer` filter
documentation>> page highlights the recommended stemmer for each language in
bold, based on a reasonable compromise between performance and quality.

Aside from the `stemmer` filter, other stemming token filters include:

* <<analysis-hunspell-tokenfilter,`hunspell`>>
* <<analysis-kstem-tokenfilter,`kstem`>>
* <<analysis-porterstem-tokenfilter,`porter_stem`>>
* <<analysis-snowball-tokenfilter,`snowball`>>

[float]
[[overriding-stemmers]]
==== Overriding stemmers

[[stemmer-keyword]]
You can use a _keyword_ token filter to exclude tokens such as proper nouns or
brand names from stemming. Tokens that you designate as keywords are not
stemmed.

Keyword token filters include:

<<analysis-keyword-repeat-tokenfilter,`keyword_marker`>>::
Designates specific tokens as keywords.

<<analysis-keyword-repeat-tokenfilter,`keyword_repeat`>>::
Outputs both the stemmed and unstemmed (keyword) version of each token.

<<analysis-stemmer-override-tokenfilter,`stemmer_override`>>::
Uses a custom mapping to stem certain tokens as specified. These tokens are then
marked as keywords and excluded from further stemming.

[IMPORTANT]
====
These filters must be included in your analyzer configuration _before_ any
stemmer token filters.
====
