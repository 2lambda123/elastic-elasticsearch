[[analysis-synonyms]]
== Synonyms

Synonyms are words or phrases that have the same or similar meaning.
They are an important aspect of search, as they can improve the search experience and the relevancy of search results.

Synonyms will allow you to:

* Improve search relevance: Synonyms enable users to find relevant documents even if they use different terms to express the same concept.
* Increase search scope: Using synonyms ensures a wider range of possible terms. Search results are not limited to the specific terms included in your documents, and variations of relevant terms are included in search results.
* Domain-specific vocabulary: Certain domains use specific terms that users are not familiar with. Using synonyms allow search to become more user-friendly, as users can search terms they are familiar with and search results will not be limited to the specific domain vocabulary.
* Handling common misspellings and typos: Synonyms can be used to make sure that frequent or specific misspellings are correctly handled.

Synonyms are grouped together using *synonyms sets*.
You can have as many synonyms sets as you need.

In order to use synonyms sets in {es}, you need to:

* <<synonyms-define-synonyms>>
* <<synonyms-store-synonyms>>
* <<synonyms-synonym-analyzers>>

[discrete]
[[synonyms-define-synonyms]]
=== Define your synonyms sets

Synonyms in a synonyms set are defined using *synonym rules*.
Each synonym rule contains words that are synonyms.

You can use two formats to define synonym rules: Solr and WordNet.

[discrete]
[[synonyms-define-synonyms-solr]]
==== Solr format

This format uses two different definitions:

* Equivalent synonyms: Define groups of words that are equivalent. Words are separated by commas. Example:
[source,synonyms]
----
ipod, i-pod, i pod
computer, pc, laptop
----
* Explicit mappings: Matches a group of words to other words. Words on the left hand side of the rule definition are expanded into all the possibilities described on the right hand side. Example:

[source,synonyms]
----
personal computer => pc
sea biscuit, sea biscit => seabiscuit
----

[discrete]
[[synonyms-define-synonyms-wordnet]]
==== WordNet format

https://wordnet.princeton.edu/[WordNet] defines synonyms sets spanning multiple lines. Each line contains the following information:

* Synonyms set numeric identifier
* Ordinal of the synonym in the synonyms set
* Synonym word
* Word type identifier: Noun (n), verb (v), adjective (a) or adverb (b).
* Depth of the word in the synonym net

The following example defines a synonym set for the words "come", "advance" and "approach":

[source,synonyms]
----
s(100000002,1,'come',v,1,0).
s(100000002,2,'advance',v,1,0).
s(100000002,3,'approach',v,1,0).""";
----

[discrete]
[[synonyms-store-synonyms]]
=== Store your synonyms set

Your synonyms sets need to be stored in {es} so your analyzers can refer to them.
There are three ways to include your synonyms sets:

[discrete]
[[synonyms-store-synonyms-api]]
==== Synonyms API

You can use the <<synonyms-apis,synonyms APIs>> to manage synonyms sets.
This is the most flexible approach, as it allows to dynamically define and modify synonyms sets.

Changes in your synonyms sets will automatically reload the associated analyzers.

[discrete]
[[synonyms-store-synonyms-file]]
==== Synonyms File

You can store your synonyms set in a file.

A synonyms set file needs to be uploaded to all your cluster nodes, and be located in the configuration directory for your {es} distribution.
If you're using {ess}, you can upload synonyms fies using {cloud}/ec-custom-bundles.html[custom bundles].

An example synonyms file:

[source,synonyms]
--------------------------------------------------
include::{es-test-dir}/cluster/config/analysis/synonym.txt[]
--------------------------------------------------

To change an existing synonyms set, you can upload new files to your cluster.
You will need to keep synonyms set files in sync on every cluster node.

When doing a change to a file synonyms set, search analyzers that use it need to be refreshed using the <<indices-reload-analyzers,reload search analyzers API>>

This manual syncing and reloading makes this approach less flexible than using the <<synonyms-store-synonyms-api,synonyms API>>.

[discrete]
[[synonyms-store-synonyms-inline]]
==== Inline

For testing out your synonyms, you can directly inline them in your token filter definition.

This is not recommended for production usage, as a large number of inline synonyms increases cluster size unnecessarily and can lead to performance issues.

[discrete]
[[synonyms-synonym-analyzers]]
=== Configure your analyzers to use synonyms sets

[discrete]
[[synonyms-synonym-token-filters]]
==== Configure synonyms token filters

Once your synonyms sets are created, you can start configuring your token filters and analyzers to use them.

{es} uses synonyms as part of the <<analysis-overview,analysis process>>.
There are two different <<analysis-tokenfilters,token filters>> that can be used for including synonyms:

* <<analysis-synonym-tokenfilter>>: Use it for single word synonyms ("car", "automobile").
* <<analysis-synonym-graph-tokenfilter>>: Use it for synonyms that may span multiple words ("hurriedly", "in a hurry").

Synonyms sets created via synonyms APIs can be included into synonym token filters using `synonyms_set` configuration:

[source,JSON]
----
  "filter": {
    "synonyms_filter": {
      "type": "synonym_graph",
      "synonyms_set": "my-synonym-set"
    }
  }
----

The path to a synonym file needs to be included as part of your token filter using `synonyms_path` configuration:

[source,JSON]
----
  "filter": {
    "synonyms_filter": {
      "type": "synonym_graph",
      "synonyms_path": "analysis/synonym-set.txt"
    }
  }
----

You can directly include your synonyms in your token filter using the `synonyms` configuration:

[source,JSON]
----
  "filter": {
    "synonyms_filter": {
      "type": "synonym_graph",
      "synonyms": ["pc => personal computer", "computer, pc, laptop"]
    }
  }
----

[discrete]
[[synonyms-analizers-configure]]
==== Configure analyzers with synonym token filters

To apply synonyms, you will need to include one of the above synonym token filters into an analyzer, like the following:

[source,JSON]
----
      "analyzer": {
        "my_analyzer": {
          "type": "custom",
          "tokenizer": "standard",
          "filter": ["lowercase", "synonyms_filter"]
        }
      }
----

Order is important for your token filters.
{es} will use the token filters preceding the synonym filter to parse the synonym rules in a synonyms set.

In the above example, text will be lowercased by the `lowercase` filter before being processed by the `synonyms_filter`.
This means that all the synonyms defined there needs to be in lowercase, or they won't be found by the synonyms filter.

The synonym rules should not contain words that are removed by a filter that appears after in the chain (like a `stop` filter).
Removing a term from a synonym rule means there will be no matching for it at query time.

Because entries in the synonym map cannot have stacked positions, some token filters may cause issues here.
Token filters that produce multiple versions of a token may choose which version of the token to emit when parsing synonyms.
For example, `asciifolding` will only produce the folded version of the token.
Others, like `multiplexer`, `word_delimiter_graph` or `ngram` will throw an error.

If you need to build analyzers that include both multi-token filters and synonym filters, consider using the <<analysis-multiplexer-tokenfilter,multiplexer>> filter, with the multi-token filters in one branch and the synonym filter in the other.

[discrete]
[[synonyms-test-analyzer]]
==== Test your analyzer

You can test an analyzer configuration without modifying your index settings.
Use the <<indices-analyze,analyze API>> to test your analyzer chain:

[source,console]
----
GET /_analyze
{
  "tokenizer": "standard",
  "filter" : [
    "lowercase",
    {
      "type": "synonym_graph",
      "synonyms": ["pc => personal computer", "computer, pc, laptop"]
    }
  ],
  "text" : "Check how PC synonyms work"
}
----

[discrete]
[[synonyms-apply-synonyms]]
==== Apply synonyms at index or search time

Analyzers can be applied at <<analysis-index-search-time,index time or search time>>.

You need to decide when to apply your synonyms:

* Index time: Synonyms are applied when the documents are indexed into Elasticsearch. It is a less flexible alternative, as changing your synonyms imply that your index needs to be <<docs-reindex,reindexed>> to ensure the new synonyms are applied and stored in your index.
* Search time: Synonyms are applied when a search is executed. This is a more flexible approach, as indices don't have to be reindexed, and search analyzers <<indices-reload-analyzers,can be reloaded>> with changes done to synonyms.

Synonyms sets created using <<synonyms-store-synonyms-api,synonyms API>> can only be used at search time.

You can specify the analyzer that contains your synonyms set as a <<specify-search-analyzer,search time analyzer>> or as an <<specify-index-time-analyzer,index time analyzer>>.

The following example adds the previous analyzer as a search analyzer to the `title` field in an index mapping:

[source,JSON]
----
  "mappings": {
    "properties": {
      "title": {
        "type": "text",
        "search_analyzer": "my_analyzer"
      }
    }
  }
----


