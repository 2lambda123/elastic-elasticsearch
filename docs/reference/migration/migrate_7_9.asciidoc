[[breaking-changes-7.9]]
== Breaking changes in 7.9
++++
<titleabbrev>7.9</titleabbrev>
++++

This section discusses the changes that you need to be aware of when migrating
your application to {es} 7.9.

See also <<release-highlights>> and <<es-release-notes>>.

* <<breaking_79_script_cache_changes>>
* <<breaking_79_settings_changes>>

//NOTE: The notable-breaking-changes tagged regions are re-used in the
//Installation and Upgrade Guide

//tag::notable-breaking-changes[]
[discrete]
[[breaking_79_script_cache_changes]]
=== Script cache changes
[[deprecate_general_script_cache_size]]
.The `script.cache.max_size` setting is deprecated.

[%collapsible]
====
*Details* +
The `script.cache.max_size` setting is deprecated. In {es} 8.0.0, this is
set per-context.

*Impact* +
To avoid deprecation warnings, discontinue use of the `script.cache.max_size`
setting. You may use `script.context.$CONTEXT.context_max_size` for the particular context.
For example, for the `ingest` context, use `script.context.ingest.context_max_size`.

====

[discrete]
[[deprecate_general_script_expire]]
.The `script.cache.expire` setting is deprecated.

[%collapsible]
====
*Details* +
The `script.cache.expire` setting is deprecated. In {es} 8.0.0, this is
set per-context.

*Impact* +
To avoid deprecation warnings, discontinue use of the `script.cache.expire`
setting. You may use `script.context.$CONTEXT.cache_expire` for the particular context.
For example, for the `update` context, use `script.context.update.cache_expire`.

====

[discrete]
[[deprecate_general_script_compile_rate]]
.The `script.max_compilations_rate` setting is deprecated.

[%collapsible]
====
*Details* +
The `script.max_compilations_rate` setting is deprecated. In {es} 8.0.0, this is
set per-context.

*Impact* +
To avoid deprecation warnings, discontinue use of the `script.max_compilations_rate`
setting. You may use `script.context.$CONTEXT.max_compilations_rate` for the particular
context.  For example, for the `processor_conditional` context, use
`script.context.processor_conditional.max_compilations_rate`.

====

[discrete]
[[deprecate_mapping_updates_for_ingest_privileges]]
.The `create_doc`, `create`, `index` and `write` privileges deprecated allowing access
to the update mapping action on indices. `create_doc`, `create` and `index`
privileges also deprecated allowing {ref}/dynamic-mapping.html[dynamic mapping updates]
on indices, which occur when ingesting documents with unmapped fields.

[%collapsible]
====
*Details* +
The update mapping action on indices and data streams is not granted by the
`create_doc`, `create`, `index` and `write` privileges in {es} 8.0.0. The action
is however still allowed over indices (but not over data streams), on all
releases until version 8.0.0, but a deprecation warning is hence issued.
Moreover, the `create_doc`, `create` and `index` privileges do not grant
the internal mapping action from {ref}/dynamic-mapping.html[dynamic mappings]
in {es} 8.0.0. However, dynamic mapping updates are still allowed on all releases
until version 8.0.0, but only on indices, in which case a deprecation warning is issued.

*Impact* +
Deprecation warnings are generated if mapping updates are granted only due to the
deprecated behaviour described above.
In most cases, the recommended alternative approach is to rely on index templates
together with the `auto_configure` privilege, to only allow dynamic mapping updates
according to the template mapping configuration and hence disallow explicit mapping
update actions via the API.
If explicit mapping updates must be allowed, the `manage` privilege must be granted.

====

[discrete]
[[breaking_79_settings_changes]]
=== Settings changes

[[deprecate_auto_import_dangling_indices]]
.Automatically importing dangling indices is disabled by default.

[%collapsible]
====
*Details* +
Automatically importing <<dangling-indices,dangling indices>> into the cluster
is unsafe and is now disabled by default. This feature will be removed entirely
in {es} 8.0.0.

*Impact* +
Use the <<dangling-indices-api,Dangling indices API>> to list, delete or import
any dangling indices manually.

Alternatively you can enable automatic imports of dangling indices, recovering
the unsafe behaviour of earlier versions, by setting
`gateway.auto_import_dangling_indices` to `true`. This setting is deprecated
and will be removed in {es} 8.0.0. We do not recommend using this setting.

====
//end::notable-breaking-changes[]
