[[migrating-7.13]]
== Migrating to 7.13
++++
<titleabbrev>7.13</titleabbrev>
++++

This section discusses the changes that you need to be aware of when migrating
your application to {es} 7.13.

See also <<release-highlights>> and <<es-release-notes>>.

// * <<breaking_713_blah_changes>>
// * <<breaking_713_blah_changes>>

//NOTE: The notable-breaking-changes tagged regions are re-used in the
//Installation and Upgrade Guide

//tag::notable-breaking-changes[]

[discrete]
[[breaking-changes-7.13]]
=== Breaking changes

The following changes in {es} 7.13 might affect your applications
and prevent them from operating normally.
Before upgrading to 7.13, review these changes and take the described steps
to mitigate the impact.

NOTE: Breaking changes introduced in minor versions are
normally limited to security and bug fixes.
Significant changes in behavior are deprecated in a minor release and
the old behavior is supported until the next major release.
To find out if you are using any deprecated functionality,
enable <<deprecation-logging, deprecation logging>>.

[discrete]
[[breaking_713_mapping_changes]]
==== Mapping changes

[[geo-mappers-external-values]]
.Geo mappers no longer accept external values from multifields
[%collapsible]
====
*Details* +
In earlier versions, geo fields could theoretically be used as a subfield
if their parent field set a geometry object as an external value during
parsing. This functionality was unused within the {es} codebase and
blocked required changes to allow index-time scripts on geo_point fields,
so it has been removed.
====

[[geo-point-geohash-subfields]]
.Geopoint mappers pass geohashes to subfields one-by-one
[%collapsible]
====
*Details* +
In earlier versions, a multiply-valued geopoint field would pass
its values as geohashes to subfields by combining them in to a single
comma-delimited string. These are now passed one-by-one as single
geohash strings.
====

[discrete]
[[deprecated-7.13]]
=== Deprecations

The following functionality has been deprecated in {es} 7.13
and will be removed in 8.0
While this won't have an immediate impact on your applications,
we strongly encourage you take the described steps to update your code
after upgrading to 7.13.

NOTE: Significant changes in behavior are deprecated in a minor release and
the old behavior is supported until the next major release.
To find out if you are using any deprecated functionality,
enable <<deprecation-logging, deprecation logging>>.

[discrete]
[[breaking_713_eql_deprecations]]
==== EQL deprecations

[[wildcard-function-deprecated]]
.The `wildcard` function is deprecated.
[%collapsible]
====
*Impact* +
Use the <<eql-syntax-pattern-comparison-keywords,`like`>> or
<<eql-syntax-pattern-comparison-keywords,`regex`>> keyword instead.
====

[discrete]
[[breaking_713_security_changes]]
==== Security deprecations

[[implicitly-disabled-basic-realms]]
Currently, the file and native realms have following implicit behaviours:

* If file and native realms are not configured, they are implicitly disabled
if there are other explicitly configured realms.
* If no realm is available due to either unconfigured, explicitly disabled
or disallowed by the license, the file and native realms are always enabled
even when they are explicitly disabled.

Both of the above behaviours are deprecated. In version 8.0.0, the file and
native realms will always be enabled unless explicitly disabled. If they are
explicitly disabled, they remain disabled at all times.
