[[breaking-changes-7.10]]
== Breaking changes in 7.10
++++
<titleabbrev>7.10</titleabbrev>
++++

This section discusses the changes that you need to be aware of when migrating
your application to {es} 7.10.

See also <<release-highlights>> and <<es-release-notes>>.

// * <<breaking_710_blah_changes>>
// * <<breaking_710_blah_changes>>

//NOTE: The notable-breaking-changes tagged regions are re-used in the
//Installation and Upgrade Guide

//tag::notable-breaking-changes[]

[discrete]
[[breaking_710_security_changes]]
=== Authentication changes

[discrete]
=== Grant API key always requires the key name
When using the grant API key action, it was possible to create a key without a
name. This was because the name field is nested under `api_key` field, i.e.:
```
{
    "...": "...",
    "api_key": {"name": "key-1"}
}
```
The `name` is now required when creating or granting API keys.

[discrete]
[[breaking_710_search_changes]]
=== Search Changes

[discrete]
==== Missing checks for `index.max_docvalue_fields_search`
The setting `index.max_docvalue_fields_search` limits the number of fields that
can be retrieved through `docvalue_fields` in a search. Previously we only
checked this limit when `docvalue_fields` appeared in the top-level search
request body. Now we also enforce the limit when loading doc value fields in
an `inner_hits` section or in a `top_hits` aggregation.

[discrete]
[[breaking_710_networking_changes]]
=== Networking Changes

[discrete]
==== *.tcp.keep_idle and *.tcp.keep_interval now bounded
The settings `{network,transport,http}.tcp.keep_idle` and
`{network,transport,http}.tcp.keep_interval` are now limited to a maximum
value of 300, which amounts to 5 minutes. This helps ensure that, if
explicitly configured, only reasonable values are set.

[discrete]
[[breaking_710_java_changes]]
==== Breaking Java Changes

[discrete]
==== Machine Learning: `allow_no_jobs` and `allow_no_datafeeds` deprecated in favor of `allow_no_match`
`allow_no_jobs` and `allow_no_datafeeds` API parameters are deprecated in favor
of `allow_no_match`. The old parameters are still accepted by the APIs but the
deprecation warning is emitted if the old parameter name is used in the request
body or as a request param.
High-level REST client classes will now send the new `allow_no_match` parameter.

[discrete]
==== Mapping: add `Supplier<SearchLookup>` argument to the existing `MappedFieldType#fielddataBuilder` method
Runtime fields need to have a SearchLookup available, when building their
fielddata implementations, so that they can look up other fields, runtime or
not.
To achieve that, we added a `Supplier<SearchLookup>` argument to the existing
`MappedFieldType#fielddataBuilder` method.

//end::notable-breaking-changes[]

.Repository Stats API is deprecated
[%collapsible]
====
*Details* +
The Repository Stats API has been introduced in 7.8.0 as an experimental API
and was never released. This API is superseded by the <<repositories-metering-apis,Repositories Metering APIs>>
added in 7.10.0 which should be used instead. The Repository Stats API is
deprecated starting 7.10.0 and will be removed in 8.0.0.

*Impact* +
Use the <<repositories-metering-apis,Repositories Metering APIs>>.
====

[[mapping-boosts]]
.The `boost` parameter on field mappings has been deprecated
[%collapsible]
====
*Details* +
Index-time boosts have been deprecated since the 5x line, but it is still possible
to declare field-specific boosts in the mappings.  This is now deprecated as well,
and will be removed entirely in 8.0.  Mappings containing field boosts will continue
to work in 7.x but will emit a deprecation warning.

*Impact* +
The `boost` setting should be removed from templates and mappings.  Use boosts
directly on queries instead.
====
