[role="xpack"]
[testenv="basic"]
[[sql-like-rlike-operators]]
=== LIKE and RLIKE Operators

`LIKE` and `RLIKE` operators are commonly used to select data based on patterns. They usually act on a field placed on the left-hand side of
the operator, but can also act on a constant (literal) expression. The right-hand side of the operator represents the pattern.
Both can be used in the `WHERE` clause of the `SELECT` statement, but `LIKE` can also be used in other places, like defining indices list based
on <<sql-index-patterns, index patterns>> or in combination with different <<sql-commands, SHOW commands>>.
This section covers only the `SELECT ... WHERE ...` usage.

IMPORTANT: Even though `LIKE` and `RLIKE` are valid options when searching or filtering in {es-sql}, full-text search predicates
<<sql-functions-search, `MATCH` and `QUERY`>> are faster, more powerful and accurate and are the preferred alternative.

NOTE: One significant difference between `LIKE`/`RLIKE` and the <<sql-functions-search, full-text search predicates>> is that the former
act on <<sql-multi-field, exact fields>> while the latter also work on <<text, analyzed>> fields. If the field used with `LIKE`/`RLIKE` doesn't
have an exact sub-field (of <<keyword, keyword>> type) {es-sql} will not be able to run the query. If the field is either exact or has an exact sub-field,
it will use it as is, or it will automatically use the exact sub-field even if it wasn't explicitly specified in the statement.

[[sql-like-operator]]
==== `LIKE`

.Synopsis:
[source, sql]
--------------------------------------------------
expression<1> LIKE constant_exp<2>
--------------------------------------------------

<1> typically a field, or a constant expression
<2> pattern

.Description:

The SQL `LIKE` operator is used to compare a value to similar values using wildcard operators. There are two wildcards used in conjunction
with the `LIKE` operator:

* The percent sign (%)
* The underscore (_)

The percent sign represents zero, one or multiple characters. The underscore represents a single number or character. These symbols can be
used in combinations.

["source","sql",subs="attributes,callouts,macros"]
----
include-tagged::{sql-specs}/docs/docs.csv-spec[simpleLike]
----

[[sql-rlike-operator]]
==== `RLIKE`

.Synopsis:
[source, sql]
--------------------------------------------------
expression<1> RLIKE constant_exp<2>
--------------------------------------------------

<1> typically a field, or a constant expression
<2> pattern

.Description:

This operator is similar to `LIKE`, but the user is not limited to search for a string based on a fixed pattern with the percent sign (`%`)
and underscore (`_`); the pattern in this case is a regular expression which allows the construction of more flexible patterns.

For more details about the regular expressions syntax, https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/regex/Pattern.html[Java's Pattern class javadoc]
is a good starting point.

["source","sql",subs="attributes,callouts,macros"]
----
include-tagged::{sql-specs}/docs/docs.csv-spec[simpleRLike]
----
