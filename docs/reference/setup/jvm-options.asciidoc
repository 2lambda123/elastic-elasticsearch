[[jvm-options]]
==== Setting JVM options

{es} includes default JVM options that work well for most production environments.
If needed, you can override these default options by adding custom JVM options
files (preferred) or setting the `ES_JAVA_OPTS` environment variable.

JVM options files must have the suffix '.options' and contain a line-delimited
list of JVM arguments. JVM options files are processed in lexicographic order.

Where you put the JVM options files depends on the type of installation:

* tar.gz or .zip: Add custom JVM options files to `config/jvm.options.d/`.
* Debian or RPM: Add custom JVM options files to `/etc/elasticsearch/jvm.options.d/`.
* Docker: Bind mount custom JVM options files into
`/usr/share/elasticsearch/config/jvm.options.d/`.

NOTE: Always add custom JVM options files instead of modifying the root
`jvm.options` file.

[[jvm-options-syntax]]
===== JVM options syntax

A JVM options file contains a line-delimited list of JVM arguments.
Arguments are preceded by a dash (`-`).
To apply the setting to specific versions, prepend the version
or a range of versions followed by a colon.

* Apply setting to all versions. For example:
+
[source,text]
-------------------------------------
-Xmx2g
-------------------------------------

* Apply setting to a specific version by prepending the version number
followed by a colon. For example:
+
[source,text]
-------------------------------------
8:-Xmx2g
-------------------------------------

* Apply setting to a range of versions by prepending the range of versions
followed by a colon. For example:
+
[source,text]
-------------------------------------
8-9:-Xmx2g
-------------------------------------
+
To apply to all versions greater than or equal to a specific version,
omit the upper bound of the range. For example:
+
[source,text]
-------------------------------------
8-:-Xmx2g
-------------------------------------

Blank lines are ignored. Lines beginning with `#` are treated as comments
and ignored. Lines that aren't commented out and aren't recognized
as JVM arguments are rejected.

[[jvm-options-env]]
===== Using environment variables to set JVM options

In production, you should use JVM options files if you need to override the
default settings. However, you can also set the JVM options through the
 `ES_JAVA_OPTS` environment variable, which can be useful for development and
 testing. For example:

[source,sh]
---------------------------------
export ES_JAVA_OPTS="$ES_JAVA_OPTS -Djava.io.tmpdir=/path/to/temp/dir"
./bin/elasticsearch
---------------------------------

If you're using the RPM or Debian packages, you can also specify
`ES_JAVA_OPTS` in the <<sysconfig,system configuration file>>.

NOTE: {es} ignores the `JAVA_TOOL_OPTIONS` and `JAVA_OPTS` environment variables.
You must configure custom JVM options files or the `ES_JAVA_OPTS`
environment variable to override the default JVM options.
