[[zip-targz]]
=== Install Elasticsearch with `.zip` or `.tar.gz`

Elasticsearch is provided as a `.zip` and as a `.tar.gz` package.  These
packages can be used to install Elasticsearch on any system and are the
easiest package format to use for most systems when trying out Elasticsearch.

TIP: Elasticsearch has historically been installed on Windows using the `.zip` archive.
An <<windows, MSI installer package>> is available that provides the easiest getting started
experience on Windows. You can continue using the `.zip` approach if you prefer.

The latest stable version of Elasticsearch can be found on the
link:/downloads/elasticsearch[Download Elasticsearch] page.
Other versions can be found on the
link:/downloads/past-releases[Past Releases page].

NOTE: Elasticsearch requires Java 8 or later. Use the
http://www.oracle.com/technetwork/java/javase/downloads/index.html[official Oracle distribution]
or an open-source distribution such as http://openjdk.java.net[OpenJDK].

[[install-zip]]
==== Download and install the `.zip` package

ifeval::["{release-state}"=="unreleased"]

Version {version} of Elasticsearch has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

The `.zip` archive for Elasticsearch v{version} can be downloaded and installed as follows:

**for macOS/Linux:**

["source","sh",subs="attributes"]
--------------------------------------------
wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{version}.zip
sha1sum elasticsearch-{version}.zip <1>
unzip elasticsearch-{version}.zip
cd elasticsearch-{version}/ <2>
--------------------------------------------
<1> Compare the SHA produced by `sha1sum` or `shasum` with the
    https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{version}.zip.sha1[published SHA].
<2> This directory is known as `$ES_HOME`.

**for Windows:**

Download the `.zip` archive for Elasticsearch v{version} from: https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{version}.zip

Unzip it with your favourite unzip tool.  This will create a folder called
+elasticsearch-{version}+, which we will refer to as `%ES_HOME%`. In the Command Prompt
window, `cd` to the `%ES_HOME%` directory, for instance:

["source","sh",subs="attributes"]
----------------------------
cd c:\elasticsearch-{version}
----------------------------

endif::[]

[[install-targz]]
==== Download and install the `.tar.gz` package

ifeval::["{release-state}"=="unreleased"]

Version {version} of Elasticsearch has not yet been released.

endif::[]

ifeval::["{release-state}"!="unreleased"]

The `.tar.gz` archive for Elasticsearch v{version} can be downloaded and installed as follows:

["source","sh",subs="attributes"]
--------------------------------------------
wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{version}.tar.gz
sha1sum elasticsearch-{version}.tar.gz <1>
tar -xzf elasticsearch-{version}.tar.gz
cd elasticsearch-{version}/ <2>
--------------------------------------------
<1> Compare the SHA produced by `sha1sum` or `shasum` with the
    https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{version}.tar.gz.sha1[published SHA].
<2> This directory is known as `$ES_HOME`.

endif::[]

[[zip-targz-running]]
==== Running Elasticsearch from the command line

Elasticsearch can be started from the command line as follows:

**for macOS/Linux:**

[source,sh]
--------------------------------------------
./bin/elasticsearch
--------------------------------------------

NOTE: All scripts packaged with Elasticsearch require a version of Bash
that supports arrays and assume that Bash is available at `/bin/bash`.
As such, Bash should be available at this path either directly or via a
symbolic link.

**for Windows:**

[source,sh]
--------------------------------------------
.\bin\elasticsearch.bat
--------------------------------------------

By default, Elasticsearch runs in the foreground, prints its logs to the
standard output (`stdout`), and can be stopped by pressing `Ctrl-C`.

include::check-running.asciidoc[]

Log printing to `stdout` can be disabled using the `-q` or `--quiet`
option on the command line.

[[setup-installation-daemon]]
==== Running as a daemon

To run Elasticsearch as a daemon, specify `-d` on the command line, and record
the process ID in a file using the `-p` option:

[source,sh]
--------------------------------------------
./bin/elasticsearch -d -p pid
--------------------------------------------

Log messages can be found in the `$ES_HOME/logs/` directory.

To shut down Elasticsearch, kill the process ID recorded in the `pid` file:

[source,sh]
--------------------------------------------
kill `cat pid`
--------------------------------------------

NOTE: The startup scripts provided in the <<rpm,RPM>> and <<deb,Debian>>
packages take care of starting and stopping the Elasticsearch process for you.

[[zip-targz-configuring]]
==== Configuring Elasticsearch on the command line

Elasticsearch loads its configuration from the `$ES_HOME/config/elasticsearch.yml`
file by default.  The format of this config file is explained in
<<settings>>.

Any settings that can be specified in the config file can also be specified on
the command line, using the `-E` syntax as follows:

**for macOS/Linux:**

[source,sh]
--------------------------------------------
./bin/elasticsearch -d -Ecluster.name=my_cluster -Enode.name=node_1
--------------------------------------------

**for Windows:**

[source,sh]
--------------------------------------------
.\bin\elasticsearch.bat -Ecluster.name=my_cluster -Enode.name=node_1
--------------------------------------------

NOTE: Values that contain spaces must be surrounded with quotes.  For instance `-Epath.logs="C:\My Logs\logs"`.

TIP: Typically, any cluster-wide settings (like `cluster.name`) should be
added to the `elasticsearch.yml` config file, while any node-specific settings
such as `node.name` could be specified on the command line.

[[windows-service]]
==== Installing Elasticsearch as a Windows Service

Elasticsearch can be installed as a service to run in the background or start
automatically at boot time without any user interaction. This can be achieved
through the `elasticsearch-service.bat` script in the `bin\` folder which allows one to
install, remove, manage or configure the service and potentially start and
stop the service, all from the command-line.

["source","sh",subs="attributes,callouts"]
--------------------------------------------------
c:\elasticsearch-{version}{backslash}bin>elasticsearch-service

Usage: elasticsearch-service.bat install|remove|start|stop|manager [SERVICE_ID]
--------------------------------------------------

The script requires one parameter (the command to execute) followed by an
optional one indicating the service id (useful when installing multiple
Elasticsearch services).

The commands available are:

[horizontal]
`install`:: Install Elasticsearch as a service

`remove`:: Remove the installed Elasticsearch service (and stop the service if started)

`start`:: Start the Elasticsearch service (if installed)

`stop`:: Stop the Elasticsearch service (if started)

`manager`:: Start a GUI for managing the installed service

Based on the architecture of the available JDK/JRE (set through `JAVA_HOME`),
the appropriate 64-bit(x64) or 32-bit(x86) service will be installed. This
information is made available during install:

["source","sh",subs="attributes"]
--------------------------------------------------
c:\elasticsearch-{version}{backslash}bin>elasticsearch-service install
Installing service      :  "elasticsearch-service-x64"
Using JAVA_HOME (64-bit):  "c:\jvm\jdk1.8"
The service 'elasticsearch-service-x64' has been installed.
--------------------------------------------------

NOTE: While a JRE can be used for the Elasticsearch service, due to its use of a client VM (as opposed to a server JVM which offers better performance for long-running applications) its usage is discouraged and a warning will be issued.

NOTE: The system environment variable `JAVA_HOME` should be set to the path to
the JDK installation that you want the service to use. If you upgrade the JDK,
you are not required to the reinstall the service but you must set the value of
the system environment variable `JAVA_HOME` to the path to the new JDK
installation. However, upgrading across JVM types (e.g. JRE versus SE) is not
supported, and does require the service to be reinstalled.

[[windows-service-settings]]
[float]
=== Customizing Windows service settings

The Elasticsearch service can be configured prior to installation by setting the following environment variables (either using the https://technet.microsoft.com/en-us/library/cc754250(v=ws.10).aspx[set command] from the command line, or through the `System Properties->Environment Variables` GUI).

[horizontal]
`SERVICE_ID`::

  A unique identifier for the service.  Useful if installing multiple instances on the same machine.  Defaults to `elasticsearch-service-x86` (on 32-bit Windows) or `elasticsearch-service-x64` (on 64-bit Windows).

`SERVICE_USERNAME`::

  The user to run as, defaults to the local system account.

`SERVICE_PASSWORD`::

  The password for the user specified in `%SERVICE_USERNAME%`.

`SERVICE_DISPLAY_NAME`::

  The name of the service.  Defaults to `Elasticsearch <version> %SERVICE_ID%`.

`SERVICE_DESCRIPTION`::

  The description of the service.  Defaults to `Elasticsearch <version> Windows Service - https://elastic.co`.

`JAVA_HOME`::

  The installation directory of the desired JVM to run the service under.

`LOG_DIR`::

    Log directory, defaults to `%ES_HOME%\logs`.

`DATA_DIR`::

    Data directory, defaults to `%ES_HOME%\data`.

`CONF_DIR`::

    Configuration file directory (which needs to include `elasticsearch.yml`
    and `log4j2.properties` files), defaults to `%ES_HOME%\conf`.

`ES_JAVA_OPTS`::

    Any additional JVM system properties you may want to apply.

`ES_START_TYPE`::

    Startup mode for the service.  Can be either `auto` or `manual` (default).

`ES_STOP_TIMEOUT` ::

  The timeout in seconds that procrun waits for service to exit gracefully.  Defaults to `0`.

NOTE: At its core, `elasticsearch-service.bat` relies on http://commons.apache.org/proper/commons-daemon/[Apache Commons Daemon] project
to install the service. Environment variables set prior to the service installation are copied and will be used during the service lifecycle. This means any changes made to them after the installation will not be picked up unless the service is reinstalled.

NOTE: On Windows, the <<heap-size,heap size>> can be configured as for
any other Elasticsearch installation when running Elasticsearch from the
command line, or when installing Elasticsearch as a service for the
first time. To adjust the heap size for an already installed service,
use the service manager: `bin\elasticsearch-service.bat manager`.

Using the Manager GUI::

It is also possible to configure the service after it's been installed using the manager GUI (`elasticsearch-service-mgr.exe`), which offers insight into the installed service, including its status, startup type, JVM, start and stop settings amongst other things.  Simply invoking `elasticsearch-service.bat manager` from the command-line will open up the manager window:

image::images/service-manager-win.png["Windows Service Manager GUI",align="center"]

Most changes (like JVM settings) made through the manager GUI will require a restart of the service in order to take affect.

[[zip-targz-layout]]
==== Directory layout of `.zip` and `.tar.gz` archives

The `.zip` and `.tar.gz` packages are entirely self-contained. All files and
directories are, by default, contained within `$ES_HOME` (`%ES_HOME%` on Windows) -- the directory
created when unpacking the archive.

This is very convenient because you don't have to create any directories to
start using Elasticsearch, and uninstalling Elasticsearch is as easy as
removing the `$ES_HOME` directory ((`%ES_HOME%` on Windows).  However, it is advisable to change the
default locations of the config directory, the data directory, and the logs
directory so that you do not delete important data later on.


[cols="<h,<,<m,<m",options="header",]
|=======================================================================
| Type | Description | Default Location | Setting
| home
  | Elasticsearch home directory or `$ES_HOME` (`%ES_HOME%` on Windows)
 d| Directory created by unpacking the archive
  |

| bin
  | Binary scripts including `elasticsearch` to start a node
    and `elasticsearch-plugin` to install plugins
 d| `$ES_HOME/bin` (`%ES_HOME%\bin` on Windows)
 d|

| conf
  | Configuration files including `elasticsearch.yml`
 d| `$ES_HOME/config` (`%ES_HOME%\conf` on Windows)
  | path.conf

| data
  | The location of the data files of each index / shard allocated
    on the node. Can hold multiple locations.
 d| `$ES_HOME/data` (`%ES_HOME%\data` on Windows)
  | path.data

| logs
  | Log files location.
 d| `$ES_HOME/logs` (`%ES_HOME%\logs` on Windows)
  | path.logs

| plugins
  | Plugin files location. Each plugin will be contained in a subdirectory.
 d| `$ES_HOME/plugins` (`%ES_HOME%\plugins` on Windows)
  |

| repo
  | Shared file system repository locations. Can hold multiple locations. A file system repository can be placed in to any subdirectory of any directory specified here.
 d| Not configured
  | path.repo

|=======================================================================


include::next-steps.asciidoc[]
