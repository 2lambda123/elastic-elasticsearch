[role="xpack"]
[[tutorial-manage-new-data-stream]]
=== Tutorial: Create a managed data stream

preview::[]

To create a data stream managed by {dlm-init}, follow these steps:

. <<create-lifecycle-component-template>>
. <<create-index-template-with-lifecycle>>
. <<create-data-stream-with-lifecycle>>

[discrete]
[[create-lifecycle-component-template]]
==== Create a lifecycle component template

A data stream requires a matching index template. In most cases, you compose this index
template using one or more component templates. The same way you use separate component
templates for mappings and index settings you can use to configure {dlm}, the respective
template is called `lifecycle`.

For more information on how to create a component template see the
<<indices-component-template,create component template API>>.

[source,console]
----
# Creates a component template for lifecycle
PUT _component_template/my-lifecycle
{
  "template": {
    "lifecycle": {
      "data_retention": "7d"
    }
  },
  "_meta": {
    "description": "7d data retention template"
  }
}
----

[discrete]
[[create-index-template-with-lifecycle]]
==== Create an index template

Use your component template to create an index template.

* Include the `data_stream` object to enable data streams. {dlm-init} is only supported by data streams.

* Add any component templates that are relevant to your data stream along and at least one lifecycle template.

* A priority higher than `200` to avoid collisions with built-in templates.
See <<avoid-index-pattern-collisions>>.

You can use the <<indices-put-template,create index template API>>.

[source,console]
----
PUT _index_template/my-index-template
{
  "index_patterns": ["my-data-stream*"],
  "data_stream": { },
  "composed_of": [ "my-lifecycle" ],
  "priority": 500,
  "_meta": {
    "description": "Template for my DLM managed data stream"
  }
}
----

[discrete]
[[create-data-stream-with-lifecycle]]
==== Create a data stream

You can create a data stream in two ways:

. By <<add-documents-to-a-data-stream,indexing requests>> that
target the stream's name. This name must match one of your index template's index patterns.
+
[source,console]
----
PUT my-data-stream/_bulk
{ "create":{ } }
{ "@timestamp": "2099-05-06T16:21:15.000Z", "message": "192.0.2.42 - - [06/May/2099:16:21:15 +0000] \"GET /images/bg.jpg HTTP/1.0\" 200 24736" }
{ "create":{ } }
{ "@timestamp": "2099-05-06T16:25:42.000Z", "message": "192.0.2.255 - - [06/May/2099:16:25:42 +0000] \"GET /favicon.ico HTTP/1.0\" 200 3638" }
----

. By manually creating the stream using the <<indices-create-data-stream,create data stream API>>. The stream's name must
still match one of your template's index patterns.
+
[source,console]
----
PUT _data_stream/my-data-stream
----

You can use the <<dlm-get-lifecycle,get data stream lifecycle API>> to see the data lifecycle of your data stream.
+
[source,console]
----
GET _data_stream/my-data-stream/_lifecycle
----
+
The result will look like this:
+
[source,console-result]
----
{
  "data_streams": [
    {
      "name": "my-data-stream",<1>
      "lifecycle": {
        "data_retention": "7d" <2>
      }
    }
  ]
}
----
<1> The name of your data stream.
<2> The retention period of the data indexed in this data stream, this means that the data in this data stream will
be kept at least for 7 days. After that {es} can delete it at its own discretion.
