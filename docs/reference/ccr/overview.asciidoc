[role="xpack"]
[testenv="platinum"]
[[ccr-overview]]
== Overview

beta[]

Replication in {ccr} is done on an index-by-index basis. Replication is
configured at the index level. For each configured replication there is a
replication source index called the "leader index", and a replication target
index called the "follower index".

Replication is active-passive. This means that while the leader index
can directly be written into, the follower index can not directly receive
writes.

Replication is pull-based. This means that replication is driven by the
follower index. This simplifies state management on the leader index, and means
that {ccr} does not interfere with indexing on the leader index.

[float]
==== Configuring replication

Replication can be configured in two ways.

. Replication can be configured manually using the
  {ref}/ccr-put-follow.html[create follower API].

. Replication can be configured automatically using
  <<ccr-ov-auto-follow,auto-follow patterns>>.

Note that {ccr} also <<ccr-ov-soft-deletes,requires configuration on the leader
index>>.

[float]
==== The mechanics of replication

While replication is managed at the index level, replication is performed at the
shard level. When a follower index is created, it will be automatically
configured to have an identical number of shards as the leader index. A follower
shard task in the follower index pulls from the corresponding leader shard in
the leader index by sending read requests for new operations. These read
requests can be served from any copy of the leader shard (primary or replicas).

For each read request sent by the follower shard task, if there are new
operations available on the leader shard, the leader shard will respond with
operations limited by the read parameters established when you configured the
follower index. If there are no new operations available on the leader shard,
the leader shard will wait up to a configured timeout for new operations. If new
operations within that timeout, the leader shard will immediately respond with
those new operations. Otherwise, if the timeout elapses, the follower shard will
reply that there are no new operations. The follower shard task will update some
statistics and immediately send another read request to the leader shard. This
ensures that the network connections between the remote cluster and the local
cluster are continually being used so as to avoid forceful termination by an
external source (e.g., a firewall).

If a read request fails, the cause of the failure will be inspected. If the
cause of the failure is deemed to be a failure that can be recovered from (e.g.,
a network failure), the follower shard task will enter into a retry
loop. Otherwise, the follower shard task will be paused and requires user
intervention before the shard follower task can be resumed using the
{ref}/ccr-post-resume-follow.html[resume follower API].

When operations are received by the follower shard task, they are placed in a
write buffer. The follower shard task will manage this write buffer and submit
bulk write requests from this write buffer to the follower shard.  The write
buffer and these write requests will be managed by the write parameters
established when you configured the follower index.  The write buffer serves as
back-pressure against read requests. If the write buffer exceeds its configured
limits, no additional read requests will be sent by the follower shard task. The
follower shard task will resume sending read requests when the write buffer no
longer exceeds its configured limits.

[float]
==== Inspecting the progress of replication

You can inspect the progress of replication at the shard level using the
{ref}/ccr-get-follow-stats.html[get follower stats API]. This API will give you insight
into the read and writes managed by the follower shard task as well as report
read exceptions that can be retried, and fatal exceptions that require user
intervention.

[float]
==== Pausing and resuming replication

You can pause replication using the {ref}/ccr-post-pause-follow.html[pause follower API], 
and then later resume replication using the
{ref}/ccr-post-resume-follow.html[resume follower API]; using these APIs in tandem
permits you to adjust the read and write parameters on the follower shard task
if your initial configuration is not suitable for your use-case.

[float]
==== Terminating replication

You can terminate replication using the {ref}/ccr-post-unfollow.html[unfollow API].
This will convert a follower index to a regular (non-follower) index.
