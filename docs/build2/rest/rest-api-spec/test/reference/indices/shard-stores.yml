---
"line_13":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
# Named setup my_index

  - do:
        indices.create:
          index: my-index-000001
          body:
            settings:
              number_of_shards: 1
              number_of_replicas: 1
            mappings:
              properties:
                "@timestamp":
                  type: date
                http:
                  properties:
                    request:
                      properties:
                        method:
                          type: keyword
                message:
                  type: text
                  fields:
                    keyword:
                      type: keyword
                user:
                  properties:
                    id:
                      type: keyword
                      doc_values: true
  - do:
        bulk:
          index: my-index-000001
          refresh: true
          body: |
            { "index":{"_id": "0"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "127.0.0.1" }, "user": { "id": "kimchy" } }
            { "index":{"_id": "1"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
            { "index":{"_id": "2"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
            { "index":{"_id": "3"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
            { "index":{"_id": "4"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
  - do:
      raw:
        method: GET
        path: "my-index-000001/_shard_stores"
  - is_false: _shards.failures
---
"line_114":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: PUT
        path: "test"
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "test/_shard_stores"
  - is_false: _shards.failures
---
"line_124":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: PUT
        path: "test1"
  - is_false: _shards.failures
  - do:
      raw:
        method: PUT
        path: "test2"
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "test1,test2/_shard_stores"
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "_shard_stores"
  - is_false: _shards.failures
---
"line_150":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
# Named setup node

  # Fetch the node name. We use the host of the master because we know there will always be a master.
  - do:
      cluster.state: {}
  - is_true: master_node
  - set: { master_node: node_name }

  - do:
      raw:
        method: PUT
        path: "my-index-000001"
        body: |
          {"settings":{"number_of_shards":1, "number_of_replicas": 0}}
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "my-index-000001/_doc"
        refresh: ""
        body: |
          {"test": "test"}
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "_shard_stores"
        status: "green"
  - is_false: _shards.failures
  - match:
      $body:
        {
           "indices": {
               "my-index-000001": {
                   "shards": {
                      "0": {
                        "stores": [
                            {
                                $node_name: {
                                    "name": $body.$_path,
                                    "ephemeral_id" : $body.$_path,
                                    "transport_address": $body.$_path,
                                    "external_id": $body.$_path,
                                    "attributes": $body.$_path,
                                    "roles": $body.$_path,
                                    "version": $body.$_path,
                                    "min_index_version": $body.$_path,
                                    "max_index_version": $body.$_path
                                },
                                "allocation_id": $body.$_path,
                                "allocation" : $body.$_path
                                
                            }
                        ]
                      }
                   }
               }
           }
        }
