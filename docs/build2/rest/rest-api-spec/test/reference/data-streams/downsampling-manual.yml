---
teardown:
  - do:
      raw:
        method: DELETE
        path: "_data_stream/my-data-stream"
  - do:
      raw:
        method: DELETE
        path: "_index_template/my-data-stream-template"
  - do:
      raw:
        method: DELETE
        path: "_ingest/pipeline/my-timestamp-pipeline"
---
"line_60":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: PUT
        path: "_index_template/my-data-stream-template"
        body: |
          {
            "index_patterns": [
              "my-data-stream*"
            ],
            "data_stream": {},
            "template": {
              "settings": {
                "index": {
                  "mode": "time_series",
                  "routing_path": [
                    "kubernetes.namespace",
                    "kubernetes.host",
                    "kubernetes.node",
                    "kubernetes.pod"
                  ],
                  "number_of_replicas": 0,
                  "number_of_shards": 2
                }
              },
              "mappings": {
                "properties": {
                  "@timestamp": {
                    "type": "date"
                  },
                  "kubernetes": {
                    "properties": {
                      "container": {
                        "properties": {
                          "cpu": {
                            "properties": {
                              "usage": {
                                "properties": {
                                  "core": {
                                    "properties": {
                                      "ns": {
                                        "type": "long"
                                      }
                                    }
                                  },
                                  "limit": {
                                    "properties": {
                                      "pct": {
                                        "type": "float"
                                      }
                                    }
                                  },
                                  "nanocores": {
                                    "type": "long",
                                    "time_series_metric": "gauge"
                                  },
                                  "node": {
                                    "properties": {
                                      "pct": {
                                        "type": "float"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "memory": {
                            "properties": {
                              "available": {
                                "properties": {
                                  "bytes": {
                                    "type": "long",
                                    "time_series_metric": "gauge"
                                  }
                                }
                              },
                              "majorpagefaults": {
                                "type": "long"
                              },
                              "pagefaults": {
                                "type": "long",
                                "time_series_metric": "gauge"
                              },
                              "rss": {
                                "properties": {
                                  "bytes": {
                                    "type": "long",
                                    "time_series_metric": "gauge"
                                  }
                                }
                              },
                              "usage": {
                                "properties": {
                                  "bytes": {
                                    "type": "long",
                                    "time_series_metric": "gauge"
                                  },
                                  "limit": {
                                    "properties": {
                                      "pct": {
                                        "type": "float"
                                      }
                                    }
                                  },
                                  "node": {
                                    "properties": {
                                      "pct": {
                                        "type": "float"
                                      }
                                    }
                                  }
                                }
                              },
                              "workingset": {
                                "properties": {
                                  "bytes": {
                                    "type": "long",
                                    "time_series_metric": "gauge"
                                  }
                                }
                              }
                            }
                          },
                          "name": {
                            "type": "keyword"
                          },
                          "start_time": {
                            "type": "date"
                          }
                        }
                      },
                      "host": {
                        "type": "keyword",
                        "time_series_dimension": true
                      },
                      "namespace": {
                        "type": "keyword",
                        "time_series_dimension": true
                      },
                      "node": {
                        "type": "keyword",
                        "time_series_dimension": true
                      },
                      "pod": {
                        "type": "keyword",
                        "time_series_dimension": true
                      }
                    }
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: PUT
        path: "_ingest/pipeline/my-timestamp-pipeline"
        body: |
          {
            "description": "Shifts the @timestamp to the last 15 minutes",
            "processors": [
              {
                "set": {
                  "field": "ingest_time",
                  "value": "{{_ingest.timestamp}}"
                }
              },
              {
                "script": {
                  "lang": "painless",
                  "source": "\n          def delta = ChronoUnit.SECONDS.between(\n            ZonedDateTime.parse(\"2022-06-21T15:49:00Z\"),\n            ZonedDateTime.parse(ctx[\"ingest_time\"])\n          );\n          ctx[\"@timestamp\"] = ZonedDateTime.parse(ctx[\"@timestamp\"]).plus(delta,ChronoUnit.SECONDS).toString();\n        "
                }
              }
            ]
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: PUT
        path: "my-data-stream/_bulk"
        refresh: ""
        pipeline: "my-timestamp-pipeline"
        body: |
          {"create": {}}
          {"@timestamp":"2022-06-21T15:49:00Z","kubernetes":{"host":"gke-apps-0","node":"gke-apps-0-0","pod":"gke-apps-0-0-0","container":{"cpu":{"usage":{"nanocores":91153,"core":{"ns":12828317850},"node":{"pct":2.77905e-05},"limit":{"pct":2.77905e-05}}},"memory":{"available":{"bytes":463314616},"usage":{"bytes":307007078,"node":{"pct":0.01770037710617187},"limit":{"pct":9.923134671484496e-05}},"workingset":{"bytes":585236},"rss":{"bytes":102728},"pagefaults":120901,"majorpagefaults":0},"start_time":"2021-03-30T07:59:06Z","name":"container-name-44"},"namespace":"namespace26"}}
          {"create": {}}
          {"@timestamp":"2022-06-21T15:45:50Z","kubernetes":{"host":"gke-apps-0","node":"gke-apps-0-0","pod":"gke-apps-0-0-0","container":{"cpu":{"usage":{"nanocores":124501,"core":{"ns":12828317850},"node":{"pct":2.77905e-05},"limit":{"pct":2.77905e-05}}},"memory":{"available":{"bytes":982546514},"usage":{"bytes":360035574,"node":{"pct":0.01770037710617187},"limit":{"pct":9.923134671484496e-05}},"workingset":{"bytes":1339884},"rss":{"bytes":381174},"pagefaults":178473,"majorpagefaults":0},"start_time":"2021-03-30T07:59:06Z","name":"container-name-44"},"namespace":"namespace26"}}
          {"create": {}}
          {"@timestamp":"2022-06-21T15:44:50Z","kubernetes":{"host":"gke-apps-0","node":"gke-apps-0-0","pod":"gke-apps-0-0-0","container":{"cpu":{"usage":{"nanocores":38907,"core":{"ns":12828317850},"node":{"pct":2.77905e-05},"limit":{"pct":2.77905e-05}}},"memory":{"available":{"bytes":862723768},"usage":{"bytes":379572388,"node":{"pct":0.01770037710617187},"limit":{"pct":9.923134671484496e-05}},"workingset":{"bytes":431227},"rss":{"bytes":386580},"pagefaults":233166,"majorpagefaults":0},"start_time":"2021-03-30T07:59:06Z","name":"container-name-44"},"namespace":"namespace26"}}
          {"create": {}}
          {"@timestamp":"2022-06-21T15:44:40Z","kubernetes":{"host":"gke-apps-0","node":"gke-apps-0-0","pod":"gke-apps-0-0-0","container":{"cpu":{"usage":{"nanocores":86706,"core":{"ns":12828317850},"node":{"pct":2.77905e-05},"limit":{"pct":2.77905e-05}}},"memory":{"available":{"bytes":567160996},"usage":{"bytes":103266017,"node":{"pct":0.01770037710617187},"limit":{"pct":9.923134671484496e-05}},"workingset":{"bytes":1724908},"rss":{"bytes":105431},"pagefaults":233166,"majorpagefaults":0},"start_time":"2021-03-30T07:59:06Z","name":"container-name-44"},"namespace":"namespace26"}}
          {"create": {}}
          {"@timestamp":"2022-06-21T15:44:00Z","kubernetes":{"host":"gke-apps-0","node":"gke-apps-0-0","pod":"gke-apps-0-0-0","container":{"cpu":{"usage":{"nanocores":150069,"core":{"ns":12828317850},"node":{"pct":2.77905e-05},"limit":{"pct":2.77905e-05}}},"memory":{"available":{"bytes":639054643},"usage":{"bytes":265142477,"node":{"pct":0.01770037710617187},"limit":{"pct":9.923134671484496e-05}},"workingset":{"bytes":1786511},"rss":{"bytes":189235},"pagefaults":138172,"majorpagefaults":0},"start_time":"2021-03-30T07:59:06Z","name":"container-name-44"},"namespace":"namespace26"}}
          {"create": {}}
          {"@timestamp":"2022-06-21T15:42:40Z","kubernetes":{"host":"gke-apps-0","node":"gke-apps-0-0","pod":"gke-apps-0-0-0","container":{"cpu":{"usage":{"nanocores":82260,"core":{"ns":12828317850},"node":{"pct":2.77905e-05},"limit":{"pct":2.77905e-05}}},"memory":{"available":{"bytes":854735585},"usage":{"bytes":309798052,"node":{"pct":0.01770037710617187},"limit":{"pct":9.923134671484496e-05}},"workingset":{"bytes":924058},"rss":{"bytes":110838},"pagefaults":259073,"majorpagefaults":0},"start_time":"2021-03-30T07:59:06Z","name":"container-name-44"},"namespace":"namespace26"}}
          {"create": {}}
          {"@timestamp":"2022-06-21T15:42:10Z","kubernetes":{"host":"gke-apps-0","node":"gke-apps-0-0","pod":"gke-apps-0-0-0","container":{"cpu":{"usage":{"nanocores":153404,"core":{"ns":12828317850},"node":{"pct":2.77905e-05},"limit":{"pct":2.77905e-05}}},"memory":{"available":{"bytes":279586406},"usage":{"bytes":214904955,"node":{"pct":0.01770037710617187},"limit":{"pct":9.923134671484496e-05}},"workingset":{"bytes":1047265},"rss":{"bytes":91914},"pagefaults":302252,"majorpagefaults":0},"start_time":"2021-03-30T07:59:06Z","name":"container-name-44"},"namespace":"namespace26"}}
          {"create": {}}
          {"@timestamp":"2022-06-21T15:40:20Z","kubernetes":{"host":"gke-apps-0","node":"gke-apps-0-0","pod":"gke-apps-0-0-0","container":{"cpu":{"usage":{"nanocores":125613,"core":{"ns":12828317850},"node":{"pct":2.77905e-05},"limit":{"pct":2.77905e-05}}},"memory":{"available":{"bytes":822782853},"usage":{"bytes":100475044,"node":{"pct":0.01770037710617187},"limit":{"pct":9.923134671484496e-05}},"workingset":{"bytes":2109932},"rss":{"bytes":278446},"pagefaults":74843,"majorpagefaults":0},"start_time":"2021-03-30T07:59:06Z","name":"container-name-44"},"namespace":"namespace26"}}
          {"create": {}}
          {"@timestamp":"2022-06-21T15:40:10Z","kubernetes":{"host":"gke-apps-0","node":"gke-apps-0-0","pod":"gke-apps-0-0-0","container":{"cpu":{"usage":{"nanocores":100046,"core":{"ns":12828317850},"node":{"pct":2.77905e-05},"limit":{"pct":2.77905e-05}}},"memory":{"available":{"bytes":567160996},"usage":{"bytes":362826547,"node":{"pct":0.01770037710617187},"limit":{"pct":9.923134671484496e-05}},"workingset":{"bytes":1986724},"rss":{"bytes":402801},"pagefaults":296495,"majorpagefaults":0},"start_time":"2021-03-30T07:59:06Z","name":"container-name-44"},"namespace":"namespace26"}}
          {"create": {}}
          {"@timestamp":"2022-06-21T15:38:30Z","kubernetes":{"host":"gke-apps-0","node":"gke-apps-0-0","pod":"gke-apps-0-0-0","container":{"cpu":{"usage":{"nanocores":40018,"core":{"ns":12828317850},"node":{"pct":2.77905e-05},"limit":{"pct":2.77905e-05}}},"memory":{"available":{"bytes":1062428344},"usage":{"bytes":265142477,"node":{"pct":0.01770037710617187},"limit":{"pct":9.923134671484496e-05}},"workingset":{"bytes":2294743},"rss":{"bytes":340623},"pagefaults":224530,"majorpagefaults":0},"start_time":"2021-03-30T07:59:06Z","name":"container-name-44"},"namespace":"namespace26"}}
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "my-data-stream/_search"
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "my-data-stream/_search"
        body: |
          {
              "size": 0,
              "aggs": {
                  "tsid": {
                      "terms": {
                          "field": "_tsid"
                      },
                      "aggs": {
                          "over_time": {
                              "date_histogram": {
                                  "field": "@timestamp",
                                  "fixed_interval": "1d"
                              },
                              "aggs": {
                                  "min": {
                                      "min": {
                                          "field": "kubernetes.container.memory.usage.bytes"
                                      }
                                  },
                                  "max": {
                                      "max": {
                                          "field": "kubernetes.container.memory.usage.bytes"
                                      }
                                  },
                                  "avg": {
                                      "avg": {
                                          "field": "kubernetes.container.memory.usage.bytes"
                                      }
                                  }
                              }
                          }
                      }
                  }
              }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "_data_stream/my-data-stream"
  - is_false: _shards.failures
  - match:
      $body:
        {
          "data_streams": [
            {
              "name": "my-data-stream",
              "timestamp_field": {
                "name": "@timestamp"
              },
              "indices": [
                {
                  "index_name": $body.data_streams.0.indices.0.index_name,
                  "index_uuid": $body.data_streams.0.indices.0.index_uuid,
                  "prefer_ilm": true,
                  "managed_by": "Unmanaged"
                }
              ],
              "generation": 1,
              "status": "GREEN",
              "next_generation_managed_by": "Unmanaged",
              "prefer_ilm": true,
              "template": "my-data-stream-template",
              "hidden": false,
              "system": false,
              "allow_custom_routing": false,
              "replicated": false,"failure_indices":[],"failure_store":false,
              "rollover_on_write": false,
              "time_series": {
                "temporal_ranges": [
                  {
                    "start": $body.data_streams.0.time_series.temporal_ranges.0.start,
                    "end": $body.data_streams.0.time_series.temporal_ranges.0.end
                  }
                ]
              }
            }
          ]
        }
  - do:
      raw:
        method: POST
        path: "my-data-stream/_rollover/"
  - is_false: _shards.failures
---
"line_412":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: We don't know the index name at test time
  - do:
      raw:
        method: PUT
        path: ".ds-my-data-stream-2023.07.26-000001/_block/write"
  - is_false: _shards.failures
---
"line_421":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: We don't know the index name at test time
  - do:
      raw:
        method: POST
        path: ".ds-my-data-stream-2023.07.26-000001/_downsample/.ds-my-data-stream-2023.07.26-000001-downsample"
        body: |
          {
            "fixed_interval": "1h"
          }
  - is_false: _shards.failures
---
"line_433":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: We don't know the index name at test time
  - do:
      raw:
        method: POST
        path: "_data_stream/_modify"
        body: |
          {
            "actions": [
              {
                "remove_backing_index": {
                  "data_stream": "my-data-stream",
                  "index": ".ds-my-data-stream-2023.07.26-000001"
                }
              },
              {
                "add_backing_index": {
                  "data_stream": "my-data-stream",
                  "index": ".ds-my-data-stream-2023.07.26-000001-downsample"
                }
              }
            ]
          }
  - is_false: _shards.failures
---
"line_466":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: Because we've skipped the previous steps
  - do:
      raw:
        method: GET
        path: "my-data-stream/_search"
  - is_false: _shards.failures
---
"line_591":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: Because we've skipped the previous steps
  - do:
      raw:
        method: GET
        path: "my-data-stream/_search"
        body: |
          {
              "size": 0,
              "aggs": {
                  "tsid": {
                      "terms": {
                          "field": "_tsid"
                      },
                      "aggs": {
                          "over_time": {
                              "date_histogram": {
                                  "field": "@timestamp",
                                  "fixed_interval": "1d"
                              },
                              "aggs": {
                                  "min": {
                                      "min": {
                                          "field": "kubernetes.container.memory.usage.bytes"
                                      }
                                  },
                                  "max": {
                                      "max": {
                                          "field": "kubernetes.container.memory.usage.bytes"
                                      }
                                  },
                                  "avg": {
                                      "avg": {
                                          "field": "kubernetes.container.memory.usage.bytes"
                                      }
                                  }
                              }
                          }
                      }
                  }
              }
          }
  - is_false: _shards.failures
