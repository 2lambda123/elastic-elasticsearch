---
"esql-multivalued-fields-reorders":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: POST
        path: "mv/_bulk"
        refresh: ""
        body: |
          { "index" : {} }
          { "a": 1, "b": [2, 1] }
          { "index" : {} }
          { "a": 2, "b": 3 }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "_query"
        body: |
          {
            "query": "FROM mv | LIMIT 2"
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "columns": [
            { "name": "a", "type": "long"},
            { "name": "b", "type": "long"}
          ],
          "values": [
            [1, [1, 2]],
            [2,      3]
          ]
        }
---
"esql-multivalued-fields-kwdups":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: PUT
        path: "mv"
        body: |
          {
            "mappings": {
              "properties": {
                "b": {"type": "keyword"}
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "mv/_bulk"
        refresh: ""
        body: |
          { "index" : {} }
          { "a": 1, "b": ["foo", "foo", "bar"] }
          { "index" : {} }
          { "a": 2, "b": ["bar", "bar"] }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "_query"
        body: |
          {
            "query": "FROM mv | LIMIT 2"
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "columns": [
            { "name": "a", "type": "long"},
            { "name": "b", "type": "keyword"}
          ],
          "values": [
            [1, ["bar", "foo"]],
            [2,          "bar"]
          ]
        }
---
"esql-multivalued-fields-longdups":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: PUT
        path: "mv"
        body: |
          {
            "mappings": {
              "properties": {
                "b": {"type": "long"}
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "mv/_bulk"
        refresh: ""
        body: |
          { "index" : {} }
          { "a": 1, "b": [2, 2, 1] }
          { "index" : {} }
          { "a": 2, "b": [1, 1] }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "_query"
        body: |
          {
            "query": "FROM mv | LIMIT 2"
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "columns": [
            { "name": "a", "type": "long"},
            { "name": "b", "type": "long"}
          ],
          "values": [
            [1, [1, 2, 2]],
            [2,    [1, 1]]
          ]
        }
---
"esql-multivalued-fields-longdups-tostring":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: PUT
        path: "mv"
        body: |
          {
            "mappings": {
              "properties": {
                "b": {"type": "long"}
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "mv/_bulk"
        refresh: ""
        body: |
          { "index" : {} }
          { "a": 1, "b": [2, 2, 1] }
          { "index" : {} }
          { "a": 2, "b": [1, 1] }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "_query"
        body: |
          {
            "query": "FROM mv | EVAL b=TO_STRING(b) | LIMIT 2"
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "columns": [
            { "name": "a", "type": "long"},
            { "name": "b", "type": "keyword"}
          ],
          "values": [
            [1, ["1", "2", "2"]],
            [2,      ["1", "1"]]
          ]
        }
---
"esql-multivalued-fields-mv-into-null":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: POST
        path: "mv/_bulk"
        refresh: ""
        body: |
          { "index" : {} }
          { "a": 1, "b": [2, 1] }
          { "index" : {} }
          { "a": 2, "b": 3 }
  - is_false: _shards.failures
  - do:
      warnings:
         - "Line 1:16: evaluation of [b + 2] failed, treating result as null. Only first 20 failures recorded."
         - "Line 1:16: java.lang.IllegalArgumentException: single-value function encountered multi-value"
         - "Line 1:23: evaluation of [a + b] failed, treating result as null. Only first 20 failures recorded."
         - "Line 1:23: java.lang.IllegalArgumentException: single-value function encountered multi-value"
      raw:
        method: POST
        path: "_query"
        body: |
          {
            "query": "FROM mv | EVAL b + 2, a + b | LIMIT 4"
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "columns": [
            { "name": "a",   "type": "long"},
            { "name": "b",   "type": "long"},
            { "name": "b + 2", "type": "long"},
            { "name": "a + b", "type": "long"}
          ],
          "values": [
            [1, [1, 2], null, null],
            [2,      3,    5,    5]
          ]
        }
  - do:
      raw:
        method: POST
        path: "_query"
        body: |
          {
            "query": "FROM mv | EVAL b=MV_MIN(b) | EVAL b + 2, a + b | LIMIT 4"
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "columns": [
            { "name": "a",   "type": "long"},
            { "name": "b",   "type": "long"},
            { "name": "b + 2", "type": "long"},
            { "name": "a + b", "type": "long"}
          ],
          "values": [
            [1, 1, 3, 2],
            [2, 3, 5, 5]
          ]
        }
