---
setup:
  - do:
      raw:
        method: PUT
        path: "_data_stream/logs-generic-default"
---
teardown:
  - do:
      raw:
        method: DELETE
        path: "_data_stream/*"
---
"line_41":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
# Named setup host

  # Fetch the http host. We use the host of the master because we know there will always be a master.
  - do:
      cluster.state: {}
  - set: { master_node: master }
  - do:
      nodes.info:
        metric: [ http, transport ]
  - set: {nodes.$master.http.publish_address: host}
  - set: {nodes.$master.transport.publish_address: transport_host}

  - do:
      raw:
        method: PUT
        path: "_cluster/settings"
        body: |
          {
            "persistent": {
              "cluster": {
                "remote": {
                  "clusterB": {
                    "mode": "proxy",
                    "skip_unavailable": true,
                    
                    
                    "proxy_address": "${transport_host}"
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: PUT
        path: "_cluster/settings"
        body: |
          {
            "persistent": {
              "cluster": {
                "remote": {
                  "clusterA": {
                    "mode": "proxy",
                    "skip_unavailable": true,
                    
                    
                    "proxy_address": "${transport_host}"
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
---
"line_87":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
# Named setup remote_cluster

  # Fetch the http host. We use the host of the master because we know there will always be a master.
  - do:
      cluster.state: {}
  - set: { master_node: master }
  - do:
      nodes.info:
        metric: [ http, transport ]
  - set: {nodes.$master.http.publish_address: host}
  - set: {nodes.$master.transport.publish_address: transport_host}

  - do:
      cluster.put_settings:
        body:
          persistent:
            cluster.remote.remote_cluster.seeds: $transport_host

  - do:
      raw:
        method: PUT
        path: "_ccr/auto_follow/logs-generic-default"
        body: |
          {
            "remote_cluster": "remote_cluster",
            "leader_index_patterns": [
              ".ds-logs-generic-default-20*"
            ],
            "leader_index_exclusion_patterns":"*-replicated_from_clustera",
            "follow_index_pattern": "{{leader_index}}-replicated_from_clusterb"
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: PUT
        path: "_ccr/auto_follow/logs-generic-default"
        body: |
          {
            "remote_cluster": "remote_cluster",
            "leader_index_patterns": [
              ".ds-logs-generic-default-20*"
            ],
            "leader_index_exclusion_patterns":"*-replicated_from_clusterb",
            "follow_index_pattern": "{{leader_index}}-replicated_from_clustera"
          }
  - is_false: _shards.failures
---
"line_185":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: GET
        path: "logs*/_search"
        size: "0"
  - is_false: _shards.failures
---
"line_237":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: GET
        path: "logs-generic-default*/_search"
        filter_path: "hits.hits._index"
        body: |
          {
          "query": {
              "match": {
                "event.sequence": "97"
              }
            }
          }
  - is_false: _shards.failures
---
"line_256":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: POST
        path: "logs-generic-default/_update_by_query"
        body: |
          {
            "query": {
              "match": {
                "event.sequence": "97"
              }
            },
            "script": {
              "source": "ctx._source.event.original = params.new_event",
              "lang": "painless",
              "params": {
                "new_event": "FOOBAR"
              }
            }
          }
  - is_false: _shards.failures
