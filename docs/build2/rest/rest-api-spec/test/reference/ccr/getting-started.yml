---
setup:
  - do:
      raw:
        method: PUT
        path: "server-metrics"
        body: |
          {
            "settings" : {
              "index" : {
                "number_of_shards" : 1,
                "number_of_replicas" : 0
              }
            },
            "mappings" : {
              "properties" : {
                "@timestamp" : {
                  "type" : "date"
                },
                "accept" : {
                  "type" : "long"
                },
                "deny" : {
                  "type" : "long"
                },
                "host" : {
                  "type" : "keyword"
                },
                "response" : {
                  "type" : "float"
                },
                "service" : {
                  "type" : "keyword"
                },
                "total" : {
                  "type" : "long"
                }
              }
            }
          }
---
"line_106":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
# Named setup host

  # Fetch the http host. We use the host of the master because we know there will always be a master.
  - do:
      cluster.state: {}
  - set: { master_node: master }
  - do:
      nodes.info:
        metric: [ http, transport ]
  - set: {nodes.$master.http.publish_address: host}
  - set: {nodes.$master.transport.publish_address: transport_host}

  - do:
      raw:
        method: PUT
        path: "_cluster/settings"
        body: |
          {
            "persistent" : {
              "cluster" : {
                "remote" : {
                  "leader" : {
                    "seeds" : [
                      "${transport_host}"
                    ]
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "_remote/info"
  - is_false: _shards.failures
  - match:
      $body:
        {
          "leader" : {
            "seeds" : [
              "$body.leader.seeds.0"
            ],
            "connected" : $body.leader.connected,
            "num_nodes_connected" : $body.leader.num_nodes_connected,
            "max_connections_per_cluster" : 3,
            "initial_connect_timeout" : "30s",
            "skip_unavailable" : false,
            "mode" : "sniff"
          }
        }
  - do:
      raw:
        method: PUT
        path: "server-metrics-follower/_ccr/follow"
        wait_for_active_shards: "1"
        body: |
          {
            "remote_cluster" : "leader",
            "leader_index" : "server-metrics"
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "follow_index_created" : true,
          "follow_index_shards_acked" : true,
          "index_following_started" : true
        }
  - do:
      raw:
        method: POST
        path: "server-metrics-follower/_ccr/pause_follow"
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "server-metrics-follower/_close"
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "server-metrics-follower/_ccr/unfollow"
  - is_false: _shards.failures
  - do:
      raw:
        method: PUT
        path: "_ccr/auto_follow/beats"
        body: |
          {
            "remote_cluster" : "leader",
            "leader_index_patterns" :
            [
              "metricbeat-*",
              "packetbeat-*"
            ],
            "follow_index_pattern" : "{{leader_index}}-copy"
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "acknowledged" : true
        }
  - do:
      raw:
        method: DELETE
        path: "_ccr/auto_follow/beats"
  - is_false: _shards.failures
