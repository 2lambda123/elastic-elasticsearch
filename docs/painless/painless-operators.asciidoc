[[painless-operators]]
=== Operators

An operator is the most basic action that can be taken to evaluate values in a
script. An expression is one-to-many consecutive operations.  Precedence is the
order in which an operator will be evaluated relative to another operator.
Associativity is the direction within an expression in which a specific operator
is evaluated.  The following table lists all available operators:

[options="header",cols="6,3,2,4"]
|====
| Operator              | Symbol(s)  | Precedence | Associativity
| <<precedence, Precedence>>            | ()         | 0          | left
| <<method-call, Method Call>>           | . ()       | 1          | left
| <<field-access, Field Access>>          | .          | 1          | left
| <<null-safe, Null Safe>>             | ?.         | 1          | left
| <<function-call, Function Call>>         | ()         | 1          | left
| <<array-initialization, Array Initialization>>  | [] {}      | 1          | left
| <<array-access, Array Access>>          | []         | 1          | left
| <<array-length, Array Length>>         | .          | 1          | left
| <<list-initialization, List Initialization>>   | []         | 1          | left
| <<list-access, List Access>>           | []         | 1          | left
| <<map-initialization, Map Initialization>>    | [:]        | 1          | left
| <<map-access, Map Access>>            | []         | 1          | left
| <<post-increment, Post Increment>>        | ++         | 1          | left
| <<post-decrement, Post Decrement>>        | --         | 1          | left
| <<pre-increment, Pre Increment>>         | ++         | 2          | right
| <<pre-decrement, Pre Decrement>>         | --         | 2          | right
| <<unary-positive, Unary Positive>>        | +          | 2          | right
| <<unary-negative, Unary Negative>>        | -          | 2          | right
| <<boolean-not, Boolean Not>>           | !          | 2          | right
| <<bitwise-not, Bitwise Not>>           | ~          | 2          | right
| <<cast, Cast>>                  | ()         | 3          | right
| <<new-instance, New Instance>>          | new ()     | 3          | right
| <<new-array, New Array>>             | new        | 3          | right
| <<multiplication, Multiplication>>        | *          | 4          | left
| <<division, Division>>              | /          | 4          | left
| <<remainder, Remainder>>             | %          | 4          | left
| <<string-concatenation, String Concatenation>>  | +          | 5          | left
| <<addition, Addition>>              | +          | 5          | left
| <<subtraction, Subtraction>>           | -          | 5          | left
| <<left-shift, Left Shift>>            | <<         | 6          | left
| <<right-shift, Right Shift>>           | >>         | 6          | left
| <<unsigned-right-shift, Unsigned Right Shift>>  | >>>        | 6          | left
| <<greater-than, Greater Than>>          | >          | 7          | left
| <<greater-than-or-equal, Greater Than Or Equal>> | >=         | 7          | left
| <<less-than, Less Than>>             | <          | 7          | left
| <<less-than-or-equal, Less Than Or Equal>>    | <=         | 7          | left
| <<instance-of, Instance Of>>           | instanceof | 8          | left
| <<equality-equals, Equality Equals>>       | ==         | 9          | left
| <<equality-not-equals, Equality Not Equals>>   | !=         | 9          | left
| <<identity-equals, Identity Equals>>       | ===        | 9          | left
| <<identity-not-equals, Identity Not Equals>>   | !==        | 9          | left
| <<bitwise-and, Bitwise And>>           | &          | 10         | left
| <<boolean-xor, Boolean Xor>>           | ^          | 11         | left
| <<bitwise-xor, Bitwise Xor>>           | ^          | 11         | left
| <<bitwise-or, Bitwise Or>>            | \|         | 12         | left
| <<boolean-and, Boolean And>>           | &&         | 13         | left
| <<boolean-or, Boolean Or>>            | \|\|       | 14         | left
| <<conditional, Conditional>>           | ? :        | 15         | right
| <<elvis, Elvis>>                 | ?:         | 16         | right
| <<assignment, Assignment>>            | =          | 17         | right
| <<compound-assignment, Compound Assignment>>   | $=         | 17         | right
|====
