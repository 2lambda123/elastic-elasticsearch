[role="exclude",id="painless-api-reference-filter-org-elasticsearch-xpack-sql-expression-function-scalar-whitelist"]
=== org.elasticsearch.xpack.sql.expression.function.scalar.whitelist

[[painless-api-reference-filter-org-elasticsearch-xpack-sql-expression-function-scalar-whitelist-InternalSqlScriptUtils]]
==== InternalSqlScriptUtils
* static Double abs(Number)
* static Double acos(Number)
* static def add(Object, Object)
* static Boolean and(Boolean, Boolean)
* static ZonedDateTime asDateTime(Object)
* static OffsetTime asTime(String)
* static Integer ascii(String)
* static Double asin(Number)
* static Double atan(Number)
* static Number atan2(Number, Number)
* static Integer bitLength(String)
* static def cast(Object, String)
* static Double cbrt(Number)
* static Double ceil(Number)
* static Integer charLength(String)
* static String character(Number)
* static def coalesce(List)
* static String concat(String, String)
* static Double cos(Number)
* static Double cosh(Number)
* static Double cot(Number)
* static Integer dateTimeChrono(Object, String, String)
* static String dayName(Object, String)
* static Integer dayOfWeek(Object, String)
* static Double degrees(Number)
* static def div(Object, Object)
* static def docValue(Map, String)
* static Double e(Number)
* static Boolean eq(Object, Object)
* static Double exp(Number)
* static Double expm1(Number)
* static Double floor(Number)
* static def greatest(List)
* static Boolean gt(Object, Object)
* static Boolean gte(Object, Object)
* static Boolean in(Object, List)
* static String insert(String, Number, Number, String)
* static IntervalDayTime intervalDayTime(String, String)
* static IntervalYearMonth intervalYearMonth(String, String)
* static Boolean isNotNull(Object)
* static Boolean isNull(Object)
* static String lcase(String)
* static def least(List)
* static String left(String, Number)
* static Integer length(String)
* static Integer locate(String, String)
* static Integer locate(String, String, Number)
* static Double log(Number)
* static Double log10(Number)
* static Boolean lt(Object, Object)
* static Boolean lte(Object, Object)
* static String ltrim(String)
* static def mod(Object, Object)
* static String monthName(Object, String)
* static def mul(Object, Object)
* static Number neg(Number)
* static Boolean neq(Object, Object)
* static Boolean not(Boolean)
* static boolean nullSafeFilter(Boolean)
* static double nullSafeSortNumeric(Number)
* static String nullSafeSortString(Object)
* static Boolean nulleq(Object, Object)
* static def nullif(Object, Object)
* static Integer octetLength(String)
* static Boolean or(Boolean, Boolean)
* static Double pi(Number)
* static Integer position(String, String)
* static Number power(Number, Number)
* static Integer quarter(Object, String)
* static Double radians(Number)
* static Double random(Number)
* static Boolean regex(String, String)
* static String repeat(String, Number)
* static String replace(String, String, String)
* static String right(String, Number)
* static Number round(Number, Number)
* static String rtrim(String)
* static Double sign(Number)
* static Double sin(Number)
* static Double sinh(Number)
* static String space(Number)
* static Double sqrt(Number)
* static def sub(Object, Object)
* static String substring(String, Number, Number)
* static Double tan(Number)
* static Number truncate(Number, Number)
* static String ucase(String)
* static Integer weekOfYear(Object, String)
* boolean {java11-javadoc}/java.base/java/lang/Object.html#equals(java.lang.Object)[equals](Object)
* int {java11-javadoc}/java.base/java/lang/Object.html#hashCode()[hashCode]()
* String {java11-javadoc}/java.base/java/lang/Object.html#toString()[toString]()


