[[painless-api-reference-bucket-aggregation]]
=== Bucket Aggregation API

==== java.lang
<<painless-api-reference-bucket-aggregation-java-lang, Expand java.lang>>

* <<painless-api-reference-bucket-aggregation-java-lang-Appendable, Appendable>>
* <<painless-api-reference-bucket-aggregation-java-lang-ArithmeticException, ArithmeticException>>
* <<painless-api-reference-bucket-aggregation-java-lang-ArrayIndexOutOfBoundsException, ArrayIndexOutOfBoundsException>>
* <<painless-api-reference-bucket-aggregation-java-lang-ArrayStoreException, ArrayStoreException>>
* <<painless-api-reference-bucket-aggregation-java-lang-Boolean, Boolean>>
* <<painless-api-reference-bucket-aggregation-java-lang-Byte, Byte>>
* <<painless-api-reference-bucket-aggregation-java-lang-CharSequence, CharSequence>>
* <<painless-api-reference-bucket-aggregation-java-lang-Character, Character>>
* <<painless-api-reference-bucket-aggregation-java-lang-Character.Subset, Character.Subset>>
* <<painless-api-reference-bucket-aggregation-java-lang-Character.UnicodeBlock, Character.UnicodeBlock>>
* <<painless-api-reference-bucket-aggregation-java-lang-Character.UnicodeScript, Character.UnicodeScript>>
* <<painless-api-reference-bucket-aggregation-java-lang-ClassCastException, ClassCastException>>
* <<painless-api-reference-bucket-aggregation-java-lang-ClassNotFoundException, ClassNotFoundException>>
* <<painless-api-reference-bucket-aggregation-java-lang-CloneNotSupportedException, CloneNotSupportedException>>
* <<painless-api-reference-bucket-aggregation-java-lang-Comparable, Comparable>>
* <<painless-api-reference-bucket-aggregation-java-lang-Double, Double>>
* <<painless-api-reference-bucket-aggregation-java-lang-Enum, Enum>>
* <<painless-api-reference-bucket-aggregation-java-lang-EnumConstantNotPresentException, EnumConstantNotPresentException>>
* <<painless-api-reference-bucket-aggregation-java-lang-Exception, Exception>>
* <<painless-api-reference-bucket-aggregation-java-lang-Float, Float>>
* <<painless-api-reference-bucket-aggregation-java-lang-IllegalAccessException, IllegalAccessException>>
* <<painless-api-reference-bucket-aggregation-java-lang-IllegalArgumentException, IllegalArgumentException>>
* <<painless-api-reference-bucket-aggregation-java-lang-IllegalMonitorStateException, IllegalMonitorStateException>>
* <<painless-api-reference-bucket-aggregation-java-lang-IllegalStateException, IllegalStateException>>
* <<painless-api-reference-bucket-aggregation-java-lang-IllegalThreadStateException, IllegalThreadStateException>>
* <<painless-api-reference-bucket-aggregation-java-lang-IndexOutOfBoundsException, IndexOutOfBoundsException>>
* <<painless-api-reference-bucket-aggregation-java-lang-InstantiationException, InstantiationException>>
* <<painless-api-reference-bucket-aggregation-java-lang-Integer, Integer>>
* <<painless-api-reference-bucket-aggregation-java-lang-InterruptedException, InterruptedException>>
* <<painless-api-reference-bucket-aggregation-java-lang-Iterable, Iterable>>
* <<painless-api-reference-bucket-aggregation-java-lang-Long, Long>>
* <<painless-api-reference-bucket-aggregation-java-lang-Math, Math>>
* <<painless-api-reference-bucket-aggregation-java-lang-NegativeArraySizeException, NegativeArraySizeException>>
* <<painless-api-reference-bucket-aggregation-java-lang-NoSuchFieldException, NoSuchFieldException>>
* <<painless-api-reference-bucket-aggregation-java-lang-NoSuchMethodException, NoSuchMethodException>>
* <<painless-api-reference-bucket-aggregation-java-lang-NullPointerException, NullPointerException>>
* <<painless-api-reference-bucket-aggregation-java-lang-Number, Number>>
* <<painless-api-reference-bucket-aggregation-java-lang-NumberFormatException, NumberFormatException>>
* <<painless-api-reference-bucket-aggregation-java-lang-Object, Object>>
* <<painless-api-reference-bucket-aggregation-java-lang-ReflectiveOperationException, ReflectiveOperationException>>
* <<painless-api-reference-bucket-aggregation-java-lang-RuntimeException, RuntimeException>>
* <<painless-api-reference-bucket-aggregation-java-lang-SecurityException, SecurityException>>
* <<painless-api-reference-bucket-aggregation-java-lang-Short, Short>>
* <<painless-api-reference-bucket-aggregation-java-lang-StackTraceElement, StackTraceElement>>
* <<painless-api-reference-bucket-aggregation-java-lang-StrictMath, StrictMath>>
* <<painless-api-reference-bucket-aggregation-java-lang-String, String>>
* <<painless-api-reference-bucket-aggregation-java-lang-StringBuffer, StringBuffer>>
* <<painless-api-reference-bucket-aggregation-java-lang-StringBuilder, StringBuilder>>
* <<painless-api-reference-bucket-aggregation-java-lang-StringIndexOutOfBoundsException, StringIndexOutOfBoundsException>>
* <<painless-api-reference-bucket-aggregation-java-lang-System, System>>
* <<painless-api-reference-bucket-aggregation-java-lang-TypeNotPresentException, TypeNotPresentException>>
* <<painless-api-reference-bucket-aggregation-java-lang-UnsupportedOperationException, UnsupportedOperationException>>
* <<painless-api-reference-bucket-aggregation-java-lang-Void, Void>>


==== java.math
<<painless-api-reference-bucket-aggregation-java-math, Expand java.math>>

* <<painless-api-reference-bucket-aggregation-java-math-BigDecimal, BigDecimal>>
* <<painless-api-reference-bucket-aggregation-java-math-BigInteger, BigInteger>>
* <<painless-api-reference-bucket-aggregation-java-math-MathContext, MathContext>>
* <<painless-api-reference-bucket-aggregation-java-math-RoundingMode, RoundingMode>>


==== java.text
<<painless-api-reference-bucket-aggregation-java-text, Expand java.text>>

* <<painless-api-reference-bucket-aggregation-java-text-Annotation, Annotation>>
* <<painless-api-reference-bucket-aggregation-java-text-AttributedCharacterIterator, AttributedCharacterIterator>>
* <<painless-api-reference-bucket-aggregation-java-text-AttributedCharacterIterator.Attribute, AttributedCharacterIterator.Attribute>>
* <<painless-api-reference-bucket-aggregation-java-text-AttributedString, AttributedString>>
* <<painless-api-reference-bucket-aggregation-java-text-Bidi, Bidi>>
* <<painless-api-reference-bucket-aggregation-java-text-BreakIterator, BreakIterator>>
* <<painless-api-reference-bucket-aggregation-java-text-CharacterIterator, CharacterIterator>>
* <<painless-api-reference-bucket-aggregation-java-text-ChoiceFormat, ChoiceFormat>>
* <<painless-api-reference-bucket-aggregation-java-text-CollationElementIterator, CollationElementIterator>>
* <<painless-api-reference-bucket-aggregation-java-text-CollationKey, CollationKey>>
* <<painless-api-reference-bucket-aggregation-java-text-Collator, Collator>>
* <<painless-api-reference-bucket-aggregation-java-text-DateFormat, DateFormat>>
* <<painless-api-reference-bucket-aggregation-java-text-DateFormat.Field, DateFormat.Field>>
* <<painless-api-reference-bucket-aggregation-java-text-DateFormatSymbols, DateFormatSymbols>>
* <<painless-api-reference-bucket-aggregation-java-text-DecimalFormat, DecimalFormat>>
* <<painless-api-reference-bucket-aggregation-java-text-DecimalFormatSymbols, DecimalFormatSymbols>>
* <<painless-api-reference-bucket-aggregation-java-text-FieldPosition, FieldPosition>>
* <<painless-api-reference-bucket-aggregation-java-text-Format, Format>>
* <<painless-api-reference-bucket-aggregation-java-text-Format.Field, Format.Field>>
* <<painless-api-reference-bucket-aggregation-java-text-MessageFormat, MessageFormat>>
* <<painless-api-reference-bucket-aggregation-java-text-MessageFormat.Field, MessageFormat.Field>>
* <<painless-api-reference-bucket-aggregation-java-text-Normalizer, Normalizer>>
* <<painless-api-reference-bucket-aggregation-java-text-Normalizer.Form, Normalizer.Form>>
* <<painless-api-reference-bucket-aggregation-java-text-NumberFormat, NumberFormat>>
* <<painless-api-reference-bucket-aggregation-java-text-NumberFormat.Field, NumberFormat.Field>>
* <<painless-api-reference-bucket-aggregation-java-text-ParseException, ParseException>>
* <<painless-api-reference-bucket-aggregation-java-text-ParsePosition, ParsePosition>>
* <<painless-api-reference-bucket-aggregation-java-text-RuleBasedCollator, RuleBasedCollator>>
* <<painless-api-reference-bucket-aggregation-java-text-SimpleDateFormat, SimpleDateFormat>>
* <<painless-api-reference-bucket-aggregation-java-text-StringCharacterIterator, StringCharacterIterator>>


==== java.time
<<painless-api-reference-bucket-aggregation-java-time, Expand java.time>>

* <<painless-api-reference-bucket-aggregation-java-time-Clock, Clock>>
* <<painless-api-reference-bucket-aggregation-java-time-DateTimeException, DateTimeException>>
* <<painless-api-reference-bucket-aggregation-java-time-DayOfWeek, DayOfWeek>>
* <<painless-api-reference-bucket-aggregation-java-time-Duration, Duration>>
* <<painless-api-reference-bucket-aggregation-java-time-Instant, Instant>>
* <<painless-api-reference-bucket-aggregation-java-time-LocalDate, LocalDate>>
* <<painless-api-reference-bucket-aggregation-java-time-LocalDateTime, LocalDateTime>>
* <<painless-api-reference-bucket-aggregation-java-time-LocalTime, LocalTime>>
* <<painless-api-reference-bucket-aggregation-java-time-Month, Month>>
* <<painless-api-reference-bucket-aggregation-java-time-MonthDay, MonthDay>>
* <<painless-api-reference-bucket-aggregation-java-time-OffsetDateTime, OffsetDateTime>>
* <<painless-api-reference-bucket-aggregation-java-time-OffsetTime, OffsetTime>>
* <<painless-api-reference-bucket-aggregation-java-time-Period, Period>>
* <<painless-api-reference-bucket-aggregation-java-time-Year, Year>>
* <<painless-api-reference-bucket-aggregation-java-time-YearMonth, YearMonth>>
* <<painless-api-reference-bucket-aggregation-java-time-ZoneId, ZoneId>>
* <<painless-api-reference-bucket-aggregation-java-time-ZoneOffset, ZoneOffset>>
* <<painless-api-reference-bucket-aggregation-java-time-ZonedDateTime, ZonedDateTime>>


==== java.time.chrono
<<painless-api-reference-bucket-aggregation-java-time-chrono, Expand java.time.chrono>>

* <<painless-api-reference-bucket-aggregation-java-time-chrono-AbstractChronology, AbstractChronology>>
* <<painless-api-reference-bucket-aggregation-java-time-chrono-ChronoLocalDate, ChronoLocalDate>>
* <<painless-api-reference-bucket-aggregation-java-time-chrono-ChronoLocalDateTime, ChronoLocalDateTime>>
* <<painless-api-reference-bucket-aggregation-java-time-chrono-ChronoPeriod, ChronoPeriod>>
* <<painless-api-reference-bucket-aggregation-java-time-chrono-ChronoZonedDateTime, ChronoZonedDateTime>>
* <<painless-api-reference-bucket-aggregation-java-time-chrono-Chronology, Chronology>>
* <<painless-api-reference-bucket-aggregation-java-time-chrono-Era, Era>>
* <<painless-api-reference-bucket-aggregation-java-time-chrono-HijrahChronology, HijrahChronology>>
* <<painless-api-reference-bucket-aggregation-java-time-chrono-HijrahDate, HijrahDate>>
* <<painless-api-reference-bucket-aggregation-java-time-chrono-HijrahEra, HijrahEra>>
* <<painless-api-reference-bucket-aggregation-java-time-chrono-IsoChronology, IsoChronology>>
* <<painless-api-reference-bucket-aggregation-java-time-chrono-IsoEra, IsoEra>>
* <<painless-api-reference-bucket-aggregation-java-time-chrono-JapaneseChronology, JapaneseChronology>>
* <<painless-api-reference-bucket-aggregation-java-time-chrono-JapaneseDate, JapaneseDate>>
* <<painless-api-reference-bucket-aggregation-java-time-chrono-JapaneseEra, JapaneseEra>>
* <<painless-api-reference-bucket-aggregation-java-time-chrono-MinguoChronology, MinguoChronology>>
* <<painless-api-reference-bucket-aggregation-java-time-chrono-MinguoDate, MinguoDate>>
* <<painless-api-reference-bucket-aggregation-java-time-chrono-MinguoEra, MinguoEra>>
* <<painless-api-reference-bucket-aggregation-java-time-chrono-ThaiBuddhistChronology, ThaiBuddhistChronology>>
* <<painless-api-reference-bucket-aggregation-java-time-chrono-ThaiBuddhistDate, ThaiBuddhistDate>>
* <<painless-api-reference-bucket-aggregation-java-time-chrono-ThaiBuddhistEra, ThaiBuddhistEra>>


==== java.time.format
<<painless-api-reference-bucket-aggregation-java-time-format, Expand java.time.format>>

* <<painless-api-reference-bucket-aggregation-java-time-format-DateTimeFormatter, DateTimeFormatter>>
* <<painless-api-reference-bucket-aggregation-java-time-format-DateTimeFormatterBuilder, DateTimeFormatterBuilder>>
* <<painless-api-reference-bucket-aggregation-java-time-format-DateTimeParseException, DateTimeParseException>>
* <<painless-api-reference-bucket-aggregation-java-time-format-DecimalStyle, DecimalStyle>>
* <<painless-api-reference-bucket-aggregation-java-time-format-FormatStyle, FormatStyle>>
* <<painless-api-reference-bucket-aggregation-java-time-format-ResolverStyle, ResolverStyle>>
* <<painless-api-reference-bucket-aggregation-java-time-format-SignStyle, SignStyle>>
* <<painless-api-reference-bucket-aggregation-java-time-format-TextStyle, TextStyle>>


==== java.time.temporal
<<painless-api-reference-bucket-aggregation-java-time-temporal, Expand java.time.temporal>>

* <<painless-api-reference-bucket-aggregation-java-time-temporal-ChronoField, ChronoField>>
* <<painless-api-reference-bucket-aggregation-java-time-temporal-ChronoUnit, ChronoUnit>>
* <<painless-api-reference-bucket-aggregation-java-time-temporal-IsoFields, IsoFields>>
* <<painless-api-reference-bucket-aggregation-java-time-temporal-JulianFields, JulianFields>>
* <<painless-api-reference-bucket-aggregation-java-time-temporal-Temporal, Temporal>>
* <<painless-api-reference-bucket-aggregation-java-time-temporal-TemporalAccessor, TemporalAccessor>>
* <<painless-api-reference-bucket-aggregation-java-time-temporal-TemporalAdjuster, TemporalAdjuster>>
* <<painless-api-reference-bucket-aggregation-java-time-temporal-TemporalAdjusters, TemporalAdjusters>>
* <<painless-api-reference-bucket-aggregation-java-time-temporal-TemporalAmount, TemporalAmount>>
* <<painless-api-reference-bucket-aggregation-java-time-temporal-TemporalField, TemporalField>>
* <<painless-api-reference-bucket-aggregation-java-time-temporal-TemporalQueries, TemporalQueries>>
* <<painless-api-reference-bucket-aggregation-java-time-temporal-TemporalQuery, TemporalQuery>>
* <<painless-api-reference-bucket-aggregation-java-time-temporal-TemporalUnit, TemporalUnit>>
* <<painless-api-reference-bucket-aggregation-java-time-temporal-UnsupportedTemporalTypeException, UnsupportedTemporalTypeException>>
* <<painless-api-reference-bucket-aggregation-java-time-temporal-ValueRange, ValueRange>>
* <<painless-api-reference-bucket-aggregation-java-time-temporal-WeekFields, WeekFields>>


==== java.time.zone
<<painless-api-reference-bucket-aggregation-java-time-zone, Expand java.time.zone>>

* <<painless-api-reference-bucket-aggregation-java-time-zone-ZoneOffsetTransition, ZoneOffsetTransition>>
* <<painless-api-reference-bucket-aggregation-java-time-zone-ZoneOffsetTransitionRule, ZoneOffsetTransitionRule>>
* <<painless-api-reference-bucket-aggregation-java-time-zone-ZoneOffsetTransitionRule.TimeDefinition, ZoneOffsetTransitionRule.TimeDefinition>>
* <<painless-api-reference-bucket-aggregation-java-time-zone-ZoneRules, ZoneRules>>
* <<painless-api-reference-bucket-aggregation-java-time-zone-ZoneRulesException, ZoneRulesException>>
* <<painless-api-reference-bucket-aggregation-java-time-zone-ZoneRulesProvider, ZoneRulesProvider>>


==== java.util
<<painless-api-reference-bucket-aggregation-java-util, Expand java.util>>

* <<painless-api-reference-bucket-aggregation-java-util-AbstractCollection, AbstractCollection>>
* <<painless-api-reference-bucket-aggregation-java-util-AbstractList, AbstractList>>
* <<painless-api-reference-bucket-aggregation-java-util-AbstractMap, AbstractMap>>
* <<painless-api-reference-bucket-aggregation-java-util-AbstractMap.SimpleEntry, AbstractMap.SimpleEntry>>
* <<painless-api-reference-bucket-aggregation-java-util-AbstractMap.SimpleImmutableEntry, AbstractMap.SimpleImmutableEntry>>
* <<painless-api-reference-bucket-aggregation-java-util-AbstractQueue, AbstractQueue>>
* <<painless-api-reference-bucket-aggregation-java-util-AbstractSequentialList, AbstractSequentialList>>
* <<painless-api-reference-bucket-aggregation-java-util-AbstractSet, AbstractSet>>
* <<painless-api-reference-bucket-aggregation-java-util-ArrayDeque, ArrayDeque>>
* <<painless-api-reference-bucket-aggregation-java-util-ArrayList, ArrayList>>
* <<painless-api-reference-bucket-aggregation-java-util-Arrays, Arrays>>
* <<painless-api-reference-bucket-aggregation-java-util-Base64, Base64>>
* <<painless-api-reference-bucket-aggregation-java-util-Base64.Decoder, Base64.Decoder>>
* <<painless-api-reference-bucket-aggregation-java-util-Base64.Encoder, Base64.Encoder>>
* <<painless-api-reference-bucket-aggregation-java-util-BitSet, BitSet>>
* <<painless-api-reference-bucket-aggregation-java-util-Calendar, Calendar>>
* <<painless-api-reference-bucket-aggregation-java-util-Calendar.Builder, Calendar.Builder>>
* <<painless-api-reference-bucket-aggregation-java-util-Collection, Collection>>
* <<painless-api-reference-bucket-aggregation-java-util-Collections, Collections>>
* <<painless-api-reference-bucket-aggregation-java-util-Comparator, Comparator>>
* <<painless-api-reference-bucket-aggregation-java-util-ConcurrentModificationException, ConcurrentModificationException>>
* <<painless-api-reference-bucket-aggregation-java-util-Currency, Currency>>
* <<painless-api-reference-bucket-aggregation-java-util-Date, Date>>
* <<painless-api-reference-bucket-aggregation-java-util-Deque, Deque>>
* <<painless-api-reference-bucket-aggregation-java-util-Dictionary, Dictionary>>
* <<painless-api-reference-bucket-aggregation-java-util-DoubleSummaryStatistics, DoubleSummaryStatistics>>
* <<painless-api-reference-bucket-aggregation-java-util-DuplicateFormatFlagsException, DuplicateFormatFlagsException>>
* <<painless-api-reference-bucket-aggregation-java-util-EmptyStackException, EmptyStackException>>
* <<painless-api-reference-bucket-aggregation-java-util-Enumeration, Enumeration>>
* <<painless-api-reference-bucket-aggregation-java-util-EventListener, EventListener>>
* <<painless-api-reference-bucket-aggregation-java-util-EventListenerProxy, EventListenerProxy>>
* <<painless-api-reference-bucket-aggregation-java-util-EventObject, EventObject>>
* <<painless-api-reference-bucket-aggregation-java-util-FormatFlagsConversionMismatchException, FormatFlagsConversionMismatchException>>
* <<painless-api-reference-bucket-aggregation-java-util-Formattable, Formattable>>
* <<painless-api-reference-bucket-aggregation-java-util-FormattableFlags, FormattableFlags>>
* <<painless-api-reference-bucket-aggregation-java-util-Formatter, Formatter>>
* <<painless-api-reference-bucket-aggregation-java-util-Formatter.BigDecimalLayoutForm, Formatter.BigDecimalLayoutForm>>
* <<painless-api-reference-bucket-aggregation-java-util-FormatterClosedException, FormatterClosedException>>
* <<painless-api-reference-bucket-aggregation-java-util-GregorianCalendar, GregorianCalendar>>
* <<painless-api-reference-bucket-aggregation-java-util-HashMap, HashMap>>
* <<painless-api-reference-bucket-aggregation-java-util-HashSet, HashSet>>
* <<painless-api-reference-bucket-aggregation-java-util-Hashtable, Hashtable>>
* <<painless-api-reference-bucket-aggregation-java-util-IdentityHashMap, IdentityHashMap>>
* <<painless-api-reference-bucket-aggregation-java-util-IllegalFormatCodePointException, IllegalFormatCodePointException>>
* <<painless-api-reference-bucket-aggregation-java-util-IllegalFormatConversionException, IllegalFormatConversionException>>
* <<painless-api-reference-bucket-aggregation-java-util-IllegalFormatException, IllegalFormatException>>
* <<painless-api-reference-bucket-aggregation-java-util-IllegalFormatFlagsException, IllegalFormatFlagsException>>
* <<painless-api-reference-bucket-aggregation-java-util-IllegalFormatPrecisionException, IllegalFormatPrecisionException>>
* <<painless-api-reference-bucket-aggregation-java-util-IllegalFormatWidthException, IllegalFormatWidthException>>
* <<painless-api-reference-bucket-aggregation-java-util-IllformedLocaleException, IllformedLocaleException>>
* <<painless-api-reference-bucket-aggregation-java-util-InputMismatchException, InputMismatchException>>
* <<painless-api-reference-bucket-aggregation-java-util-IntSummaryStatistics, IntSummaryStatistics>>
* <<painless-api-reference-bucket-aggregation-java-util-Iterator, Iterator>>
* <<painless-api-reference-bucket-aggregation-java-util-LinkedHashMap, LinkedHashMap>>
* <<painless-api-reference-bucket-aggregation-java-util-LinkedHashSet, LinkedHashSet>>
* <<painless-api-reference-bucket-aggregation-java-util-LinkedList, LinkedList>>
* <<painless-api-reference-bucket-aggregation-java-util-List, List>>
* <<painless-api-reference-bucket-aggregation-java-util-ListIterator, ListIterator>>
* <<painless-api-reference-bucket-aggregation-java-util-Locale, Locale>>
* <<painless-api-reference-bucket-aggregation-java-util-Locale.Builder, Locale.Builder>>
* <<painless-api-reference-bucket-aggregation-java-util-Locale.Category, Locale.Category>>
* <<painless-api-reference-bucket-aggregation-java-util-Locale.FilteringMode, Locale.FilteringMode>>
* <<painless-api-reference-bucket-aggregation-java-util-Locale.LanguageRange, Locale.LanguageRange>>
* <<painless-api-reference-bucket-aggregation-java-util-LongSummaryStatistics, LongSummaryStatistics>>
* <<painless-api-reference-bucket-aggregation-java-util-Map, Map>>
* <<painless-api-reference-bucket-aggregation-java-util-Map.Entry, Map.Entry>>
* <<painless-api-reference-bucket-aggregation-java-util-MissingFormatArgumentException, MissingFormatArgumentException>>
* <<painless-api-reference-bucket-aggregation-java-util-MissingFormatWidthException, MissingFormatWidthException>>
* <<painless-api-reference-bucket-aggregation-java-util-MissingResourceException, MissingResourceException>>
* <<painless-api-reference-bucket-aggregation-java-util-NavigableMap, NavigableMap>>
* <<painless-api-reference-bucket-aggregation-java-util-NavigableSet, NavigableSet>>
* <<painless-api-reference-bucket-aggregation-java-util-NoSuchElementException, NoSuchElementException>>
* <<painless-api-reference-bucket-aggregation-java-util-Objects, Objects>>
* <<painless-api-reference-bucket-aggregation-java-util-Observable, Observable>>
* <<painless-api-reference-bucket-aggregation-java-util-Observer, Observer>>
* <<painless-api-reference-bucket-aggregation-java-util-Optional, Optional>>
* <<painless-api-reference-bucket-aggregation-java-util-OptionalDouble, OptionalDouble>>
* <<painless-api-reference-bucket-aggregation-java-util-OptionalInt, OptionalInt>>
* <<painless-api-reference-bucket-aggregation-java-util-OptionalLong, OptionalLong>>
* <<painless-api-reference-bucket-aggregation-java-util-PrimitiveIterator, PrimitiveIterator>>
* <<painless-api-reference-bucket-aggregation-java-util-PrimitiveIterator.OfDouble, PrimitiveIterator.OfDouble>>
* <<painless-api-reference-bucket-aggregation-java-util-PrimitiveIterator.OfInt, PrimitiveIterator.OfInt>>
* <<painless-api-reference-bucket-aggregation-java-util-PrimitiveIterator.OfLong, PrimitiveIterator.OfLong>>
* <<painless-api-reference-bucket-aggregation-java-util-PriorityQueue, PriorityQueue>>
* <<painless-api-reference-bucket-aggregation-java-util-Queue, Queue>>
* <<painless-api-reference-bucket-aggregation-java-util-Random, Random>>
* <<painless-api-reference-bucket-aggregation-java-util-RandomAccess, RandomAccess>>
* <<painless-api-reference-bucket-aggregation-java-util-Set, Set>>
* <<painless-api-reference-bucket-aggregation-java-util-SimpleTimeZone, SimpleTimeZone>>
* <<painless-api-reference-bucket-aggregation-java-util-SortedMap, SortedMap>>
* <<painless-api-reference-bucket-aggregation-java-util-SortedSet, SortedSet>>
* <<painless-api-reference-bucket-aggregation-java-util-Spliterator, Spliterator>>
* <<painless-api-reference-bucket-aggregation-java-util-Spliterator.OfDouble, Spliterator.OfDouble>>
* <<painless-api-reference-bucket-aggregation-java-util-Spliterator.OfInt, Spliterator.OfInt>>
* <<painless-api-reference-bucket-aggregation-java-util-Spliterator.OfLong, Spliterator.OfLong>>
* <<painless-api-reference-bucket-aggregation-java-util-Spliterator.OfPrimitive, Spliterator.OfPrimitive>>
* <<painless-api-reference-bucket-aggregation-java-util-Spliterators, Spliterators>>
* <<painless-api-reference-bucket-aggregation-java-util-Stack, Stack>>
* <<painless-api-reference-bucket-aggregation-java-util-StringJoiner, StringJoiner>>
* <<painless-api-reference-bucket-aggregation-java-util-StringTokenizer, StringTokenizer>>
* <<painless-api-reference-bucket-aggregation-java-util-TimeZone, TimeZone>>
* <<painless-api-reference-bucket-aggregation-java-util-TooManyListenersException, TooManyListenersException>>
* <<painless-api-reference-bucket-aggregation-java-util-TreeMap, TreeMap>>
* <<painless-api-reference-bucket-aggregation-java-util-TreeSet, TreeSet>>
* <<painless-api-reference-bucket-aggregation-java-util-UUID, UUID>>
* <<painless-api-reference-bucket-aggregation-java-util-UnknownFormatConversionException, UnknownFormatConversionException>>
* <<painless-api-reference-bucket-aggregation-java-util-UnknownFormatFlagsException, UnknownFormatFlagsException>>
* <<painless-api-reference-bucket-aggregation-java-util-Vector, Vector>>


==== java.util.function
<<painless-api-reference-bucket-aggregation-java-util-function, Expand java.util.function>>

* <<painless-api-reference-bucket-aggregation-java-util-function-BiConsumer, BiConsumer>>
* <<painless-api-reference-bucket-aggregation-java-util-function-BiFunction, BiFunction>>
* <<painless-api-reference-bucket-aggregation-java-util-function-BiPredicate, BiPredicate>>
* <<painless-api-reference-bucket-aggregation-java-util-function-BinaryOperator, BinaryOperator>>
* <<painless-api-reference-bucket-aggregation-java-util-function-BooleanSupplier, BooleanSupplier>>
* <<painless-api-reference-bucket-aggregation-java-util-function-Consumer, Consumer>>
* <<painless-api-reference-bucket-aggregation-java-util-function-DoubleBinaryOperator, DoubleBinaryOperator>>
* <<painless-api-reference-bucket-aggregation-java-util-function-DoubleConsumer, DoubleConsumer>>
* <<painless-api-reference-bucket-aggregation-java-util-function-DoubleFunction, DoubleFunction>>
* <<painless-api-reference-bucket-aggregation-java-util-function-DoublePredicate, DoublePredicate>>
* <<painless-api-reference-bucket-aggregation-java-util-function-DoubleSupplier, DoubleSupplier>>
* <<painless-api-reference-bucket-aggregation-java-util-function-DoubleToIntFunction, DoubleToIntFunction>>
* <<painless-api-reference-bucket-aggregation-java-util-function-DoubleToLongFunction, DoubleToLongFunction>>
* <<painless-api-reference-bucket-aggregation-java-util-function-DoubleUnaryOperator, DoubleUnaryOperator>>
* <<painless-api-reference-bucket-aggregation-java-util-function-Function, Function>>
* <<painless-api-reference-bucket-aggregation-java-util-function-IntBinaryOperator, IntBinaryOperator>>
* <<painless-api-reference-bucket-aggregation-java-util-function-IntConsumer, IntConsumer>>
* <<painless-api-reference-bucket-aggregation-java-util-function-IntFunction, IntFunction>>
* <<painless-api-reference-bucket-aggregation-java-util-function-IntPredicate, IntPredicate>>
* <<painless-api-reference-bucket-aggregation-java-util-function-IntSupplier, IntSupplier>>
* <<painless-api-reference-bucket-aggregation-java-util-function-IntToDoubleFunction, IntToDoubleFunction>>
* <<painless-api-reference-bucket-aggregation-java-util-function-IntToLongFunction, IntToLongFunction>>
* <<painless-api-reference-bucket-aggregation-java-util-function-IntUnaryOperator, IntUnaryOperator>>
* <<painless-api-reference-bucket-aggregation-java-util-function-LongBinaryOperator, LongBinaryOperator>>
* <<painless-api-reference-bucket-aggregation-java-util-function-LongConsumer, LongConsumer>>
* <<painless-api-reference-bucket-aggregation-java-util-function-LongFunction, LongFunction>>
* <<painless-api-reference-bucket-aggregation-java-util-function-LongPredicate, LongPredicate>>
* <<painless-api-reference-bucket-aggregation-java-util-function-LongSupplier, LongSupplier>>
* <<painless-api-reference-bucket-aggregation-java-util-function-LongToDoubleFunction, LongToDoubleFunction>>
* <<painless-api-reference-bucket-aggregation-java-util-function-LongToIntFunction, LongToIntFunction>>
* <<painless-api-reference-bucket-aggregation-java-util-function-LongUnaryOperator, LongUnaryOperator>>
* <<painless-api-reference-bucket-aggregation-java-util-function-ObjDoubleConsumer, ObjDoubleConsumer>>
* <<painless-api-reference-bucket-aggregation-java-util-function-ObjIntConsumer, ObjIntConsumer>>
* <<painless-api-reference-bucket-aggregation-java-util-function-ObjLongConsumer, ObjLongConsumer>>
* <<painless-api-reference-bucket-aggregation-java-util-function-Predicate, Predicate>>
* <<painless-api-reference-bucket-aggregation-java-util-function-Supplier, Supplier>>
* <<painless-api-reference-bucket-aggregation-java-util-function-ToDoubleBiFunction, ToDoubleBiFunction>>
* <<painless-api-reference-bucket-aggregation-java-util-function-ToDoubleFunction, ToDoubleFunction>>
* <<painless-api-reference-bucket-aggregation-java-util-function-ToIntBiFunction, ToIntBiFunction>>
* <<painless-api-reference-bucket-aggregation-java-util-function-ToIntFunction, ToIntFunction>>
* <<painless-api-reference-bucket-aggregation-java-util-function-ToLongBiFunction, ToLongBiFunction>>
* <<painless-api-reference-bucket-aggregation-java-util-function-ToLongFunction, ToLongFunction>>
* <<painless-api-reference-bucket-aggregation-java-util-function-UnaryOperator, UnaryOperator>>


==== java.util.regex
<<painless-api-reference-bucket-aggregation-java-util-regex, Expand java.util.regex>>

* <<painless-api-reference-bucket-aggregation-java-util-regex-Matcher, Matcher>>
* <<painless-api-reference-bucket-aggregation-java-util-regex-Pattern, Pattern>>


==== java.util.stream
<<painless-api-reference-bucket-aggregation-java-util-stream, Expand java.util.stream>>

* <<painless-api-reference-bucket-aggregation-java-util-stream-BaseStream, BaseStream>>
* <<painless-api-reference-bucket-aggregation-java-util-stream-Collector, Collector>>
* <<painless-api-reference-bucket-aggregation-java-util-stream-Collector.Characteristics, Collector.Characteristics>>
* <<painless-api-reference-bucket-aggregation-java-util-stream-Collectors, Collectors>>
* <<painless-api-reference-bucket-aggregation-java-util-stream-DoubleStream, DoubleStream>>
* <<painless-api-reference-bucket-aggregation-java-util-stream-DoubleStream.Builder, DoubleStream.Builder>>
* <<painless-api-reference-bucket-aggregation-java-util-stream-IntStream, IntStream>>
* <<painless-api-reference-bucket-aggregation-java-util-stream-IntStream.Builder, IntStream.Builder>>
* <<painless-api-reference-bucket-aggregation-java-util-stream-LongStream, LongStream>>
* <<painless-api-reference-bucket-aggregation-java-util-stream-LongStream.Builder, LongStream.Builder>>
* <<painless-api-reference-bucket-aggregation-java-util-stream-Stream, Stream>>
* <<painless-api-reference-bucket-aggregation-java-util-stream-Stream.Builder, Stream.Builder>>


==== org.apache.lucene.util
<<painless-api-reference-bucket-aggregation-org-apache-lucene-util, Expand org.apache.lucene.util>>

* <<painless-api-reference-bucket-aggregation-org-apache-lucene-util-BytesRef, BytesRef>>


==== org.elasticsearch.common.geo
<<painless-api-reference-bucket-aggregation-org-elasticsearch-common-geo, Expand org.elasticsearch.common.geo>>

* <<painless-api-reference-bucket-aggregation-org-elasticsearch-common-geo-GeoPoint, GeoPoint>>


==== org.elasticsearch.index.fielddata
<<painless-api-reference-bucket-aggregation-org-elasticsearch-index-fielddata, Expand org.elasticsearch.index.fielddata>>

* <<painless-api-reference-bucket-aggregation-org-elasticsearch-index-fielddata-ScriptDocValues.Booleans, ScriptDocValues.Booleans>>
* <<painless-api-reference-bucket-aggregation-org-elasticsearch-index-fielddata-ScriptDocValues.BytesRefs, ScriptDocValues.BytesRefs>>
* <<painless-api-reference-bucket-aggregation-org-elasticsearch-index-fielddata-ScriptDocValues.Dates, ScriptDocValues.Dates>>
* <<painless-api-reference-bucket-aggregation-org-elasticsearch-index-fielddata-ScriptDocValues.Doubles, ScriptDocValues.Doubles>>
* <<painless-api-reference-bucket-aggregation-org-elasticsearch-index-fielddata-ScriptDocValues.GeoPoints, ScriptDocValues.GeoPoints>>
* <<painless-api-reference-bucket-aggregation-org-elasticsearch-index-fielddata-ScriptDocValues.Longs, ScriptDocValues.Longs>>
* <<painless-api-reference-bucket-aggregation-org-elasticsearch-index-fielddata-ScriptDocValues.Strings, ScriptDocValues.Strings>>


==== org.elasticsearch.index.mapper
<<painless-api-reference-bucket-aggregation-org-elasticsearch-index-mapper, Expand org.elasticsearch.index.mapper>>

* <<painless-api-reference-bucket-aggregation-org-elasticsearch-index-mapper-IpFieldMapper.IpFieldType.IpScriptDocValues, IpFieldMapper.IpFieldType.IpScriptDocValues>>


==== org.elasticsearch.index.query
<<painless-api-reference-bucket-aggregation-org-elasticsearch-index-query, Expand org.elasticsearch.index.query>>

* <<painless-api-reference-bucket-aggregation-org-elasticsearch-index-query-IntervalFilterScript.Interval, IntervalFilterScript.Interval>>


==== org.elasticsearch.index.similarity
<<painless-api-reference-bucket-aggregation-org-elasticsearch-index-similarity, Expand org.elasticsearch.index.similarity>>

* <<painless-api-reference-bucket-aggregation-org-elasticsearch-index-similarity-ScriptedSimilarity.Doc, ScriptedSimilarity.Doc>>
* <<painless-api-reference-bucket-aggregation-org-elasticsearch-index-similarity-ScriptedSimilarity.Field, ScriptedSimilarity.Field>>
* <<painless-api-reference-bucket-aggregation-org-elasticsearch-index-similarity-ScriptedSimilarity.Query, ScriptedSimilarity.Query>>
* <<painless-api-reference-bucket-aggregation-org-elasticsearch-index-similarity-ScriptedSimilarity.Term, ScriptedSimilarity.Term>>


==== org.elasticsearch.painless.api
<<painless-api-reference-bucket-aggregation-org-elasticsearch-painless-api, Expand org.elasticsearch.painless.api>>

* <<painless-api-reference-bucket-aggregation-org-elasticsearch-painless-api-Debug, Debug>>


==== org.elasticsearch.script
<<painless-api-reference-bucket-aggregation-org-elasticsearch-script, Expand org.elasticsearch.script>>

* <<painless-api-reference-bucket-aggregation-org-elasticsearch-script-JodaCompatibleZonedDateTime, JodaCompatibleZonedDateTime>>


==== org.elasticsearch.search.lookup
<<painless-api-reference-bucket-aggregation-org-elasticsearch-search-lookup, Expand org.elasticsearch.search.lookup>>

* <<painless-api-reference-bucket-aggregation-org-elasticsearch-search-lookup-FieldLookup, FieldLookup>>


include::painless-api-reference-bucket-aggregation-java-lang.asciidoc[]
include::painless-api-reference-bucket-aggregation-java-math.asciidoc[]
include::painless-api-reference-bucket-aggregation-java-text.asciidoc[]
include::painless-api-reference-bucket-aggregation-java-time.asciidoc[]
include::painless-api-reference-bucket-aggregation-java-time-chrono.asciidoc[]
include::painless-api-reference-bucket-aggregation-java-time-format.asciidoc[]
include::painless-api-reference-bucket-aggregation-java-time-temporal.asciidoc[]
include::painless-api-reference-bucket-aggregation-java-time-zone.asciidoc[]
include::painless-api-reference-bucket-aggregation-java-util.asciidoc[]
include::painless-api-reference-bucket-aggregation-java-util-function.asciidoc[]
include::painless-api-reference-bucket-aggregation-java-util-regex.asciidoc[]
include::painless-api-reference-bucket-aggregation-java-util-stream.asciidoc[]
include::painless-api-reference-bucket-aggregation-org-apache-lucene-util.asciidoc[]
include::painless-api-reference-bucket-aggregation-org-elasticsearch-common-geo.asciidoc[]
include::painless-api-reference-bucket-aggregation-org-elasticsearch-index-fielddata.asciidoc[]
include::painless-api-reference-bucket-aggregation-org-elasticsearch-index-mapper.asciidoc[]
include::painless-api-reference-bucket-aggregation-org-elasticsearch-index-query.asciidoc[]
include::painless-api-reference-bucket-aggregation-org-elasticsearch-index-similarity.asciidoc[]
include::painless-api-reference-bucket-aggregation-org-elasticsearch-painless-api.asciidoc[]
include::painless-api-reference-bucket-aggregation-org-elasticsearch-script.asciidoc[]
include::painless-api-reference-bucket-aggregation-org-elasticsearch-search-lookup.asciidoc[]
