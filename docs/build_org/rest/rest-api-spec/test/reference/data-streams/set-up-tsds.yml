---
setup:
  - do:
      raw:
        method: PUT
        path: "_snapshot/found-snapshots"
        body: |
          {
           "type": "fs",
            "settings": {
              "location": "my_backup_location"
            }
          }
---
"line_60":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: PUT
        path: "_ilm/policy/my-weather-sensor-lifecycle-policy"
        body: |
          {
            "policy": {
              "phases": {
                "hot": {
                  "actions": {
                    "rollover": {
                      "max_age": "1d",
                      "max_primary_shard_size": "50gb"
                    }
                  }
                },
                "warm": {
                  "min_age": "30d",
                  "actions": {
                    "shrink": {
                      "number_of_shards": 1
                    },
                    "forcemerge": {
                      "max_num_segments": 1
                    }
                  }
                },
                "cold": {
                  "min_age": "60d",
                  "actions": {
                    "searchable_snapshot": {
                      "snapshot_repository": "found-snapshots"
                    }
                  }
                },
                "frozen": {
                  "min_age": "90d",
                  "actions": {
                    "searchable_snapshot": {
                      "snapshot_repository": "found-snapshots"
                    }
                  }
                },
                "delete": {
                  "min_age": "735d",
                  "actions": {
                    "delete": {}
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: PUT
        path: "_component_template/my-weather-sensor-mappings"
        body: |
          {
            "template": {
              "mappings": {
                "properties": {
                  "sensor_id": {
                    "type": "keyword",
                    "time_series_dimension": true
                  },
                  "location": {
                    "type": "keyword",
                    "time_series_dimension": true
                  },
                  "temperature": {
                    "type": "half_float",
                    "time_series_metric": "gauge"
                  },
                  "humidity": {
                    "type": "half_float",
                    "time_series_metric": "gauge"
                  },
                  "@timestamp": {
                    "type": "date",
                    "format": "strict_date_optional_time"
                  }
                }
              }
            },
            "_meta": {
              "description": "Mappings for weather sensor data"
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: PUT
        path: "_component_template/my-weather-sensor-settings"
        body: |
          {
            "template": {
              "settings": {
                "index.lifecycle.name": "my-lifecycle-policy"
              }
            },
            "_meta": {
              "description": "Index settings for weather sensor data"
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: PUT
        path: "_index_template/my-weather-sensor-index-template"
        body: |
          {
            "index_patterns": ["metrics-weather_sensors-*"],
            "data_stream": { },
            "template": {
              "settings": {
                "index.mode": "time_series",
                "index.routing_path": [ "sensor_id", "location" ]
              }
            },
            "composed_of": [ "my-weather-sensor-mappings", "my-weather-sensor-settings" ],
            "priority": 500,
            "_meta": {
              "description": "Template for my weather sensor data"
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: DELETE
        path: "_data_stream/*"
  - is_false: _shards.failures
  - do:
      raw:
        method: DELETE
        path: "_index_template/*"
  - is_false: _shards.failures
  - do:
      raw:
        method: DELETE
        path: "_component_template/my-*"
  - is_false: _shards.failures
  - do:
      raw:
        method: DELETE
        path: "_ilm/policy/my-weather-sensor-lifecycle-policy"
  - is_false: _shards.failures
---
"line_282":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason:  The @timestamp value won't match an accepted range in the TSDS
  - do:
      raw:
        method: PUT
        path: "metrics-weather_sensors-dev/_bulk"
        body: |
          { "create":{ } }
          { "@timestamp": "2099-05-06T16:21:15.000Z", "sensor_id": "HAL-000001", "location": "plains", "temperature": 26.7,"humidity": 49.9 }
          { "create":{ } }
          { "@timestamp": "2099-05-06T16:25:42.000Z", "sensor_id": "SYKENET-000001", "location": "swamp", "temperature": 32.4, "humidity": 88.9 }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "metrics-weather_sensors-dev/_doc"
        body: |
          {
            "@timestamp": "2099-05-06T16:21:15.000Z",
            "sensor_id": "SYKENET-000001",
            "location": "swamp",
            "temperature": 32.4,
            "humidity": 88.9
          }
  - is_false: _shards.failures
---
"line_305":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
# Named setup tsds_template

  - do:
      indices.put_index_template:
        name: my-weather-sensor-index-template
        body: |
          {
            "index_patterns": [ "metrics-weather_sensors-*" ],
            "data_stream": { },
            "template": {
              "settings": {
                "index.mode": "time_series",
                "index.routing_path": [ "sensor_id", "location" ]
              },
              "mappings": {
                "properties": {
                  "sensor_id": {
                    "type": "keyword",
                    "time_series_dimension": true
                  },
                  "location": {
                    "type": "keyword",
                    "time_series_dimension": true
                  }
                }
              }
            },
            "priority": 500
          }

  - do:
      raw:
        method: PUT
        path: "_data_stream/metrics-weather_sensors-dev"
  - is_false: _shards.failures
# Named teardown tsds_cleanup

  - do:
      raw:
        method: DELETE
        path: '_data_stream/*'
  - is_true: acknowledged
  - do:
      raw:
        method: DELETE
        path: '_index_template/*'
  - is_true: acknowledged

---
"line_338":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
# Named setup tsds

  - do:
      indices.put_index_template:
        name: my-weather-sensor-index-template
        body: |
          {
            "index_patterns": [ "metrics-weather_sensors-*" ],
            "data_stream": { },
            "template": {
              "settings": {
                "index.mode": "time_series",
                "index.routing_path": [ "sensor_id", "location" ]
              },
              "mappings": {
                "properties": {
                  "sensor_id": {
                    "type": "keyword",
                    "time_series_dimension": true
                  },
                  "location": {
                    "type": "keyword",
                    "time_series_dimension": true
                  }
                }
              }
            },
            "priority": 500
          }

  - do:
      raw:
        method: PUT
        path: '_data_stream/metrics-weather_sensors-dev'

  - do:
      raw:
        method: POST
        path: "metrics-weather_sensors-dev/_rollover"
  - is_false: _shards.failures
# Named teardown tsds_cleanup

  - do:
      raw:
        method: DELETE
        path: '_data_stream/*'
  - is_true: acknowledged
  - do:
      raw:
        method: DELETE
        path: '_index_template/*'
  - is_true: acknowledged

