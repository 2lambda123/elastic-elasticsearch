---
"line_44":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason:  not expected to match the sample below
  - do:
      raw:
        method: POST
        path: "_component_template/source_template"
        body: |
          {
            "template": {
              "settings": {
                "index": {
                  "number_of_replicas": 2,
                  "number_of_shards": 2,
                  "mode": "time_series",
                  "routing_path": [ "metricset" ]
                }
              },
              "mappings": {
                "properties": {
                  "@timestamp": { "type": "date" },
                  "metricset": {
                    "type": "keyword",
                    "time_series_dimension": true
                  },
                  "k8s": {
                    "properties": {
                      "tx": { "type": "long" },
                      "rx": { "type": "long" }
                    }
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "_index_template/1"
        body: |
          {
            "index_patterns": [
              "k8s*"
            ],
            "composed_of": [
              "source_template"
            ],
            "data_stream": {}
          }
  - is_false: _shards.failures
  - match:
      $body:
        
        {
          ".ds-k8s-2023.09.01-000002": {
            "settings": {
              "index": {
                "mode": "time_series",
                "routing": {
                  "allocation": {
                    "include": {
                      "_tier_preference": "data_hot"
                    }
                  }
                },
                "hidden": "true",
                "number_of_shards": "2",
                "time_series": {
                  "end_time": "2023-09-01T14:00:00.000Z",
                  "start_time": "2023-09-01T10:00:00.000Z"
                },
                "provided_name": ".ds-k9s-2023.09.01-000002",
                "creation_date": "1694439857608",
                "number_of_replicas": "2",
                "routing_path": [
                  "metricset"
                ],
                ...
              }
            }
          },
          ".ds-k8s-2023.09.01-000001": {
            "settings": {
              "index": {
                "mode": "time_series",
                "routing": {
                  "allocation": {
                    "include": {
                      "_tier_preference": "data_hot"
                    }
                  }
                },
                "hidden": "true",
                "number_of_shards": "2",
                "time_series": {
                  "end_time": "2023-09-01T10:00:00.000Z",
                  "start_time": "2023-09-01T06:00:00.000Z"
                },
                "provided_name": ".ds-k9s-2023.09.01-000001",
                "creation_date": "1694439837126",
                "number_of_replicas": "2",
                "routing_path": [
                  "metricset"
                ],
                ...
              }
            }
          }
        }
  - do:
      raw:
        method: POST
        path: "_component_template/destination_template"
        body: |
          {
            "template": {
              "settings": {
                "index": {
                  "number_of_replicas": 0,
                  "number_of_shards": 4,
                  "mode": "time_series",
                  "routing_path": [ "metricset" ],
                  "time_series": {
                    "end_time": "2023-09-01T14:00:00.000Z",
                    "start_time": "2023-09-01T06:00:00.000Z"
                  }
                }
              },
              "mappings": {
                "properties": {
                  "@timestamp": { "type": "date" },
                  "metricset": {
                    "type": "keyword",
                    "time_series_dimension": true
                  },
                  "k8s": {
                    "properties": {
                      "tx": { "type": "long" },
                      "rx": { "type": "long" }
                    }
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "_index_template/2"
        body: |
          {
            "index_patterns": [
              "k8s*"
            ],
            "composed_of": [
              "destination_template"
            ],
            "data_stream": {}
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "_reindex"
        body: |
          {
            "source": {
              "index": "k8s"
            },
            "dest": {
              "index": "k9s",
              "op_type": "create"
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "_component_template/destination_template"
        body: |
          {
            "template": {
              "settings": {
                "index": {
                  "number_of_replicas": 2,
                  "number_of_shards": 2,
                  "mode": "time_series",
                  "routing_path": [ "metricset" ]
                }
              },
              "mappings": {
                "properties": {
                  "@timestamp": { "type": "date" },
                  "metricset": {
                    "type": "keyword",
                    "time_series_dimension": true
                  },
                  "k8s": {
                    "properties": {
                      "tx": { "type": "long" },
                      "rx": { "type": "long" }
                    }
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "k9s/_rollover/"
  - is_false: _shards.failures
