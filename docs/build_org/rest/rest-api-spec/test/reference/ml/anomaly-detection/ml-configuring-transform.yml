---
"line_41":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: SETUP
  - do:
      raw:
        method: PUT
        path: "my-index-000001"
        body: |
          {
            "mappings":{
              "properties": {
                "@timestamp": { "type": "date" },
                "aborted_count": { "type": "long" },
                "another_field": { "type": "keyword" },
                "clientip": { "type": "keyword" },
                "coords": {
                  "properties": {
                    "lat": { "type": "keyword" },
                    "lon": { "type": "keyword" }
                  }
                },
                "error_count": { "type": "long" },
                "query": { "type": "keyword" },
                "some_field": { "type": "keyword" },
                "tokenstring1":{ "type":"keyword" },
                "tokenstring2":{ "type":"keyword" },
                "tokenstring3":{ "type":"keyword" }
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: PUT
        path: "my-index-000001/_doc/1"
        body: |
          {
            "@timestamp":"2017-03-23T13:00:00",
            "error_count":36320,
            "aborted_count":4156,
            "some_field":"JOE",
            "another_field":"SMITH  ",
            "tokenstring1":"foo-bar-baz",
            "tokenstring2":"foo bar baz",
            "tokenstring3":"foo-bar-19",
            "query":"www.ml.elastic.co",
            "clientip":"123.456.78.900",
            "coords": {
              "lat" : 41.44,
              "lon":90.5
            }
          }
  - is_false: _shards.failures
---
"line_96":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: needs-licence
  - do:
      raw:
        method: PUT
        path: "_ml/anomaly_detectors/test1"
        body: |
          {
            "analysis_config":{
              "bucket_span": "10m",
              "detectors":[
                {
                  "function":"mean",
                  "field_name": "total_error_count"
                }
              ]
            },
            "data_description": {
              "time_field":"@timestamp"
            },
            "datafeed_config":{
              "datafeed_id": "datafeed-test1",
              "indices": ["my-index-000001"],
              "runtime_mappings": {
                "total_error_count": {
                  "type": "long",
                  "script": {
                    "source": "emit(doc['error_count'].value + doc['aborted_count'].value)"
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
---
"line_142":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: continued
  - do:
      raw:
        method: GET
        path: "_ml/datafeeds/datafeed-test1/_preview"
---
"line_178":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: needs-licence
  - do:
      raw:
        method: PUT
        path: "_ml/anomaly_detectors/test2"
        body: |
          {
            "analysis_config":{
              "bucket_span": "10m",
              "detectors":[
                {
                  "function":"low_info_content",
                  "field_name":"my_runtime_field"
                }
              ]
            },
            "data_description": {
              "time_field":"@timestamp"
            },
            "datafeed_config":{
              "datafeed_id": "datafeed-test2",
              "indices": ["my-index-000001"],
              "runtime_mappings": {
                "my_runtime_field": {
                  "type": "keyword",
                  "script": {
                    "source": "emit(doc['some_field'].value + '_' + doc['another_field'].value)"
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "_ml/datafeeds/datafeed-test2/_preview"
---
"line_232":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: continued
  - do:
      raw:
        method: POST
        path: "_ml/datafeeds/datafeed-test2/_update"
        body: |
          {
            "runtime_mappings": {
              "my_runtime_field": {
                "type": "keyword",
                "script": {
                  "source": "emit(doc['another_field'].value.trim())"
                }
              }
            }
          }
  - do:
      raw:
        method: GET
        path: "_ml/datafeeds/datafeed-test2/_preview"
---
"line_269":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: continued
  - do:
      raw:
        method: POST
        path: "_ml/datafeeds/datafeed-test2/_update"
        body: |
          {
            "runtime_mappings": {
              "my_runtime_field": {
                "type": "keyword",
                "script": {
                  "source": "emit(doc['some_field'].value.toLowerCase())"
                }
              }
            }
          }
  - do:
      raw:
        method: GET
        path: "_ml/datafeeds/datafeed-test2/_preview"
---
"line_307":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: continued
  - do:
      raw:
        method: POST
        path: "_ml/datafeeds/datafeed-test2/_update"
        body: |
          {
            "runtime_mappings": {
              "my_runtime_field": {
                "type": "keyword",
                "script": {
                  "source": "emit(doc['some_field'].value.substring(0, 1).toUpperCase() + doc['some_field'].value.substring(1).toLowerCase())"
                }
              }
            }
          }
  - do:
      raw:
        method: GET
        path: "_ml/datafeeds/datafeed-test2/_preview"
---
"line_345":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: continued
  - do:
      raw:
        method: POST
        path: "_ml/datafeeds/datafeed-test2/_update"
        body: |
          {
            "runtime_mappings": {
              "my_runtime_field": {
                "type": "keyword",
                "script": {
                  "source": "emit(/\\s/.matcher(doc['tokenstring2'].value).replaceAll('_'))"
                }
              }
            }
          }
  - do:
      raw:
        method: GET
        path: "_ml/datafeeds/datafeed-test2/_preview"
---
"line_382":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: continued
  - do:
      raw:
        method: POST
        path: "_ml/datafeeds/datafeed-test2/_update"
        body: |
          {
            "runtime_mappings": {
              "my_runtime_field": {
                "type": "keyword",
                "script": {
                  "source": "def m = /(.*)-bar-([0-9][0-9])/.matcher(doc['tokenstring3'].value); emit(m.find() ? m.group(1) + '_' + m.group(2) : '');"
                }
              }
            }
          }
  - do:
      raw:
        method: GET
        path: "_ml/datafeeds/datafeed-test2/_preview"
---
"line_421":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: needs-licence
  - do:
      raw:
        method: PUT
        path: "_ml/anomaly_detectors/test3"
        body: |
          {
            "analysis_config":{
              "bucket_span": "10m",
              "detectors":[
                {
                  "function":"lat_long",
                  "field_name": "my_coordinates"
                }
              ]
            },
            "data_description": {
              "time_field":"@timestamp"
            },
            "datafeed_config":{
              "datafeed_id": "datafeed-test3",
              "indices": ["my-index-000001"],
              "runtime_mappings": {
                "my_coordinates": {
                  "type": "keyword",
                  "script": {
                    "source": "emit(doc['coords.lat'].value + ',' + doc['coords.lon'].value)"
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "_ml/datafeeds/datafeed-test3/_preview"
---
"line_478":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: needs-licence
  - do:
      raw:
        method: PUT
        path: "_ml/anomaly_detectors/test4"
        body: |
          {
            "description":"DNS tunneling",
            "analysis_config":{
              "bucket_span": "30m",
              "influencers": ["clientip","hrd"],
              "detectors":[
                {
                  "function":"high_info_content",
                  "field_name": "sub",
                  "over_field_name": "hrd",
                  "exclude_frequent":"all"
                }
              ]
            },
            "data_description": {
              "time_field":"@timestamp"
            },
            "datafeed_config":{
              "datafeed_id": "datafeed-test4",
              "indices": ["my-index-000001"],
              "script_fields":{
                "sub":{
                  "script":"return domainSplit(doc['query'].value).get(0);"
                },
                "hrd":{
                  "script":"return domainSplit(doc['query'].value).get(1);"
                }
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "_ml/datafeeds/datafeed-test4/_preview"
