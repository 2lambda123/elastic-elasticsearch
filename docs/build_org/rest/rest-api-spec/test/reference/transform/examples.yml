---
"line_40":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: setup kibana sample data
  - do:
      raw:
        method: POST
        path: "_transform/_preview"
        body: |
          {
            "source": {
              "index": "kibana_sample_data_ecommerce"
            },
            "dest" : {
              "index" : "sample_ecommerce_orders_by_customer"
            },
            "pivot": {
              "group_by": {
                "user": { "terms": { "field": "user" }},
                "customer_id": { "terms": { "field": "customer_id" }}
              },
              "aggregations": {
                "order_count": { "value_count": { "field": "order_id" }},
                "total_order_amt": { "sum": { "field": "taxful_total_price" }},
                "avg_amt_per_order": { "avg": { "field": "taxful_total_price" }},
                "avg_unique_products_per_order": { "avg": { "field": "total_unique_products" }},
                "total_unique_products": { "cardinality": { "field": "products.product_id" }}
              }
            }
          }
  - is_false: _shards.failures
---
"line_129":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: setup kibana sample data
  - do:
      raw:
        method: POST
        path: "_transform/_preview"
        body: |
          {
            "source": {
              "index": "kibana_sample_data_flights",
              "query": {
                "bool": {
                  "filter": [
                    { "term":  { "Cancelled": false } }
                  ]
                }
              }
            },
            "dest" : {
              "index" : "sample_flight_delays_by_carrier"
            },
            "pivot": {
              "group_by": {
                "carrier": { "terms": { "field": "Carrier" }}
              },
              "aggregations": {
                "flights_count": { "value_count": { "field": "FlightNum" }},
                "delay_mins_total": { "sum": { "field": "FlightDelayMin" }},
                "flight_mins_total": { "sum": { "field": "FlightTimeMin" }},
                "delay_time_percentage": {
                  "bucket_script": {
                    "buckets_path": {
                      "delay_time": "delay_mins_total.value",
                      "flight_time": "flight_mins_total.value"
                    },
                    "script": "(params.delay_time / params.flight_time) * 100"
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
---
"line_215":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: setup kibana sample data
  - do:
      raw:
        method: PUT
        path: "_transform/suspicious_client_ips"
        body: |
          {
            "source": {
              "index": "kibana_sample_data_logs"
            },
            "dest" : {
              "index" : "sample_weblogs_by_clientip"
            },
            "sync" : {
              "time": {
                "field": "timestamp",
                "delay": "60s"
              }
            },
            "pivot": {
              "group_by": {
                "clientip": { "terms": { "field": "clientip" } }
                },
              "aggregations": {
                "url_dc": { "cardinality": { "field": "url.keyword" }},
                "bytes_sum": { "sum": { "field": "bytes" }},
                "geo.src_dc": { "cardinality": { "field": "geo.src" }},
                "agent_dc": { "cardinality": { "field": "agent.keyword" }},
                "geo.dest_dc": { "cardinality": { "field": "geo.dest" }},
                "responses.total": { "value_count": { "field": "timestamp" }},
                "success" : {
                   "filter": {
                      "term": { "response" : "200"}}
                  },
                "error404" : {
                   "filter": {
                      "term": { "response" : "404"}}
                  },
                "error5xx" : {
                   "filter": {
                      "range": { "response" : { "gte": 500, "lt": 600}}}
                  },
                "timestamp.min": { "min": { "field": "timestamp" }},
                "timestamp.max": { "max": { "field": "timestamp" }},
                "timestamp.duration_ms": {
                  "bucket_script": {
                    "buckets_path": {
                      "min_time": "timestamp.min.value",
                      "max_time": "timestamp.max.value"
                    },
                    "script": "(params.max_time - params.min_time)"
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
---
"line_286":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: setup kibana sample data
  - do:
      raw:
        method: POST
        path: "_transform/suspicious_client_ips/_start"
  - is_false: _shards.failures
---
"line_296":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: setup kibana sample data
  - do:
      raw:
        method: GET
        path: "sample_weblogs_by_clientip/_search"
  - is_false: _shards.failures
---
"line_394":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: setup kibana sample data
  - do:
      raw:
        method: PUT
        path: "_transform/last-log-from-clientip"
        body: |
          {
            "source": {
              "index": [
                "kibana_sample_data_logs"
              ]
            },
            "latest": {
              "unique_key": [
                "clientip"
              ],
              "sort": "timestamp"
            },
            "frequency": "1m",
            "dest": {
              "index": "last-log-from-clientip"
            },
            "sync": {
              "time": {
                "field": "timestamp",
                "delay": "60s"
              }
            },
            "retention_policy": {
              "time": {
                "field": "timestamp",
                "max_age": "30d"
              }
            },
            "settings": {
              "max_page_search_size": 500
            }
          }
  - is_false: _shards.failures
---
"line_445":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: setup kibana sample data
  - do:
      raw:
        method: POST
        path: "_transform/last-log-from-clientip/_start"
  - is_false: _shards.failures
---
"line_455":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: setup kibana sample data
  - do:
      raw:
        method: GET
        path: "last-log-from-clientip/_search"
  - is_false: _shards.failures
---
"line_537":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: setup kibana sample data
  - do:
      raw:
        method: POST
        path: "_transform/_preview"
        body: |
          {
            "source": {
              "index": "kibana_sample_data_logs"
            },
            "pivot": {
              "group_by": {
                "timestamp": {
                  "date_histogram": {
                    "field": "timestamp",
                    "fixed_interval": "1h"
                  }
                }
              },
              "aggregations": {
                "bytes.max": {
                  "max": {
                    "field": "bytes"
                  }
                },
                "top": {
                  "top_metrics": {
                    "metrics": [
                      {
                        "field": "clientip"
                      },
                      {
                        "field": "geo.src"
                      }
                    ],
                    "sort": {
                      "bytes": "desc"
                    }
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
---
"line_640":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
        - always_skip
      reason: setup kibana sample data
  - do:
      raw:
        method: POST
        path: "_transform/_preview"
        body: |
          {
            "source": {
              "index": "kibana_sample_data_ecommerce"
            },
            "pivot": {
              "group_by": {
                "customer_id": {
                  "terms": {
                    "field": "customer_id"
                  }
                }
              },
              "aggregations": {
                "last": {
                  "top_metrics": {
                    "metrics": [
                      {
                        "field": "email"
                      },
                      {
                        "field": "customer_first_name.keyword"
                      },
                      {
                        "field": "customer_last_name.keyword"
                      }
                    ],
                    "sort": {
                      "order_date": "desc"
                    }
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
