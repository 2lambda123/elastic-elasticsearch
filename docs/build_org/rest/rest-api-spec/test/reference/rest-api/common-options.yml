---
"line_74":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
# Named setup my_index

  - do:
        indices.create:
          index: my-index-000001
          body:
            settings:
              number_of_shards: 1
              number_of_replicas: 1
            mappings:
              properties:
                "@timestamp":
                  type: date
                http:
                  properties:
                    request:
                      properties:
                        method:
                          type: keyword
                message:
                  type: text
                  fields:
                    keyword:
                      type: keyword
                user:
                  properties:
                    id:
                      type: keyword
                      doc_values: true
  - do:
        bulk:
          index: my-index-000001
          refresh: true
          body: |
            { "index":{"_id": "0"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "127.0.0.1" }, "user": { "id": "kimchy" } }
            { "index":{"_id": "1"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
            { "index":{"_id": "2"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
            { "index":{"_id": "3"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
            { "index":{"_id": "4"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
  - do:
      raw:
        method: GET
        path: "_search"
        q: "kimchy"
        filter_path: "took,hits.hits._id,hits.hits._score"
  - is_false: _shards.failures
  - match:
      $body:
        {
          "took" : $body.took,
          "hits" : {
            "hits" : [
              {
                "_id" : "0",
                "_score" : $body.hits.hits.0._score
              }
            ]
          }
        }
---
"line_102":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: PUT
        path: "my-index-000001"
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "_cluster/state"
        filter_path: "metadata.indices.*.stat*"
  - is_false: _shards.failures
  - match:
      $body:
        {
          "metadata" : {
            "indices" : {
              "my-index-000001": {"state": "open"}
            }
          }
        }
---
"line_125":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: PUT
        path: "my-index-000001"
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "_cluster/state"
        filter_path: "routing_table.indices.**.state"
  - is_false: _shards.failures
  - match:
      $body:
        {
          "routing_table": {
            "indices": {
              "my-index-000001": {
                "shards": {
                  "0": [{"state": "STARTED"}, {"state": "UNASSIGNED"}]
                }
              }
            }
          }
        }
---
"line_150":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
# Named setup my_index

  - do:
        indices.create:
          index: my-index-000001
          body:
            settings:
              number_of_shards: 1
              number_of_replicas: 1
            mappings:
              properties:
                "@timestamp":
                  type: date
                http:
                  properties:
                    request:
                      properties:
                        method:
                          type: keyword
                message:
                  type: text
                  fields:
                    keyword:
                      type: keyword
                user:
                  properties:
                    id:
                      type: keyword
                      doc_values: true
  - do:
        bulk:
          index: my-index-000001
          refresh: true
          body: |
            { "index":{"_id": "0"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "127.0.0.1" }, "user": { "id": "kimchy" } }
            { "index":{"_id": "1"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
            { "index":{"_id": "2"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
            { "index":{"_id": "3"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
            { "index":{"_id": "4"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
  - do:
      raw:
        method: GET
        path: "_count"
        filter_path: "-_shards"
  - is_false: _shards.failures
  - match:
      $body:
        {
          "count" : 5
        }
---
"line_169":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: PUT
        path: "my-index-000001"
  - is_false: _shards.failures
  - do:
      raw:
        method: PUT
        path: "my-index-000002"
  - is_false: _shards.failures
  - do:
      raw:
        method: PUT
        path: "my-index-000003"
  - is_false: _shards.failures
  - do:
      raw:
        method: PUT
        path: "logstash-2016.01"
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "_cluster/state"
        filter_path: "metadata.indices.*.state,-metadata.indices.logstash-*"
  - is_false: _shards.failures
  - match:
      $body:
        {
          "metadata" : {
            "indices" : {
              "my-index-000001" : {"state" : "open"},
              "my-index-000002" : {"state" : "open"},
              "my-index-000003" : {"state" : "open"}
            }
          }
        }
---
"line_196":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: POST
        path: "library/_doc"
        refresh: ""
        body: |
          {"title": "Book #1", "rating": 200.1}
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "library/_doc"
        refresh: ""
        body: |
          {"title": "Book #2", "rating": 1.7}
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "library/_doc"
        refresh: ""
        body: |
          {"title": "Book #3", "rating": 0.1}
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "_search"
        filter_path: "hits.hits._source"
        _source: "title"
        sort: "rating:desc"
  - is_false: _shards.failures
  - match:
      $body:
        {
          "hits" : {
            "hits" : [ {
              "_source":{"title":"Book #1"}
            }, {
              "_source":{"title":"Book #2"}
            }, {
              "_source":{"title":"Book #3"}
            } ]
          }
        }
---
"line_229":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
# Named setup my_index

  - do:
        indices.create:
          index: my-index-000001
          body:
            settings:
              number_of_shards: 1
              number_of_replicas: 1
            mappings:
              properties:
                "@timestamp":
                  type: date
                http:
                  properties:
                    request:
                      properties:
                        method:
                          type: keyword
                message:
                  type: text
                  fields:
                    keyword:
                      type: keyword
                user:
                  properties:
                    id:
                      type: keyword
                      doc_values: true
  - do:
        bulk:
          index: my-index-000001
          refresh: true
          body: |
            { "index":{"_id": "0"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "127.0.0.1" }, "user": { "id": "kimchy" } }
            { "index":{"_id": "1"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
            { "index":{"_id": "2"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
            { "index":{"_id": "3"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
            { "index":{"_id": "4"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
  - do:
      raw:
        method: GET
        path: "my-index-000001/_settings"
        flat_settings: "true"
  - is_false: _shards.failures
  - match:
      $body:
        {
          "my-index-000001" : {
            "settings": {
              "index.number_of_replicas": "1",
              "index.number_of_shards": "1",
              "index.creation_date": "$body.my-index-000001.settings.index\\.creation_date",
              "index.uuid": "$body.my-index-000001.settings.index\\.uuid",
              "index.version.created": $body.my-index-000001.settings.index\\.version\\.created,
              "index.routing.allocation.include._tier_preference" : "data_content",
              "index.provided_name" : "my-index-000001"
            }
          }
        }
---
"line_260":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
# Named setup my_index

  - do:
        indices.create:
          index: my-index-000001
          body:
            settings:
              number_of_shards: 1
              number_of_replicas: 1
            mappings:
              properties:
                "@timestamp":
                  type: date
                http:
                  properties:
                    request:
                      properties:
                        method:
                          type: keyword
                message:
                  type: text
                  fields:
                    keyword:
                      type: keyword
                user:
                  properties:
                    id:
                      type: keyword
                      doc_values: true
  - do:
        bulk:
          index: my-index-000001
          refresh: true
          body: |
            { "index":{"_id": "0"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "127.0.0.1" }, "user": { "id": "kimchy" } }
            { "index":{"_id": "1"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
            { "index":{"_id": "2"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
            { "index":{"_id": "3"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
            { "index":{"_id": "4"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
  - do:
      raw:
        method: GET
        path: "my-index-000001/_settings"
        flat_settings: "false"
  - is_false: _shards.failures
  - match:
      $body:
        {
          "my-index-000001" : {
            "settings" : {
              "index" : {
                "number_of_replicas": "1",
                "number_of_shards": "1",
                "creation_date": "$body.my-index-000001.settings.index.creation_date",
                "uuid": "$body.my-index-000001.settings.index.uuid",
                "version": {
                  "created": $body.my-index-000001.settings.index.version.created
                },
                "routing": {
                  "allocation": {
                    "include": {
                      "_tier_preference": "data_content"
                    }
                  }
                },
                "provided_name" : "my-index-000001"
              }
            }
          }
        }
---
"line_342":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      catch: bad_request
      raw:
        method: POST
        path: "my-index-000001/_search"
        size: "surprise_me"
        error_trace: "false"
  - is_false: _shards.failures
  - match:
      $body:
        {
          "error" : {
            "root_cause" : [
              {
                "type" : "illegal_argument_exception",
                "reason" : "Failed to parse int parameter [size] with value [surprise_me]"
              }
            ],
            "type" : "illegal_argument_exception",
            "reason" : "Failed to parse int parameter [size] with value [surprise_me]",
            "caused_by" : {
              "type" : "number_format_exception",
              "reason" : "For input string: \"surprise_me\""
            }
          },
          "status" : 400
        }
---
"line_374":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      catch: bad_request
      raw:
        method: POST
        path: "my-index-000001/_search"
        size: "surprise_me"
        error_trace: "true"
  - is_false: _shards.failures
  - match:
      $body:
        {
          "error": {
            "root_cause": [
              {
                "type": "illegal_argument_exception",
                "reason": "Failed to parse int parameter [size] with value [surprise_me]",
                "stack_trace": $body.error.root_cause.0.stack_trace
              }
            ],
            "type": "illegal_argument_exception",
            "reason": "Failed to parse int parameter [size] with value [surprise_me]",
            "stack_trace": $body.error.stack_trace,
            "caused_by": {
              "type": "number_format_exception",
              "reason": "For input string: \"surprise_me\"",
              "stack_trace": $body.error.caused_by.stack_trace
            }
          },
          "status": 400
        }
