---
setup:
  - do:
      raw:
        method: PUT
        path: "products"
        body: |
          {
            "mappings": {
              "properties": {
                "genre": {
                  "type": "keyword"
                },
                "product": {
                  "type": "keyword"
                },
                "quantity": {
                  "type": "integer"
                }
              }
            }
          }
  - do:
      raw:
        method: POST
        path: "products/_bulk"
        refresh: ""
        body: |
          {"index":{"_id":0}}
          {"genre": "rock", "product": "Product A", "quantity": 4}
          {"index":{"_id":1}}
          {"genre": "rock", "product": "Product A", "quantity": 5}
          {"index":{"_id":2}}
          {"genre": "rock", "product": "Product B", "quantity": 1}
          {"index":{"_id":3}}
          {"genre": "jazz", "product": "Product B", "quantity": 10}
          {"index":{"_id":4}}
          {"genre": "electronic", "product": "Product B", "quantity": 3}
          {"index":{"_id":5}}
          {"genre": "electronic"}
---
"multi-terms-aggregation-example":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: GET
        path: "products/_search"
        filter_path: "aggregations"
        body: |
          {
            "aggs": {
              "genres_and_products": {
                "multi_terms": {
                  "terms": [{
                    "field": "genre"
                  }, {
                    "field": "product"
                  }]
                }
              }
            }
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          
          "aggregations" : {
            "genres_and_products" : {
              "doc_count_error_upper_bound" : 0,
              "sum_other_doc_count" : 0,
              "buckets" : [
                {
                  "key" : [
                    "rock",
                    "Product A"
                  ],
                  "key_as_string" : "rock|Product A",
                  "doc_count" : 2
                },
                {
                  "key" : [
                    "electronic",
                    "Product B"
                  ],
                  "key_as_string" : "electronic|Product B",
                  "doc_count" : 1
                },
                {
                  "key" : [
                    "jazz",
                    "Product B"
                  ],
                  "key_as_string" : "jazz|Product B",
                  "doc_count" : 1
                },
                {
                  "key" : [
                    "rock",
                    "Product B"
                  ],
                  "key_as_string" : "rock|Product B",
                  "doc_count" : 1
                }
              ]
            }
          }
        }
---
"multi-terms-aggregation-runtime-field-example":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: GET
        path: "products/_search"
        filter_path: "aggregations"
        body: |
          {
            "runtime_mappings": {
              "genre.length": {
                "type": "long",
                "script": "emit(doc['genre'].value.length())"
              }
            },
            "aggs": {
              "genres_and_products": {
                "multi_terms": {
                  "terms": [
                    {
                      "field": "genre.length"
                    },
                    {
                      "field": "product"
                    }
                  ]
                }
              }
            }
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          
          "aggregations" : {
            "genres_and_products" : {
              "doc_count_error_upper_bound" : 0,
              "sum_other_doc_count" : 0,
              "buckets" : [
                {
                  "key" : [
                    4,
                    "Product A"
                  ],
                  "key_as_string" : "4|Product A",
                  "doc_count" : 2
                },
                {
                  "key" : [
                    4,
                    "Product B"
                  ],
                  "key_as_string" : "4|Product B",
                  "doc_count" : 2
                },
                {
                  "key" : [
                    10,
                    "Product B"
                  ],
                  "key_as_string" : "10|Product B",
                  "doc_count" : 1
                }
              ]
            }
          }
        }
---
"multi-terms-aggregation-missing-example":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: GET
        path: "products/_search"
        filter_path: "aggregations"
        body: |
          {
            "aggs": {
              "genres_and_products": {
                "multi_terms": {
                  "terms": [
                    {
                      "field": "genre"
                    },
                    {
                      "field": "product",
                      "missing": "Product Z"
                    }
                  ]
                }
              }
            }
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
           
           "aggregations" : {
            "genres_and_products" : {
              "doc_count_error_upper_bound" : 0,
              "sum_other_doc_count" : 0,
              "buckets" : [
                {
                  "key" : [
                    "rock",
                    "Product A"
                  ],
                  "key_as_string" : "rock|Product A",
                  "doc_count" : 2
                },
                {
                  "key" : [
                    "electronic",
                    "Product B"
                  ],
                  "key_as_string" : "electronic|Product B",
                  "doc_count" : 1
                },
                {
                  "key" : [
                    "electronic",
                    "Product Z"
                  ],
                  "key_as_string" : "electronic|Product Z",
                  "doc_count" : 1
                },
                {
                  "key" : [
                    "jazz",
                    "Product B"
                  ],
                  "key_as_string" : "jazz|Product B",
                  "doc_count" : 1
                },
                {
                  "key" : [
                    "rock",
                    "Product B"
                  ],
                  "key_as_string" : "rock|Product B",
                  "doc_count" : 1
                }
              ]
            }
          }
        }
---
"multi-terms-aggregation-subaggregation-example":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: GET
        path: "products/_search"
        filter_path: "aggregations"
        body: |
          {
            "aggs": {
              "genres_and_products": {
                "multi_terms": {
                  "terms": [
                    {
                      "field": "genre"
                    },
                    {
                      "field": "product"
                    }
                  ],
                  "order": {
                    "total_quantity": "desc"
                  }
                },
                "aggs": {
                  "total_quantity": {
                    "sum": {
                      "field": "quantity"
                    }
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          
          "aggregations" : {
            "genres_and_products" : {
              "doc_count_error_upper_bound" : 0,
              "sum_other_doc_count" : 0,
              "buckets" : [
                {
                  "key" : [
                    "jazz",
                    "Product B"
                  ],
                  "key_as_string" : "jazz|Product B",
                  "doc_count" : 1,
                  "total_quantity" : {
                    "value" : 10.0
                  }
                },
                {
                  "key" : [
                    "rock",
                    "Product A"
                  ],
                  "key_as_string" : "rock|Product A",
                  "doc_count" : 2,
                  "total_quantity" : {
                    "value" : 9.0
                  }
                },
                {
                  "key" : [
                    "electronic",
                    "Product B"
                  ],
                  "key_as_string" : "electronic|Product B",
                  "doc_count" : 1,
                  "total_quantity" : {
                    "value" : 3.0
                  }
                },
                {
                  "key" : [
                    "rock",
                    "Product B"
                  ],
                  "key_as_string" : "rock|Product B",
                  "doc_count" : 1,
                  "total_quantity" : {
                    "value" : 1.0
                  }
                }
              ]
            }
          }
        }
