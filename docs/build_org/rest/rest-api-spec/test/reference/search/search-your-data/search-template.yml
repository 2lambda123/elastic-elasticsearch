---
"line_32":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: PUT
        path: "_scripts/my-search-template"
        body: |
          {
            "script": {
              "lang": "mustache",
              "source": {
                "query": {
                  "match": {
                    "message": "{{query_string}}"
                  }
                },
                "from": "{{from}}",
                "size": "{{size}}"
              },
              "params": {
                "query_string": "My query string"
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "_render/template"
        body: |
          {
            "id": "my-search-template",
            "params": {
              "query_string": "hello world",
              "from": 20,
              "size": 10
            }
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "template_output": {
            "query": {
              "match": {
                "message": "hello world"
              }
            },
            "from": "20",
            "size": "10"
          }
        }
  - do:
      raw:
        method: POST
        path: "_render/template"
        body: |
          {
              "source": {
                "query": {
                  "match": {
                    "message": "{{query_string}}"
                  }
                },
                "from": "{{from}}",
                "size": "{{size}}"
              },
            "params": {
              "query_string": "hello world",
              "from": 20,
              "size": 10
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: PUT
        path: "my-index/_doc/1"
        refresh: ""
        body: |
          {
            "message": "hello world"
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "my-index/_search/template"
        body: |
          {
            "id": "my-search-template",
            "params": {
              "query_string": "hello world",
              "from": 0,
              "size": 10
            }
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "took": "$body.took",
          "timed_out": false,
          "_shards": {
            "total": 1,
            "successful": 1,
            "skipped": 0,
            "failed": 0
          },
          "hits": {
            "total": {
              "value": 1,
              "relation": "eq"
            },
            "max_score": 0.5753642,
            "hits": [
              {
                "_index": "my-index",
                "_id": "1",
                "_score": 0.5753642,
                "_source": {
                  "message": "hello world"
                }
              }
            ]
          }
        }
  - do:
      raw:
        method: GET
        path: "my-index/_msearch/template"
        body: |
          { }
          { "id": "my-search-template", "params": { "query_string": "hello world", "from": 0, "size": 10 }}
          { }
          { "id": "my-search-template", "params": { "query_type": "match_all" }}
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "_scripts/my-search-template"
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "_cluster/state/metadata"
        pretty: ""
        filter_path: "metadata.stored_scripts"
  - is_false: _shards.failures
  - do:
      raw:
        method: DELETE
        path: "_scripts/my-search-template"
  - is_false: _shards.failures
---
"line_258":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: POST
        path: "_render/template"
        body: |
          {
            "source": {
              "query": {
                "match": {
                  "message": "{{query_string}}"
                }
              },
              "from": "{{from}}{{^from}}0{{/from}}",
              "size": "{{size}}{{^size}}10{{/size}}"
            },
            "params": {
              "query_string": "hello world"
            }
          }
  - is_false: _shards.failures
---
"line_283":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: POST
        path: "_render/template"
        body: |
          {
            "source": {
              "query": {
                "term": {
                  "url.full": "{{#url}}{{host}}/{{page}}{{/url}}"
                }
              }
            },
            "params": {
              "host": "http://example.com",
              "page": "hello-world"
            }
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "template_output": {
            "query": {
              "term": {
                "url.full": "http%3A%2F%2Fexample.com%2Fhello-world"
              }
            }
          }
        }
---
"line_323":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: POST
        path: "_render/template"
        body: |
          {
            "source": {
              "query": {
                "match": {
                  "user.group.emails": "{{#join}}emails{{/join}}"
                }
              }
            },
            "params": {
              "emails": [ "user1@example.com", "user_one@example.com" ]
            }
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "template_output": {
            "query": {
              "match": {
                "user.group.emails": "user1@example.com,user_one@example.com"
              }
            }
          }
        }
---
"line_357":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: POST
        path: "_render/template"
        body: |
          {
            "source": {
              "query": {
                "range": {
                  "user.effective.date": {
                    "gte": "{{date.min}}",
                    "lte": "{{date.max}}",
                    "format": "{{#join delimiter='||'}}date.formats{{/join delimiter='||'}}"
          	      }
                }
              }
            },
            "params": {
              "date": {
                "min": "2098",
                "max": "06/05/2099",
                "formats": ["dd/MM/yyyy", "yyyy"]
              }
            }
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "template_output": {
            "query": {
              "range": {
                "user.effective.date": {
                  "gte": "2098",
                  "lte": "06/05/2099",
                  "format": "dd/MM/yyyy||yyyy"
                }
              }
            }
          }
        }
---
"line_412":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: POST
        path: "_render/template"
        body: |
          {
            "source": "{ \"query\": { \"terms\": { \"tags\": {{#toJson}}tags{{/toJson}} }}}",
            "params": {
              "tags": [
                "prod",
                "es01"
              ]
            }
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "template_output": {
            "query": {
              "terms": {
                "tags": [
                  "prod",
                  "es01"
                ]
              }
            }
          }
        }
---
"line_446":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: POST
        path: "_render/template"
        body: |
          {
            "source": "{ \"query\": {{#toJson}}my_query{{/toJson}} }",
            "params": {
              "my_query": {
                "match_all": { }
              }
            }
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "template_output" : {
            "query" : {
              "match_all" : { }
            }
          }
        }
        
---
"line_475":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: POST
        path: "_render/template"
        body: |
          {
            "source": "{ \"query\": { \"bool\": { \"must\": {{#toJson}}clauses{{/toJson}} }}}",
            "params": {
              "clauses": [
                {
                  "term": {
                    "user.id": "kimchy"
                  }
                },
                {
                  "term": {
                    "url.domain": "example.com"
                  }
                }
              ]
            }
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "template_output": {
            "query": {
              "bool": {
                "must": [
                  {
                    "term": {
                      "user.id": "kimchy"
                    }
                  },
                  {
                    "term": {
                      "url.domain": "example.com"
                    }
                  }
                ]
              }
            }
          }
        }
---
"line_537":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: POST
        path: "_render/template"
        body: |
          {
            "source": "{ \"query\": { \"bool\": { \"filter\": [ {{#year_scope}} { \"range\": { \"@timestamp\": { \"gte\": \"now-1y/d\", \"lt\": \"now/d\" } } }, {{/year_scope}} { \"term\": { \"user.id\": \"{{user_id}}\" }}]}}}",
            "params": {
              "year_scope": true,
              "user_id": "kimchy"
            }
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "template_output" : {
            "query" : {
              "bool" : {
                "filter" : [
                  {
                    "range" : {
                      "@timestamp" : {
                        "gte" : "now-1y/d",
                        "lt" : "now/d"
                      }
                    }
                  },
                  {
                    "term" : {
                      "user.id" : "kimchy"
                    }
                  }
                ]
              }
            }
          }
        }
---
"line_580":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: POST
        path: "_render/template"
        body: |
          {
            "source": "{ \"query\": { \"bool\": { \"filter\": [ {{#year_scope}} { \"range\": { \"@timestamp\": { \"gte\": \"now-1y/d\", \"lt\": \"now/d\" } } }, {{/year_scope}} { \"term\": { \"user.id\": \"{{user_id}}\" }}]}}}",
            "params": {
              "year_scope": false,
              "user_id": "kimchy"
            }
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "template_output" : {
            "query" : {
              "bool" : {
                "filter" : [
                  {
                    "term" : {
                      "user.id" : "kimchy"
                    }
                  }
                ]
              }
            }
          }
        }
---
"line_623":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: POST
        path: "_render/template"
        body: |
          {
            "source": "{ \"query\": { \"bool\": { \"filter\": [ { \"range\": { \"@timestamp\": { \"gte\": {{#year_scope}} \"now-1y/d\" {{/year_scope}} {{^year_scope}} \"now-1d/d\" {{/year_scope}} , \"lt\": \"now/d\" }}}, { \"term\": { \"user.id\": \"{{user_id}}\" }}]}}}",
            "params": {
              "year_scope": true,
              "user_id": "kimchy"
            }
          }
  - is_false: _shards.failures
---
"line_647":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: PUT
        path: "_scripts/my-search-template"
        body: |
          {
            "script": {
              "lang": "mustache",
              "source": {
                "query": {
                  "match": {
                    "message": "{{query_string}}"
                  }
                },
                "from": "{{from}}",
                "size": "{{size}}"
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "_render/template"
        body: |
          {
            "id": "my-search-template",
            "params": {
              "query_string": "hello world",
              "from": 20,
              "size": 10
            }
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "template_output": {
            "query": {
              "match": {
                "message": "hello world"
              }
            },
            "from": "20",
            "size": "10"
          }
        }
  - do:
      raw:
        method: POST
        path: "_render/template"
        body: |
          {
            "id": "my-search-template",
            "params": {
              "from": 20,
              "size": 10
            }
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "template_output": {
            "query": {
              "match": {
                "message": ""
              }
            },
            "from": "20",
            "size": "10"
          }
        }
---
"line_740":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: POST
        path: "_render/template"
        body: |
          {
            "source":
            "\n  {\n    \"query\": {\n      \"match\": {\n        {{#query_message}}\n          {{#query_string}}\n        \"message\": \"Hello {{#first_name_section}}{{first_name}}{{/first_name_section}} {{#last_name_section}}{{last_name}}{{/last_name_section}}\"\n          {{/query_string}}\n        {{/query_message}}\n      }\n    }\n  }\n  ",
            "params": {
              "query_message": {
                 "query_string": {
                   "first_name_section": {"first_name": "John"},
                   "last_name_section": {"last_name": "kimchy"}
                 }
              }
            }
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "template_output": {
            "query": {
              "match": {
                "message": "Hello John kimchy"
              }
            }
          }
        }
---
"line_791":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: PUT
        path: "_scripts/my-search-template"
        body: |
          {
            "script": {
              "lang": "mustache",
              "source": {
                "query":{
                  "multi_match":{
                    "query": "{{query_string}}",
                    "fields": "[{{#text_fields}}{{user_name}},{{/text_fields}}]"
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "_render/template"
        body: |
          {
            "id": "my-search-template",
            "params": {
              "query_string": "My string",
              "text_fields": [
                {
                  "user_name": "John"
                },
                {
                  "user_name": "kimchy"
                }
              ]
            }
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "template_output": {
            "query": {
              "multi_match": {
                "query": "My string",
                "fields": "[John,kimchy,]"
              }
            }
          }
        }
---
"line_851":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: PUT
        path: "_scripts/my-search-template"
        body: |
          {
            "script": {
              "lang": "mustache",
              "source": {
                "query":{
                  "multi_match":{
                    "query": "{{query_string}}",
                    "fields": "[{{#text_fields}}{{user_name}}{{^last}},{{/last}}{{/text_fields}}]"
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "_render/template"
        body: |
          {
            "id": "my-search-template",
            "params": {
              "query_string": "My string",
              "text_fields": [
                {
                  "user_name": "John",
                  "last": false
                },
                {
                  "user_name": "kimchy",
                  "last": true
                }
              ]
            }
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "template_output": {
            "query": {
              "multi_match": {
                "query": "My string",
                "fields": "[John,kimchy]"
              }
            }
          }
        }
---
"line_929":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: POST
        path: "_render/template"
        body: |
          {
            "source": {
              "query": {
                "match": {
                  "message": "{{^name_exists}}Hello World{{/name_exists}}"
                }
              }
            },
            "params": {
               "name_exists": false
            }
          }
  - is_false: _shards.failures
---
"line_950":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: POST
        path: "_render/template"
        body: |
          {
            "source": {
              "query": {
                "match": {
                  "message": "Hello {{#name_exists}}{{query_string}}{{/name_exists}}{{^name_exists}}World{{/name_exists}}"
                }
              }
            },
            "params": {
              "query_string": "Kimchy",
               "name_exists": true
            }
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "template_output": {
            "query": {
              "match": {
                "message": "Hello Kimchy"
              }
            }
          }
        }
---
"line_990":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: PUT
        path: "_scripts/my-search-template"
        body: |
          {
            "script": {
              "lang": "mustache",
              "source":
              "\n    {\n      \"query\": {\n        \"match\": {\n           {{=( )=}}\n          \"message\": \"(query_string)\"\n          (={{ }}=)\n        }\n      }\n    }\n    "
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "_render/template"
        body: |
          {
            "id": "my-search-template",
            "params": {
              "query_string": "hello world"
            }
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "template_output": {
            "query": {
              "match": {
                "message": "hello world"
              }
            }
          }
        }
