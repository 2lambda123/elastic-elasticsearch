---
"line_52":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: PUT
        path: "my-index-000001/_doc/1"
        body: |
          {
            "my_field": 5
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "my-index-000001/_search"
        body: |
          {
            "script_fields": {
              "my_doubled_field": {
                "script": {
                  "source": "doc['my_field'].value * params['multiplier']",
                  "params": {
                    "multiplier": 2
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
---
"line_143":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: PUT
        path: "my-index-000001"
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "my-index-000001/_search"
        body: |
          {
            "script_fields": {
              "my_doubled_field": {
                "script": {
                  "lang":   "painless",
                  "source": "doc['my_field'].value * params.get('multiplier');",
                  "params": {
                    "multiplier": 2
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
---
"line_165":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: PUT
        path: "my-index-000001"
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "my-index-000001/_search"
        body: |
          {
            "script_fields": {
              "my_doubled_field": {
                "script": {
                  "source": "field('my_field').get(null) * params['multiplier']",
                  "params": {
                    "multiplier": 2
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
---
"line_215":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: POST
        path: "_scripts/calculate-score"
        body: |
          {
            "script": {
              "lang": "painless",
              "source": "Math.log(_score * 2) + params['my_modifier']"
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "_scripts/calculate-score"
  - is_false: _shards.failures
# Named setup my_index

  - do:
        indices.create:
          index: my-index-000001
          body:
            settings:
              number_of_shards: 1
              number_of_replicas: 1
            mappings:
              properties:
                "@timestamp":
                  type: date
                http:
                  properties:
                    request:
                      properties:
                        method:
                          type: keyword
                message:
                  type: text
                  fields:
                    keyword:
                      type: keyword
                user:
                  properties:
                    id:
                      type: keyword
                      doc_values: true
  - do:
        bulk:
          index: my-index-000001
          refresh: true
          body: |
            { "index":{"_id": "0"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "127.0.0.1" }, "user": { "id": "kimchy" } }
            { "index":{"_id": "1"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
            { "index":{"_id": "2"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
            { "index":{"_id": "3"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
            { "index":{"_id": "4"} }
            { "@timestamp": "2099-11-15T14:12:12", "http": { "request": { "method": "get" }, "response": { "bytes": 1070000, "status_code": 200 }, "version": "1.1" }, "message": "GET /search HTTP/1.1 200 1070000", "source": { "ip": "10.42.42.42" }, "user": { "id": "elkbee" } }
  - do:
      raw:
        method: GET
        path: "my-index-000001/_search"
        body: |
          {
            "query": {
              "script_score": {
                "query": {
                  "match": {
                      "message": "some message"
                  }
                },
                "script": {
                  "id": "calculate-score",
                  "params": {
                    "my_modifier": 2
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: DELETE
        path: "_scripts/calculate-score"
  - is_false: _shards.failures
---
"line_282":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: PUT
        path: "my-index-000001/_doc/1"
        body: |
          {
            "counter" : 1,
            "tags" : ["red"]
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "my-index-000001/_update/1"
        body: |
          {
            "script" : {
              "source": "ctx._source.counter += params.count",
              "lang": "painless",
              "params" : {
                "count" : 4
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "my-index-000001/_update/1"
        body: |
          {
            "script": {
              "source": "ctx._source.tags.add(params['tag'])",
              "lang": "painless",
              "params": {
                "tag": "blue"
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "my-index-000001/_update/1"
        body: |
          {
            "script": {
              "source": "if (ctx._source.tags.contains(params['tag'])) { ctx._source.tags.remove(ctx._source.tags.indexOf(params['tag'])) }",
              "lang": "painless",
              "params": {
                "tag": "blue"
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "my-index-000001/_update/1"
        body: |
          {
            "script" : "ctx._source.new_field = 'value_of_new_field'"
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "my-index-000001/_update/1"
        body: |
          {
            "script" : "ctx._source.remove('new_field')"
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "my-index-000001/_update/1"
        body: |
          {
            "script": {
              "source": "if (ctx._source.tags.contains(params['tag'])) { ctx.op = 'delete' } else { ctx.op = 'none' }",
              "lang": "painless",
              "params": {
                "tag": "green"
              }
            }
          }
  - is_false: _shards.failures
---
"line_436":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: PUT
        path: "my_test_scores"
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "my_test_scores/_search"
        body: |
          {
            "query": {
              "term": {
                "grad_year": "2099"
              }
            },
            "sort": [
              {
                "_script": {
                  "type": "number",
                  "script": {
                    "source": "doc['math_score'].value + doc['verbal_score'].value"
                  },
                  "order": "desc"
                }
              }
            ]
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: PUT
        path: "my_test_scores/_mapping"
        body: |
          {
            "properties": {
              "total_score": {
                "type": "long"
              }
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: PUT
        path: "_ingest/pipeline/my_test_scores_pipeline"
        body: |
          {
            "description": "Calculates the total test score",
            "processors": [
              {
                "script": {
                  "source": "ctx.total_score = (ctx.math_score + ctx.verbal_score)"
                }
              }
            ]
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "_reindex"
        body: |
          {
            "source": {
              "index": "my_test_scores"
            },
            "dest": {
              "index": "my_test_scores_2",
              "pipeline": "my_test_scores_pipeline"
            }
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: POST
        path: "my_test_scores_2/_doc/"
        pipeline: "my_test_scores_pipeline"
        body: |
          {
            "student": "kimchy",
            "grad_year": "2099",
            "math_score": 1200,
            "verbal_score": 800
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: GET
        path: "my_test_scores_2/_search"
        body: |
          {
            "query": {
              "term": {
                "grad_year": "2099"
              }
            },
            "sort": [
              {
                "total_score": {
                  "order": "desc"
                }
              }
            ]
          }
  - is_false: _shards.failures
  - do:
      raw:
        method: DELETE
        path: "_ingest/pipeline/my_test_scores_pipeline"
  - is_false: _shards.failures
