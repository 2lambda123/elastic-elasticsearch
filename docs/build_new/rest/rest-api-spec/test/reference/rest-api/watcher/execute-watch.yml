---
"line_147":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
# Named setup my_active_watch

  - do:
      watcher.put_watch:
        id: "my_watch"
        active: true
        body:  >
          {
            "trigger": {
              "schedule": {
                "hourly": {
                  "minute": [ 0, 5 ]
                }
              }
            },
            "input": {
              "simple": {
                "payload": {
                  "send": "yes"
                }
              }
            },
            "condition": {
              "always": {}
            },
            "actions": {
              "test_index": {
                "index": {
                  "index": "test"
                }
              }
            }
          }
  - match: { _id: "my_watch" }

  - do:
      raw:
        method: POST
        path: "_watcher/watch/my_watch/_execute"
  - is_false: _shards.failures
---
"line_155":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
# Named setup my_active_watch

  - do:
      watcher.put_watch:
        id: "my_watch"
        active: true
        body:  >
          {
            "trigger": {
              "schedule": {
                "hourly": {
                  "minute": [ 0, 5 ]
                }
              }
            },
            "input": {
              "simple": {
                "payload": {
                  "send": "yes"
                }
              }
            },
            "condition": {
              "always": {}
            },
            "actions": {
              "test_index": {
                "index": {
                  "index": "test"
                }
              }
            }
          }
  - match: { _id: "my_watch" }

  - do:
      raw:
        method: POST
        path: "_watcher/watch/my_watch/_execute"
        body: |
          {
            "trigger_data" : {
               "triggered_time" : "now",
               "scheduled_time" : "now"
            },
            "alternative_input" : {
              "foo" : "bar"
            },
            "ignore_condition" : true,
            "action_modes" : {
              "my-action" : "force_simulate"
            },
            "record_execution" : true
          }
  - is_false: _shards.failures
  - match:
      $body:
        {
          "_id": "$body._id",
          "watch_record": {
            "@timestamp": "$body.watch_record.trigger_event.triggered_time",
            "watch_id": "my_watch",
            "node": "$body.watch_record.node",
            "messages": [],
            "trigger_event": {
              "type": "manual",
              "triggered_time": "$body.watch_record.trigger_event.triggered_time",
              "manual": {
                "schedule": {
                  "scheduled_time": "$body.watch_record.trigger_event.manual.schedule.scheduled_time"
                }
              }
            },
            "state": "executed",
            "status": {
              "version": 1,
              "execution_state": "executed",
              "state": {
                "active": true,
                "timestamp": "$body.watch_record.status.state.timestamp"
              },
              "last_checked": "$body.watch_record.status.last_checked",
              "last_met_condition": "$body.watch_record.status.last_met_condition",
              "actions": {
                "test_index": {
                  "ack": {
                    "timestamp": "$body.watch_record.status.actions.test_index.ack.timestamp",
                    "state": "ackable"
                  },
                  "last_execution": {
                    "timestamp": "$body.watch_record.status.actions.test_index.ack.timestamp",
                    "successful": true
                  },
                  "last_successful_execution": {
                    "timestamp": "$body.watch_record.status.actions.test_index.ack.timestamp",
                    "successful": true
                  }
                }
              }
            },
            "input": {
              "simple": {
                "payload": {
                  "send": "yes"
                }
              }
            },
            "condition": {
              "always": {}
            },
            "result": {
              "execution_time": "$body.watch_record.result.execution_time",
              "execution_duration": "$body.watch_record.result.execution_duration",
              "input": {
                "type": "simple",
                "payload": {
                  "foo": "bar"
                },
                "status": "success"
              },
              "condition": {
                "type": "always",
                "met": true,
                "status": "success"
              },
              "actions": [
                {
                  "id": "test_index",
                  "index": {
                    "response": {
                      "index": "test",
                      "version": 1,
                      "created": true,
                      "result": "created",
                      "id": "$body.watch_record.result.actions.0.index.response.id"
                    }
                  },
                  "status": "success",
                  "type": "index"
                }
              ]
            },
            "user": "test_admin"
          }
        }
---
"line_299":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
# Named setup my_active_watch

  - do:
      watcher.put_watch:
        id: "my_watch"
        active: true
        body:  >
          {
            "trigger": {
              "schedule": {
                "hourly": {
                  "minute": [ 0, 5 ]
                }
              }
            },
            "input": {
              "simple": {
                "payload": {
                  "send": "yes"
                }
              }
            },
            "condition": {
              "always": {}
            },
            "actions": {
              "test_index": {
                "index": {
                  "index": "test"
                }
              }
            }
          }
  - match: { _id: "my_watch" }

  - do:
      raw:
        method: POST
        path: "_watcher/watch/my_watch/_execute"
        body: |
          {
            "action_modes" : {
              "action1" : "force_simulate",
              "action2" : "skip"
            }
          }
  - is_false: _shards.failures
---
"line_314":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
# Named setup my_active_watch

  - do:
      watcher.put_watch:
        id: "my_watch"
        active: true
        body:  >
          {
            "trigger": {
              "schedule": {
                "hourly": {
                  "minute": [ 0, 5 ]
                }
              }
            },
            "input": {
              "simple": {
                "payload": {
                  "send": "yes"
                }
              }
            },
            "condition": {
              "always": {}
            },
            "actions": {
              "test_index": {
                "index": {
                  "index": "test"
                }
              }
            }
          }
  - match: { _id: "my_watch" }

  - do:
      raw:
        method: POST
        path: "_watcher/watch/my_watch/_execute"
        body: |
          {
            "action_modes" : {
              "_all" : "force_execute"
            }
          }
  - is_false: _shards.failures
---
"line_327":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: POST
        path: "_watcher/watch/_execute"
        body: |
          {
            "watch" : {
              "trigger" : { "schedule" : { "interval" : "10s" } },
              "input" : {
                "search" : {
                  "request" : {
                    "indices" : [ "logs" ],
                    "body" : {
                      "query" : {
                        "match" : { "message": "error" }
                      }
                    }
                  }
                }
              },
              "condition" : {
                "compare" : { "ctx.payload.hits.total" : { "gt" : 0 }}
              },
              "actions" : {
                "log_error" : {
                  "logging" : {
                    "text" : "Found {{ctx.payload.hits.total}} errors in the logs"
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
---
"line_363":
  - skip:
      features:
        - default_shards
        - stash_in_key
        - stash_in_path
        - stash_path_replace
        - warnings
  - do:
      raw:
        method: POST
        path: "_watcher/watch/_execute"
        body: |
          {
            "ignore_condition" : true,
            "watch" : {
              "trigger" : { "schedule" : { "interval" : "10s" } },
              "input" : {
                "search" : {
                  "request" : {
                    "indices" : [ "logs" ],
                    "body" : {
                      "query" : {
                        "match" : { "message": "error" }
                      }
                    }
                  }
                }
              },
              "condition" : {
                "compare" : { "ctx.payload.hits.total" : { "gt" : 0 }}
              },
              "actions" : {
                "log_error" : {
                  "logging" : {
                    "text" : "Found {{ctx.payload.hits.total}} errors in the logs"
                  }
                }
              }
            }
          }
  - is_false: _shards.failures
