[[security-api-node-enrollment]]
=== Enroll Node API
++++
<titleabbrev>Enroll Node</titleabbrev>
++++

Allows a new node to join an existing cluster with security enabled.

[[security-api-node-enrollment-api-request]]
==== {api-request-title}

`GET /_security/enroll_node`

[[security-api-node-enrollment-api-prereqs]]
==== {api-prereq-title}

* You must have the `enroll` <<privileges-list-cluster,cluster privilege>> to use this API.

[[security-api-node-enrollment-api-desc]]
==== {api-description-title}

The purpose of the enroll node API is to allow a new node to join an existing cluster
where security is enabled. The enroll node API response contains all the necessary information
for the joining node to bootstrap discovery and security related settings so that it
can successfully join the cluster.

[[security-api-node-enrollment-api-examples]]
==== {api-examples-title}

[source,console]
--------------------------------------------------
GET /security/enroll_node
--------------------------------------------------
// TEST[skip:Determine behavior for keystore with multiple keys]
The API returns a response such as

[source,console-result]
--------------------------------------------------
{
  "http_ca_keystore" : "MIIJlAIBAzCCCVoGCSqGSIb3DQEHAaCCCUsEgglHMIIJQzCCA98GCSqGSIb3DQ....vsDfsA3UZBAjEPfhubpQysAICCAA=", <1>
  "transport_keystore" : "MIIEJgIBAzCCA98GCSqGSIb3DQEHAaCCA9AEggPMMIIDyDCCA8QGCSqGSIb3....YuEiOXvqZ6jxuVSQ0CAwGGoA==", <2>
  "cluster_name" : "cluster-name",               <3>
  "nodes_addresses" : [                          <4>
    "192.168.1.2:9300"
  ]
}
--------------------------------------------------
<1> The keystore containing the CA private key and X509 certificate that can be used by the
    new node in order to sign its certificate for the HTTP layer, as a Base64 encoded string.
<2> The keystore containing the private key and X509 certificate that the node can use for
    TLS for its transport layer, as a Base64 encoded string.
<3> The name of the cluster the new node is joining
<4> A list of transport addresses in the form of `host:port` for the nodes that are already
    members of the cluster.
