[role="xpack"]
[[security-api-update-user-profile-data]]
=== Update user profile data API

beta::[]

++++
<titleabbrev>Update user profile data</titleabbrev>
++++

Update application specific data for the user profile of the given unique ID.

[[security-api-update-user-profile-data-request]]
==== {api-request-title}

`POST /_security/profile/_data/<uid>`

[[security-api-update-user-profile-data-prereqs]]
==== {api-prereq-title}

To use this API, you must have either:

- the `manage_user_profile` cluster privilege; _or_
- the _"update profile data"_ global privilege for the namespaces
being referenced in the request

[[security-api-update-user-profile-data-desc]]
==== {api-description-title}

This API allows update to both the `access` and `data` fields of an existing
user profile document with JSON objects.
Data provided in the request are merged into existing data:

* New keys and their values are added to document.
* Conflicting keys will be replaced by the data provided in the request.

For both `access` and `data`, the data are namespaced by the top level fields.
The _"update profile data"_ global privilege allows granting privilege for
updating only the allowed namespaces.

[[security-api-update-user-profile-data-path-params]]
==== {api-path-parms-title}

`uid`::
(Required, string) An unique identifier for the user profile.

[[security-api-update-user-profile-data-query-params]]
==== {api-query-parms-title}

include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=if_seq_no]

include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=if_primary_term]

include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=refresh]

`uid`::
(Required, string) An unique identifier for the user profile.

[[security-api-update-user-profile-data-request-body]]
==== {api-request-body-title}

The following parameters can be specified in the body of a POST request:

`access`::
(Required*, object)
Arbitrary searchable data that you want to associate with the user profile.
It supports nested data structure. Within the `access` object, top level
keys cannot begin with `_` or contain `.`.

`data`::
(Required*, object)
Arbitrary non-searchable data that you want to associate with the user profile.
It supports nested data structure. Within the `data` object, top level
keys cannot begin with `_` or contain `.`.
The `data` object is not searchable, but can be retrieved with <<security-api-get-user-profile>>.

--
*Indicates that the setting is required in some, but not all situations.
--

[[security-api-update-user-profile-data-example]]
==== {api-examples-title}

To update the profile data, submit a POST request to the `/_security/profile/_data/<uid>`
endpoint. Assuming a profile document exist with uid `u_kd2JMqwUQwSCCOxMv7M1vw`,
its data can be updated with the following:

[source,console]
------------------------------------------------------------
POST /_security/profile/_data/u_kd2JMqwUQwSCCOxMv7M1vw
{
  "access": {
    "app1": {
      "tag": "prod"
    }
  },
  "data": {
    "app1": {
      "theme": "default"
    }
  }
}
------------------------------------------------------------
// TEST[skip:uid is random and no way to ensure this uid exists]

A successful update profile data API call returns a JSON structure that shows
the request is acknowledged.

[source,js]
--------------------------------------------------
{
  "acknowledged": true
}
--------------------------------------------------
// NOTCONSOLE

We can update the profile data again to replace some keys and adding new keys:

[source,console]
------------------------------------------------------------
POST /_security/profile/_data/u_kd2JMqwUQwSCCOxMv7M1vw
{
  "access": {
    "app1": {
      "tag": "dev"
    }
  },
  "data": {
    "app1": {
      "font": "large"
    }
  }
}
------------------------------------------------------------
// TEST[skip:uid is random and no way to ensure this uid exists]

The consolidated profile data is as the follows:
[source,js]
--------------------------------------------------
{
  "u_kd2JMqwUQwSCCOxMv7M1vw": {
    "uid": "u_kd2JMqwUQwSCCOxMv7M1vw",
    "enabled": true,
    "last_synchronized": 1642650651037,
    "user": {
      "username": "jacknich",
      "roles": [
        "admin", "other_role1"
      ],
      "realm_name": "native1",
      "full_name": "Jack Nicholson",
      "email": "jacknich@example.com",
      "active": true
    },
    "access": {
      "app1": {
        "tag": "dev"
      }
    },
    "data": {
      "app1": {
        "theme": "default",
        "font": "large"
      }
    },
    "_doc": {
      "_primary_term": 1,
      "_seq_no": 0
    }
  }
}
--------------------------------------------------
// NOTCONSOLE
