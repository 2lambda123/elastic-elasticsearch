[role="xpack"]
[[security-api-get-my-api-key]]
=== Get information for API key(s) owned by the authenticated user API
++++
<titleabbrev>Get information for API key(s) owned by the authenticated user API</titleabbrev>
++++

Retrieves information for one or more API keys owned by the authenticated user

==== Request

`GET /_security/api_key/my`

==== Description

The information for the API keys created by <<security-api-create-api-key,create API Key>> can be retrieved
using this API. This API can only retrieve API key information for the API keys owned by the current authenticated user.

==== Request Body

The following parameters can be specified in the query parameters of a GET request and
pertain to retrieving api keys:

`id` (optional)::
(string) An API key id.

`name` (optional)::
(string) An API key name.

NOTE: If none of the parameters are set, it will get information for all API keys owned by the current authenticated user.

==== Examples

If you create an API key as follows:

[source, js]
------------------------------------------------------------
POST /_security/api_key
{
  "name": "my-api-key",
  "role_descriptors": {}
}
------------------------------------------------------------
// CONSOLE
// TEST

A successful call returns a JSON structure that provides
API key information. For example:

[source,js]
--------------------------------------------------
{
  "id":"VuaCfGcBCdbkQm-e5aOx",
  "name":"my-api-key",
  "api_key":"ui2lp2axTNmsyakw9tvNnw"
}
--------------------------------------------------
// TESTRESPONSE[s/VuaCfGcBCdbkQm-e5aOx/$body.id/]
// TESTRESPONSE[s/ui2lp2axTNmsyakw9tvNnw/$body.api_key/]

You can use the following example to retrieve the API key by ID:

[source,js]
--------------------------------------------------
GET /_security/api_key/my?id=VuaCfGcBCdbkQm-e5aOx
--------------------------------------------------
// CONSOLE
// TEST[s/VuaCfGcBCdbkQm-e5aOx/$body.id/]
// TEST[continued]

You can use the following example to retrieve the API key by name:

[source,js]
--------------------------------------------------
GET /_security/api_key/my?name=my-api-key
--------------------------------------------------
// CONSOLE
// TEST[continued]

The following example retrieves all API keys owned by the current authenticated user:

[source,js]
--------------------------------------------------
GET /_security/api_key/my
--------------------------------------------------
// CONSOLE
// TEST[continued]

A successful call returns a JSON structure that contains the information of one or more API keys that were retrieved.

[source,js]
--------------------------------------------------
{
  "api_keys": [ <1>
    {
      "id": "dGhpcyBpcyBub3QgYSByZWFsIHRva2VuIGJ1dCBpdCBpcyBvbmx5IHRlc3QgZGF0YS4gZG8gbm90IHRyeSB0byByZWFkIHRva2VuIQ==", <2>
      "name": "hadoop_myuser_key", <3>
      "creation": 1548550550158, <4>
      "expiration": 1548551550158, <5>
      "invalidated": false, <6>
      "username": "myuser", <7>
      "realm": "native1" <8>
    },
    {
      "id": "api-key-id-2",
      "name": "api-key-name-2",
      "creation": 1548550550158,
      "invalidated": false,
      "username": "user-y",
      "realm": "realm-2"
    }
  ]
}
--------------------------------------------------
// NOTCONSOLE

<1> The list of API keys that were retrieved for this request.
<2> Id for the API key
<3> Name of the API key
<4> Creation time for the API key in milliseconds
<5> Optional expiration time for the API key in milliseconds
<6> Invalidation status for the API key. If the key has been invalidated, it has
a value of `true`. Otherwise, it is `false`.
<7> Principal for which this API key was created
<8> Realm name of the principal for which this API key was created
