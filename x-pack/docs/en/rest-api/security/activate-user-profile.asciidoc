[role="xpack"]
[[security-api-activiate-user-profile]]
=== Activate user profile API

beta::[]

++++
<titleabbrev>Activate user profile</titleabbrev>
++++

Creates or updates the user profile on behalf of another user


[[security-api-activate-user-profile-request]]
==== {api-request-title}

`POST /_security/profile/_activate`

[[security-api-activate-user-profile-prereqs]]
==== {api-prereq-title}

* To use this API, you must have the `manage_user_profile` cluster privilege.

[[security-api-activate-user-profile-desc]]
==== {api-description-title}

The caller must have authentication credentials (either an access token,
or a username and password) for the user on whose behalf the profile document
will be created. It is not possible to use this API to create a profile document
without that user's credentials.

This API creates a profile document if one does not exist yet. If a profile
document already exists, it updates the document and also enable it (if it
was disabled). The API creates or updates the document with information
extracted from the user's authentication object, including `username`, `full_name`,
`roles` and authentication realm. Note that the update does not change any
existing content under either the `access` or `data` field.

This API is intended be used by applications that need to create or update
profiles for end users.


[[security-api-activate-user-profile-request-body]]
==== {api-request-body-title}

The following parameters can be specified in the body of a POST request:

`access_token`::
(Required*, string)
The user's access token. If you specify the `access_token` grant type, this
parameter is required. It is not valid with other grant types.

`grant_type`::
(Required, string)
The type of grant. Supported grant types are: `access_token`,`password`.

`access_token`:::
(Required*, string)
In this type of grant, you must supply an access token that was created by the
{es} token service. For more information, see
<<security-api-get-token>> and <<encrypt-http-communication>>.

`password`:::
In this type of grant, you must supply the user ID and password for which you
want to create the API key.

`password`::
(Optional*, string)
The user's password. If you specify the `password` grant type, this parameter is
required. It is not valid with other grant types.

`username`::
(Optional*, string)
The user name that identifies the user. If you specify the `password` grant type,
this parameter is required. It is not valid with other grant types.

[[security-api-activate-user-profile-example]]
==== {api-examples-title}

[source,console]
------------------------------------------------------------
POST /_security/profile/_activate
{
  "grant_type": "password",
  "username" : "jacknich",
  "password" : "l0ng-r4nd0m-p@ssw0rd"
}
------------------------------------------------------------
// TEST[setup:jacknich_user]

A successful activate user profile API call returns a JSON structure that contains
the profile unique ID, user information, timestamp for the operation and version
control numbers.

[source,console-result]
----
{
  "uid": "u_kd2JMqwUQwSCCOxMv7M1vw",
  "enabled": true,
  "last_synchronized": 1642650651037,
  "user": {
    "username": "jacknich",
    "roles": [
      "admin", "other_role1"
    ],
    "realm_name": "native",
    "full_name": "Jack Nicholson",
    "email": "jacknich@example.com",
    "active": true
  },
  "access": {},
  "data": {},
  "_doc": {
    "_primary_term": 88,
    "_seq_no": 66
  }
}
----
// TESTRESPONSE[s/u_kd2JMqwUQwSCCOxMv7M1vw/$body.uid/]
// TESTRESPONSE[s/1642650651037/$body.last_synchronized/]
// TESTRESPONSE[s/88/$body._doc._primary_term/]
// TESTRESPONSE[s/66/$body._doc._seq_no/]

