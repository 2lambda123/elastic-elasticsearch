`applications`::: (list) A list of application privilege entries.
`application` (required):::: (string) The name of the application to which this entry applies
`privileges`:::: (list) A list of strings, where each element is the name of an application
privilege or action.
`resources`:::: (list) A list resources to which the privileges are applied.

`cluster`::: (list) A list of cluster privileges. These privileges define the
cluster level actions that {role-owners} are able to execute.

`global`::: (object) An object defining global privileges. A global privilege is
a form of cluster privilege that is request-aware. Support for global privileges
is currently limited to the management of application privileges.
This field is optional.

`indices`::: (list) A list of indices permissions entries.
`field_security`:::: (object) The document fields that the {role-owners} have
read access to. For more information, see
<<field-and-document-access-control>>.
`names` (required):::: (list) A list of indices (or index name patterns) to which the
permissions in this entry apply.
`privileges`(required):::: (list) The index level privileges that the {role-owners}
have on the specified indices.
`query`:::: A search query that defines the documents the {role-owners} have
read access to. A document within the specified indices must match this query in
order for it to be accessible by the {role-owners}.

`metadata`::: (object) Optional meta-data. Within the `metadata` object, keys
that begin with `_` are reserved for system usage.

ifdef::role-restriction[]
`restriction`::: (object) Optional restriction. For more information, see
<<role-restriction>>.
`workflows` (required):::: (list) A list of workflows to which the API key is restricted.
For a full list see <<workflows-restriction>>.
+
--
NOTE: Only a single role descriptor with a restriction is supported.
Also, creating the API key with combination of role descriptors with
and without restriction is not supported.
--
+
endif::role-restriction[]

`run_as`::: (list) A list of users that the {role-owners} can impersonate.
For more information, see
<<run-as-privilege>>.
