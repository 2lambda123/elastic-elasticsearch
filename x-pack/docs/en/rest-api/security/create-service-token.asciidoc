[role="xpack"]
[[security-api-create-service-token]]
=== Create service account token API

beta::[]

++++
<titleabbrev>Create service account tokens</titleabbrev>
++++

Creates a service account token for access without requiring basic authentication.

[[security-api-create-service-token-request]]
==== {api-request-title}

`POST /_security/service/<namespace>/<service>/credential/token/<name>`

`PUT /_security/service/<namespace>/<service>/credential/token/<name>`

`POST /_security/service/<namespace>/<service>/credential/token`

[[security-api-create-service-token-prereqs]]
==== {api-prereq-title}

* To use this API, you must have at least the `manage_service_account` cluster privilege.

[[security-api-create-service-token-desc]]
==== {api-description-title}
A successful create service account token API call returns a JSON structure
that contains the service account token, its name, and its secret value.

NOTE: Service account tokens never expire. You must actively <<security-api-delete-service-token,delete>> them if they are no longer needed.

[[security-api-create-service-token-path-params]]
==== {api-path-parms-title}

`namespace`::
  (Required, string) An identifier for the namespace.

`service`::
  (Required, string) An identifier for the service name.

`name`::
  (Optional, string) An identifier for the token name. If omitted, a random name will be generated.
+
--
Token names must be at least 1 and no more than 256 characters. They can contain
alphanumeric characters (`a-z`, `A-Z`, `0-9`), dashes (`-`), and underscores
(`_`), but cannot begin with an underscore.

NOTE: Token names must be unique in the context of the associated service
account. They must also use a globally unique fully qualified token, which is
comprised of the service account principal and token name, such as
`<namespace>/<service>/<token-name>`.
--

[[security-api-create-service-token-example]]
==== {api-examples-title}

The following example creates a service account token:

[source,console]
----
POST /_security/service/elastic/fleet-server/credential/token/token1
----

A successful call returns a JSON structure that provides service account token information.

[source,console-result]
----
{
  "created": true,
  "token": {
    "name": "token1",
    "value": "AAEAAWVsYXN0aWMvZmxlZXQtc2VydmVyL3Rva2VuMTo3TFdaSDZWbVMxT0pOeXJXd3N3ZzBR" <1>
  }
}
----
// TESTRESPONSE[s/AAEAAWVsYXN0aWMvZmxlZXQtc2VydmVyL3Rva2VuMTo3TFdaSDZWbVMxT0pOeXJXd3N3ZzBR/$body.token.value/]
<1> the secret value to be used as a bearer token

The service account token returned by this API can then be used by sending a request with an
`Authorization` header with a value having the prefix `Bearer` followed the secret token value.

[source,shell]
----
curl -H "Authorization: Bearer AAEAAWVsYXN0aWMvZmxlZXQtc2VydmVyL3Rva2VuMTo3TFdaSDZWbVMxT0pOeXJXd3N3ZzBR" http://localhost:9200/_cluster/health
----
// NOTCONSOLE

NOTE: If your node has `xpack.security.http.ssl.enabled` set to `true`, then you must specify `https` in the request URL.

The following example creates a service token with an auto-generated token name:

[source,console]
----
POST /_security/service/elastic/fleet-server/credential/token
----

A successful call returns a JSON structure that provides service account token information.

[source,console-result]
----
{
  "created": true,
  "token": {
    "name": "Jk5J1HgBuyBK5TpDrdo4",
    "value": "AAEAAWVsYXN0aWMvZmxlZXQtc2VydmVyL0prNUoxSGdCdXlCSzVUcERyZG80OjdpcHBmWHY1UmsycDczbWl6UUhucnc"
  }
}
----
// TESTRESPONSE[s/Jk5J1HgBuyBK5TpDrdo4/$body.token.name/]
// TESTRESPONSE[s/AAEAAWVsYXN0aWMvZmxlZXQtc2VydmVyL0prNUoxSGdCdXlCSzVUcERyZG80OjdpcHBmWHY1UmsycDczbWl6UUhucnc/$body.token.value/]
