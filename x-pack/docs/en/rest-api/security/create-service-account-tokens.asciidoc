[role="xpack"]
[[security-api-create-service-account-token]]
=== Create service account token API

beta::[]

++++
<titleabbrev>Create service account tokens</titleabbrev>
++++

Creates a service account token for access without requiring basic authentication.

[[security-api-create-service-account-token-request]]
==== {api-request-title}

`POST /_security/service/<namespace>/<service>/credential/token/<name>`

`PUT /_security/service/<namespace>/<service>/credential/token/<name>`

`POST /_security/service/<namespace>/<service>/credential/token`

[[security-api-create-service-account-token-prereqs]]
==== {api-prereq-title}

* To use this API, you must have at least the `manage_service_account` cluster privilege.

[[security-api-create-service-account-token-desc]]
==== {api-description-title}

When you are running in production mode, the service account feature requires TLS on the HTTP interface.
See <<encrypt-http-communication>>. A runtime check prevents you from invoking any service account
related APIs or authenticating with a service account token unless TLS is enabled on the HTTP interface.

A successful create service account token API call returns a JSON structure that contains the
service account token, its name, and its secret value.

NOTE: Service account tokens never expire. You must actively delete them for invalidation.


[[security-api-create-service-account-token-path-params]]
==== {api-path-parms-title}

`namespace`::
  (Required, string)

`service`::
  (Required, string)

`name`::
  (Optional, string)

[[security-api-create-service-account-token-example]]
==== {api-examples-title}

The following example creates a service account token:

[source,console]
------------------------------------------------------------
POST /_security/service/elastic/fleet-server/credential/token/token1
------------------------------------------------------------

A successful call returns a JSON structure that provides service account token information.

[source,console-result]
--------------------------------------------------
{
  "created": true,
  "token": {
    "name": "token1",
    "value": "AAEAAWVsYXN0aWMvZmxlZXQtc2VydmVyL3Rva2VuMTo3TFdaSDZWbVMxT0pOeXJXd3N3ZzBR" <1>
  }
}
--------------------------------------------------
// TESTRESPONSE[s/AAEAAWVsYXN0aWMvZmxlZXQtc2VydmVyL3Rva2VuMTo3TFdaSDZWbVMxT0pOeXJXd3N3ZzBR/$body.token.value/]
<1> the secret value to be used as a bearer token

The service account token returned by this API can then be used by sending a request with an
`Authorization` header with a value having the prefix `Bearer` followed the secret token value.

[source,shell]
--------------------------------------------------
curl -H "Authorization: Bearer AAEAAWVsYXN0aWMvZmxlZXQtc2VydmVyL3Rva2VuMTo3TFdaSDZWbVMxT0pOeXJXd3N3ZzBR" http://localhost:9200/_cluster/health
--------------------------------------------------
// NOTCONSOLE

NOTE: If your node has `xpack.security.http.ssl.enabled` set to `true`, then you must specify `https` in the above URL.
