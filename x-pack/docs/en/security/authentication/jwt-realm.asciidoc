[role="xpack"]
[[jwt-realm]]
=== JWT Authentication

JWT realms allow reuse of certain JWT identification tokens for {es} authentication and authorization.
JWT realms are only intended for use with existing, external workflows that issue JWT identification tokens.
See <<jwt-realm,external-workflow-requirements>>.

WARNING: If the external workflow does not exist, use `api` tokens instead.

WARNING: If the workflow is Open ID Connect, and {es} is the OIDC RP, use `oidc` realm instead.

[[external-workflow-requirements]]
==== External Workflow Requirements

Consider a completely external workflow separate from {es}. End-users authenticate to a third-party application
via a third-party authentication service.

The end-user authenticates to the authentication service, and an `identification token` is issued to the
third-party application or the end-user. The third-party application receives the `identification token`,
and perform actions on behalf of the end-user.

If the identification token is a supported JWT format, it can be reused for {es} authentication and authorization.

[[jwt-authentication-requirements]]
==== JWT Authentication Requirements

JWT realms allow repurposing an identification token for {es} authentication and authorization.
The external workflow can be Open ID Connect or bespoke.
The JWT claims set must be the same as an Open ID Connect ID Token.

IMPORTANT: `nonce` claim is ignored; it is only applicable to OIDC workflow, not JWT realm.

The third-party application presents a client credential to authenticate itself, and the JWT to identify the end-user.
See <<jwt-realm,client-authentication>>  and <<jwt-realm,jwt-validation>>.

[[client-authentication]]
=== Client authentication

Client authentication is one of two request header credentials for JWT realm authentication and authorization.
See <<jwt-realm,jwt-validation>> for the other request header credential.

JWT realms support two client authentication settings: `shared_secret` and `none`.

IMPORTANT: Client authentication is enabled by default in JWT realms.

WARNING: Client authentication can be disabled, but it is not recommended.

If client authentication type is `shared_secret`, JWT realm looks for request header `X-Client-Authentication`.
The value must be an exact match (case-sensitive) to the realm's secure setting. See <<jwt-realm,jwt-realm-settings>>.

If client authentication type is `none`, the request header `X-Client-Authentication` is not required.

[[jwt-validation]]
=== JWT validation

JWT is one of two request header credentials for JWT realm authentication and authorization.
See <<jwt-realm,client-authentication>> for the other request header credential.

Supported JWT encoding is JSON Web Signature (JWS).

[[jws-header-validation]]
==== JWS header validation

Values `alg` and `typ` are validated using OIDC ID Token validation rules.

[[jwt-claims-set-validation]]
==== JWT claims set validation

Claims `iss`, `aud`, `sub`, `iat`, `exp`, `nbf`, and `auth_time` are validated using OIDC ID Token validation rules.
Configurable claims `principal`, `groups`, `name`, `mail`, and `dn` are validated using {es} validation rules.

[[jws-signature-validation]]
==== JWS signature validation

Signature is validated using OIDC ID Token validation rules.

[[jwt-realm-settings]]
=== JWT realm settings

TBD

include::jwt-realm-example.asciidoc[]
