[role="xpack"]
[testenv="enterprise"]
[[operator-only-snapshot-and-restore]]
=== Operator Privileges and Snapshot/Restore

include::operator-privileges-designed-for-note.asciidoc[]

The invocation of <<operator-only-apis>> and update of <<operator-only-dynamic-cluster-settings>>
typically result in changes in the cluster state.
The cluster state can be included in a cluster <<snapshot-restore,snapshot>>.
Snapshot is a great way to preserve data of a cluster, which can be later restored to
bootstrap a new cluster, perform migration or disaster recovery, etc.
In a traditional self-managed environment, it is intended for the restore process to copy the
entirely cluster state over when requested. However, in a more managed environment, such as
{ess-trial}[{ess}], data associated to <<operator-only-functionality,operator-only functionality>>
are explicitly managed by the infrastructure code and restoring snapshot data associated to
<<operator-only-functionality,operator-only functionality>> could be problematic because:

1. A snapshot could contain wrong values for operator-only functionalities, e.g. the snapshot
   could have been taken in a different cluster where requirements are different or the operator
   privileges feature is not enabled. Restoring data associated to operator-only functionality
   breaks the guarantee of operator privileges.
2. Even when the infrastructure code can correct the values immediately after restore, there will
   always be a short period of time when cluster could be in an inconsistent state.
3. The infrastructure code prefers configure operator-only functionality from a single place, i.e.
   through API calls.

Therefore, <<configure-operator-privileges,*when the operator privileges feature is enabled*>>,
snapshot data associated to any operator-only functionality are *not* restored.

NOTE: They are still included when taking a snapshot so that all data are always preserved.
