[role="xpack"]
[[auditing-search-queries]]
=== Auditing search queries

There is no <<audit-event-types, audit event type>> which is specifically
dedicated for search queries. Search queries are analyzed and then processed
and it is this processing that triggers authorization actions which are audited.
However, the original raw query, as submitted by the client, is not accesible
downstream when authorization auditing is handled.

However, search queries are contained inside HTTP request bodies, and some
audit events, which are generated by the REST layer, can be toggled to output
the request body to the audit log.

Edit the following settings in `elasticsearch.yml` to make certain audit events
to include the request body

[source,yaml]
----------------------------
xpack.security.audit.logfile.events.emit_request_body: true
----------------------------

for the `logfile` audit output, and

[source,yaml]
----------------------------
xpack.security.audit.index.events.emit_request_body: true
----------------------------

for the `index` output.

IMPORTANT: No filtering is performed when auditing, so sensitive data may be
audited in plain text when including the request body in audit events. Also, the
request body can contain malicious content that can break a parser consuming
the audit logs.

There are only a handful of <<audit-event-types, audit event types>> generated
in the REST layer, which can access the request body, and most of them are not
included by default.

A good practical advice is to add `authentication_success` to the event
types to be audited, i.e. add it to the `xpack.security.audit.logfile.events.include`
list (or `xpack.security.audit.index.events.include`). This type is not audited
by default.

NOTE: Typically, the include list contains other event types as well, such as
`access_granted` or `access_denied`.
