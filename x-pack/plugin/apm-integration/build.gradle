/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */
apply plugin: 'elasticsearch.internal-cluster-test'
apply plugin: 'elasticsearch.internal-es-plugin'
apply plugin: 'elasticsearch.internal-test-artifact'

esplugin {
  name 'apm-integration'
  description 'Provides APM integration for Elasticsearch'
  classname 'org.elasticsearch.xpack.apm.APM'
  extendedPlugins = ['x-pack-core']
}

dependencies {
  implementation "io.opentelemetry:opentelemetry-api:${versions.opentelemetry}"
  implementation "io.opentelemetry:opentelemetry-context:${versions.opentelemetry}"
  implementation "io.opentelemetry:opentelemetry-semconv:${versions.opentelemetry}-alpha"
  runtimeOnly 'co.elastic.apm:elastic-apm-agent:1.30.0'

  compileOnly project(path: xpackModule('core'))
  internalClusterTestImplementation(testArtifact(project(xpackModule('core'))))
  internalClusterTestImplementation(testArtifact(project(xpackModule('security')))) {
    exclude group: 'com.google.guava', module: 'guava'
  }
}

// no unit-test for now
tasks.named("test").configure { enabled = false }

tasks.named("dependencyLicenses").configure {
  mapping from: /opentelemetry-.*/, to: 'opentelemetry'
}

// tasks.named("thirdPartyAudit").configure {
//   ignoreViolations(
//     // 'com.google.common.cache.Striped64$1',
//     // 'com.google.common.cache.Striped64$Cell',
//     // 'com.google.common.cache.Striped64',
//     // 'com.google.common.hash.LittleEndianByteArray$UnsafeByteArray$1',
//     // 'com.google.common.hash.LittleEndianByteArray$UnsafeByteArray$2',
//     // 'com.google.common.hash.LittleEndianByteArray$UnsafeByteArray$3',
//     // 'com.google.common.hash.LittleEndianByteArray$UnsafeByteArray',
//     // 'com.google.common.hash.Striped64$1',
//     // 'com.google.common.hash.Striped64$Cell',
//     // 'com.google.common.hash.Striped64',
//     // 'com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator$1',
//     // 'com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator',
//     // 'com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper$1',
//     // 'com.google.common.util.concurrent.AbstractFuture$UnsafeAtomicHelper'
//   )
//   ignoreMissingClasses(
//     // 'android.net.ssl.SSLSockets',
//     // 'android.os.Build$VERSION',
//     // 'android.util.Log',
//     // 'com.aayushatharva.brotli4j.Brotli4jLoader',
//     // 'com.aayushatharva.brotli4j.decoder.DecoderJNI$Status',
//     // 'com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper',
//     // 'com.aayushatharva.brotli4j.encoder.Encoder$Mode',
//     // 'com.aayushatharva.brotli4j.encoder.Encoder$Parameters',
//     // 'com.aayushatharva.brotli4j.encoder.Encoder',
//     // 'com.github.luben.zstd.Zstd',
//     // 'com.google.gson.stream.JsonReader',
//     // 'com.google.gson.stream.JsonToken',
//     // 'com.google.protobuf.ExtensionRegistry',
//     // 'com.google.protobuf.ExtensionRegistryLite',
//     // 'com.google.protobuf.MessageLite$Builder',
//     // 'com.google.protobuf.MessageLite',
//     // 'com.google.protobuf.MessageLiteOrBuilder',
//     // 'com.google.protobuf.Parser',
//     // 'com.google.protobuf.nano.CodedOutputByteBufferNano',
//     // 'com.google.protobuf.nano.MessageNano',
//     // 'com.jcraft.jzlib.Deflater',
//     // 'com.jcraft.jzlib.Inflater',
//     // 'com.jcraft.jzlib.JZlib$WrapperType',
//     // 'com.jcraft.jzlib.JZlib',
//     // 'com.ning.compress.BufferRecycler',
//     // 'com.ning.compress.lzf.ChunkDecoder',
//     // 'com.ning.compress.lzf.ChunkEncoder',
//     // 'com.ning.compress.lzf.LZFChunk',
//     // 'com.ning.compress.lzf.LZFEncoder',
//     // 'com.ning.compress.lzf.util.ChunkDecoderFactory',
//     // 'com.ning.compress.lzf.util.ChunkEncoderFactory',
//     // 'io.grpc.netty.shaded.io.grpc.netty.GrpcSslContexts',
//     // 'io.grpc.netty.shaded.io.grpc.netty.NettyChannelBuilder',
//     // 'io.grpc.netty.shaded.io.netty.handler.ssl.SslContextBuilder',
//     // 'io.grpc.okhttp.OkHttpChannelBuilder',
//     // 'io.netty.internal.tcnative.AsyncSSLPrivateKeyMethod',
//     // 'io.netty.internal.tcnative.AsyncTask',
//     // 'io.netty.internal.tcnative.Buffer',
//     // 'io.netty.internal.tcnative.CertificateCallback',
//     // 'io.netty.internal.tcnative.CertificateCompressionAlgo',
//     // 'io.netty.internal.tcnative.CertificateVerifier',
//     // 'io.netty.internal.tcnative.Library',
//     // 'io.netty.internal.tcnative.ResultCallback',
//     // 'io.netty.internal.tcnative.SSL',
//     // 'io.netty.internal.tcnative.SSLContext',
//     // 'io.netty.internal.tcnative.SSLPrivateKeyMethod',
//     // 'io.netty.internal.tcnative.SSLSession',
//     // 'io.netty.internal.tcnative.SSLSessionCache',
//     // 'io.netty.internal.tcnative.SessionTicketKey',
//     // 'io.netty.internal.tcnative.SniHostNameMatcher',
//     // 'io.opentelemetry.sdk.logs.data.Body',
//     // 'io.opentelemetry.sdk.logs.data.LogData',
//     // 'io.opentelemetry.sdk.logs.data.Severity',
//     // 'io.opentelemetry.sdk.logs.export.LogExporter',
//     // 'lzma.sdk.lzma.Encoder',
//     // 'org.bouncycastle.cert.X509v3CertificateBuilder',
//     // 'org.bouncycastle.cert.jcajce.JcaX509CertificateConverter',
//     // 'org.bouncycastle.operator.jcajce.JcaContentSignerBuilder',
//     // 'org.conscrypt.AllocatedBuffer',
//     // 'org.conscrypt.BufferAllocator',
//     // 'org.conscrypt.Conscrypt$ProviderBuilder',
//     // 'org.conscrypt.Conscrypt',
//     // 'org.conscrypt.HandshakeListener',
//     // 'org.eclipse.jetty.alpn.ALPN$ClientProvider',
//     // 'org.eclipse.jetty.alpn.ALPN$ServerProvider',
//     // 'org.eclipse.jetty.alpn.ALPN',
//     // 'org.eclipse.jetty.npn.NextProtoNego$ClientProvider',
//     // 'org.eclipse.jetty.npn.NextProtoNego$ServerProvider',
//     // 'org.eclipse.jetty.npn.NextProtoNego',
//     // 'org.jboss.marshalling.ByteInput',
//     // 'org.jboss.marshalling.ByteOutput',
//     // 'org.jboss.marshalling.Marshaller',
//     // 'org.jboss.marshalling.MarshallerFactory',
//     // 'org.jboss.marshalling.MarshallingConfiguration',
//     // 'org.jboss.marshalling.Unmarshaller',
//     // 'org.slf4j.Logger',
//     // 'org.slf4j.LoggerFactory',
//     // 'org.slf4j.helpers.FormattingTuple',
//     // 'org.slf4j.helpers.MessageFormatter',
//     // 'org.slf4j.spi.LocationAwareLogger',
//     // 'reactor.blockhound.BlockHound$Builder',
//     // 'reactor.blockhound.integration.BlockHoundIntegration',
//   )
// }
