/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */
import org.elasticsearch.gradle.VersionProperties

apply plugin: 'elasticsearch.internal-cluster-test'
apply plugin: 'elasticsearch.internal-es-plugin'
apply plugin: 'elasticsearch.internal-test-artifact'

esplugin {
  name 'apm-integration'
  description 'Provides APM integration for Elasticsearch'
  classname 'org.elasticsearch.xpack.apm.APM'
  extendedPlugins = ['x-pack-core']
  javaOpts = "-javaagent:modules/apm-integration/elastic-apm-agent-${versions.apm_agent}.jar"
}

dependencies {
  implementation "io.opentelemetry:opentelemetry-api:${versions.opentelemetry}"
  implementation "io.opentelemetry:opentelemetry-context:${versions.opentelemetry}"
  implementation "io.opentelemetry:opentelemetry-semconv:${versions.opentelemetry}-alpha"
  runtimeOnly    "co.elastic.apm:elastic-apm-agent:${versions.apm_agent}"

  // OTel context needs these, I think
  api "org.slf4j:slf4j-api:${versions.slf4j}"
  api "org.apache.logging.log4j:log4j-slf4j-impl:${versions.log4j}"

  compileOnly project(path: xpackModule('core'))
  internalClusterTestImplementation(testArtifact(project(xpackModule('core'))))
  internalClusterTestImplementation(testArtifact(project(xpackModule('security')))) {
    exclude group: 'com.google.guava', module: 'guava'
  }
}

// FIXME: no unit-test for now
tasks.named("test").configure { enabled = false }

tasks.named("dependencyLicenses").configure {
  mapping from: /opentelemetry-.*/, to: 'opentelemetry'
}
