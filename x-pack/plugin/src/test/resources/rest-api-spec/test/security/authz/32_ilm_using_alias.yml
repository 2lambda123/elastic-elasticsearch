---

setup:
  - skip:
      features: headers

  - do:
      cluster.health:
          wait_for_status: yellow

  - do:
      security.put_role:
        name: "foo_alias_role"
        body:  >
            {
              "indices": [
                { "names": ["foo_alias"], "privileges": ["write", "manage"] }
              ]
            }

  - do:
      security.put_user:
        username: "test_user"
        body:  >
          {
            "password" : "x-pack-test-password",
            "roles" : [ "foo_alias_role" ],
            "full_name" : "user with privileges to write, manage via alias"
          }

  - do:
      cluster.put_settings:
        body:  >
          {
            "transient" : { "indices.lifecycle.poll_interval" : "1s" }
          }

  - do:
      ilm.put_lifecycle:
        policy: "foo-policy"
        body:  >
          {
            "policy" : {
               "phases" : {
                  "hot" : {
                    "min_age": "0ms",
                    "actions" : {
                       "rollover" : {
                          "max_docs" : 2
                       }
                    }
                  }
               }
             }
          }

  - do:
      indices.put_template:
        name: "foo-template"
        body:  >
          {
            "index_patterns": ["foo-logs-*"],
            "settings": {
              "number_of_shards": 1,
              "number_of_replicas": 0,
              "index.lifecycle.name": "foo-policy",
              "index.lifecycle.rollover_alias": "foo_alias"
            }
          }

  - do:
      indices.create:
        index: foo-logs-000001
        body:  >
          {
            "aliases": {
              "foo_alias" : {  }
            }
          }

---
teardown:
  - do:
      security.delete_user:
        username: "test_user"
        ignore: 404

  - do:
      security.delete_role:
        name: "foo_alias_role"
        ignore: 404

  - do:
      indices.delete_alias:
        index: "foo-logs-*"
        name: [ "foo_alias" ]
        ignore: 404

  - do:
      indices.delete:
        index: [ "foo-logs-*" ]
        ignore: 404

---
"Test ilm, index via write alias of index":

  # index using alias
  - do:
      headers: { Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" } # test_user
      create:
        id: 1
        index: foo_alias
        body: >
          {
            "name" : "doc1"
          }

  - do:
      headers: { Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" } # test_user
      create:
        id: 2
        index: foo_alias
        body: >
          {
            "name" : "doc2"
          }

  - do:
      indices.refresh: {}

  # sleep so ilm task gets triggered
  # this is a hacky way to sleep for 1s, since we will never have 10 nodes
  - do:
      catch: request_timeout
      cluster.health:
        wait_for_nodes: 10
        timeout: "2s"
  - match:
     timed_out: true

  # ILM should have triggered rollover by now

  # ensure new index is created
  - do:
      indices.exists:
        index: foo-logs-000002

  - is_true: ''

  # index using alias
  - do:
      headers: { Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" } # test_user
      create:
        id: 3
        index: foo_alias
        body: >
          {
            "name" : "doc3"
          }

  - do:
      indices.refresh: {}

  # verify the indexes
  - do:
      search:
        rest_total_hits_as_int: true
        index: foo-logs-000001

  - match: { hits.total: 2 }
  - match: { hits.hits.0._index: "foo-logs-000001"}

  - do:
      search:
        rest_total_hits_as_int: true
        index: foo-logs-000002

  - match: { hits.total: 1 }
  - match: { hits.hits.0._index: "foo-logs-000002"}
