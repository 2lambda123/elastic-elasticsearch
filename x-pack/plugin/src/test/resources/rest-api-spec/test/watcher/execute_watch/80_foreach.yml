---
setup:
  - do:
      cluster.health:
          wait_for_status: yellow

---
teardown:
  - do:
      watcher.delete_watch:
        id: "test_watch"
        ignore: 404

---
"Test execute watch api with foreach action":
  - do:
      bulk:
        refresh: true
        body:
          - '{"index": {"_index": "my_test_index", "_id": "first"}}'
          - '{ "title" : "first" }'
          - '{"index": {"_index": "my_test_index", "_id": "second"}}'
          - '{ "title" : "second" }'

  - do:
      watcher.execute_watch:
        body:  >
          {
            "watch" : {
              "trigger": {
                "schedule" : { "cron" : "0 0 0 1 * ? 2099" }
              },
              "input": {
                "search" : {
                  "request" : {
                    "indices" : [ "my_test_index" ],
                    "body" : {
                      "query": {
                        "match_all" : {}
                      }
                    }
                  }
                }
              },
              "actions": {
                "log_hits" : {
                  "foreach" : "ctx.payload.hits.hits",
                  "logging" : {
                    "text" : "Found error in document {{_id}} with timestamp {{_source.timestamp}}"
                  }
                }
              }
            }
          }

  - match: { watch_record.trigger_event.type: "manual" }
  - match: { watch_record.state: "executed" }
  - match: { watch_record.status.execution_state: "executed" }

  - do:
      mget:
        body:
          docs:
            - { _index: my_test_index_2, _id: "first"}
            - { _index: my_test_index_2, _id: "second"}

  - is_true:  docs.0.found
  - match:  { docs.0._source: { "title": "first" }}
  - is_true:  docs.1.found
  - match:  { docs.1._source: { "title": "second" }}
