setup:
  - skip:
      features: headers
      version: " - 7.2.99"
      reason: "dense_vector functions were added from 7.3"

  - do:
      indices.create:
        include_type_name: false
        index: test-index
        body:
          settings:
            number_of_replicas: 0
          mappings:
            properties:
              my_dense_vector:
                 type: dense_vector
                 dims: 5
  - do:
      index:
        index: test-index
        id: 1
        body:
          my_dense_vector: [230.0, 300.33, -34.8988, 15.555, -200.0]

  - do:
      index:
        index: test-index
        id: 2
        body:
          my_dense_vector: [-0.5, 100.0, -13, 14.8, -156.0]

  - do:
      index:
        index: test-index
        id: 3
        body:
          my_dense_vector: [0.5, 111.3, -13.0, 14.8, -156.0]

  - do:
      indices.refresh: {}

---
"Dot Product":
  - do:
      headers:
        Content-Type: application/json
      search:
        rest_total_hits_as_int: true
        body:
          query:
            script_score:
              query: {match_all: {} }
              script:
                source: "dotProduct(params.query_vector, doc['my_dense_vector'])"
                params:
                  query_vector: [0.5, 111.3, -13.0, 14.8, -156.0]

  - match: {hits.total: 3}

  # result should be 65425.624, but we allow 1% error because vectors are indexed as bfloat16
  - match: {hits.hits.0._id: "1"}
  - gte: {hits.hits.0._score: 62154.34}
  - lte: {hits.hits.0._score: 68696.91}

  # result should be 37111.98, but we allow 1% error because vectors are indexed as bfloat16
  - match: {hits.hits.1._id: "3"}
  - gte: {hits.hits.1._score: 35256.38}
  - lte: {hits.hits.1._score: 38967.58}

  # result should be 35853.78, but we allow 1% error because vectors are indexed as bfloat16
  - match: {hits.hits.2._id: "2"}
  - gte: {hits.hits.2._score: 34061.09}
  - lte: {hits.hits.2._score: 37646.47}

---
"Cosine Similarity":
  - do:
      headers:
        Content-Type: application/json
      search:
        rest_total_hits_as_int: true
        body:
          query:
            script_score:
              query: {match_all: {} }
              script:
                source: "cosineSimilarity(params.query_vector, doc['my_dense_vector'])"
                params:
                  query_vector: [0.5, 111.3, -13.0, 14.8, -156.0]

  - match: {hits.total: 3}

  - match: {hits.hits.0._id: "3"}
  - gte: {hits.hits.0._score: 0.999}
  - lte: {hits.hits.0._score: 1.001}

  - match: {hits.hits.1._id: "2"}
  - gte: {hits.hits.1._score: 0.998}
  - lte: {hits.hits.1._score: 1.0}

  - match: {hits.hits.2._id: "1"}
  - gte: {hits.hits.2._score: 0.78}
  - lte: {hits.hits.2._score: 0.791}
