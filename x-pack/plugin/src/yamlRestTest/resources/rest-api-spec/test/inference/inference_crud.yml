---
"Create Inference Model":
  - do:
      inference.put_model:
        task_type: sparse_embedding
        model_id: elser_service_model
        body: >
          {
            "service": "elser",
            "service_settings": {
            },
            "task_settings": {
            }
          }
  - match: { model_id: elser_service_model }
  - match: { service: elser }
  - match: { task_type: sparse_embedding }
  - match: { service_settings: { } }
  - match: { task_settings: { } }

---
"Inference Model life cyle":
  - do:
      inference.put_model:
        task_type: sparse_embedding
        model_id: model_to_get
        body: >
          {
            "service": "elser",
            "service_settings": {
            },
            "task_settings": {
            }
          }
  - match: { model_id: model_to_get }

  - do:
      inference.get_model:
        task_type: sparse_embedding
        model_id: model_to_get
  - match: { model_id: model_to_get }
  - match: { service: elser }
  - match: { task_type: sparse_embedding }
  - match: { service_settings: { } }
  - match: { task_settings: { } }

  - do:
      inference.delete_model:
        task_type: sparse_embedding
        model_id: model_to_get
  - is_true: acknowledged

  - do:
      catch: missing
      inference.get_model:
        task_type: sparse_embedding
        model_id: model_to_get
  - match: { error.type: "resource_not_found_exception" }
  - match: { error.reason: "Model not found [model_to_get]" }

---
"Test inference with missing model":
  - do:
      catch: missing
      inference.inference:
        task_type: sparse_embedding
        model_id: missing
        body:
          input: "foo"
  - match: { error.reason: "Model not found [missing]" }

---
"Test inference with bad task type":
  - do:
      inference.put_model:
        task_type: sparse_embedding
        model_id: elser_model
        body: >
          {
            "service": "elser",
            "service_settings": {
            },
            "task_settings": {
            }
          }
  - do:
      catch: bad_request
      inference.inference:
        task_type: bad
        model_id: elser_model
        body:
          input: "foo"
  - match: { error.reason: "Unknown task_type [bad]" }
