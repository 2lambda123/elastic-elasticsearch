setup:
  - skip:
      features: headers
  - do:
      headers:
        Authorization: "Basic eF9wYWNrX3Jlc3RfdXNlcjp4LXBhY2stdGVzdC1wYXNzd29yZA==" # run as x_pack_rest_user, i.e. the test setup superuser
      indices.create:
        index: data
        body:
          mappings:
            properties:
              product:
                type: keyword
              value:
                type: long

  - do:
      headers:
        Authorization: "Basic eF9wYWNrX3Jlc3RfdXNlcjp4LXBhY2stdGVzdC1wYXNzd29yZA==" # run as x_pack_rest_user, i.e. the test setup superuser
        Content-Type: application/json
      bulk:
        index: data
        refresh: true
        body: |
          {"index": {}}
          {"product": "server", "value": 1}
          {"index": {}}
          {"product": "server", "value": 1}
          {"index": {}}
          {"product": "server", "value": 1}
          {"index": {}}
          {"product": "VCR", "value": 4}
          {"index": {}}
          {"product": "VCR", "value": 4}
          {"index": {}}
          {"product": "VCR", "value": 4}

---
"Test random_sampling_query with no filter":
  - skip:
      features: close_to
  - do:
      search:
        index: data
        size: 0
        body: >
          {
            "query": {"random_sample": {"probability": 0.95}},
            "size": 0,
            "aggs": {
              "mean": {
                "avg": {
                  "field": "value"
                }
              }
            }
          }
  - close_to: { aggregations.mean.value: {value: 2.5, error: 1.0} }

---
"Test random_sampling_query with filter":
  - do:
      search:
        index: data
        size: 0
        body: >
          {
            "query": {
              "random_sample": {
                "probability": 0.95,
                "filter": {
                  "bool": {
                    "filter": [
                      {"term": {"product": "server"}}
                    ]
                  }
                }
              }
            },
            "size": 0,
            "aggs": {
              "mean": {
                "avg": {
                  "field": "value"
                }
              }
            }
          }
  - match: { aggregations.mean.value: 1.0 }

  - do:
      search:
        index: data
        size: 0
        body: >
          {
            "query": {
              "random_sample": {
                "probability": 0.95,
                "filter": {
                  "bool": {
                    "filter": [
                      {"term": {"product": "VCR"}}
                    ]
                  }
                }
              }
            },
            "size": 0,
            "aggs": {
              "mean": {
                "avg": {
                  "field": "value"
                }
              }
            }
          }
  - match: { aggregations.mean.value: 4.0 }
---
"Test random_sampling_query with poor settings":

  - do:
      catch: /\[probability\] cannot be greater than or equal to 1/
      search:
        index: data
        size: 0
        body: >
          {
            "query": {"random_sample": {"probability": 1.5}},
            "size": 0,
            "aggs": {
              "mean": {
                "avg": {
                  "field": "value"
                }
              }
            }
          }
  - do:
      catch: /\[probability\] cannot be less than or equal to 0/
      search:
        index: data
        size: 0
        body: >
          {
            "query": {"random_sample": {"probability": -1.0}},
            "size": 0,
            "aggs": {
              "mean": {
                "avg": {
                  "field": "value"
                }
              }
            }
          }
