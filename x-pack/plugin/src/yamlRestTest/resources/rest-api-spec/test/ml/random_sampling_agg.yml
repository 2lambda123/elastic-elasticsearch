setup:
  - skip:
      features: headers
  - do:
      headers:
        Authorization: "Basic eF9wYWNrX3Jlc3RfdXNlcjp4LXBhY2stdGVzdC1wYXNzd29yZA==" # run as x_pack_rest_user, i.e. the test setup superuser
      indices.create:
        index: data
        body:
          mappings:
            properties:
              product:
                type: keyword
              value:
                type: long

  - do:
      headers:
        Authorization: "Basic eF9wYWNrX3Jlc3RfdXNlcjp4LXBhY2stdGVzdC1wYXNzd29yZA==" # run as x_pack_rest_user, i.e. the test setup superuser
        Content-Type: application/json
      bulk:
        index: data
        refresh: true
        body: |
          {"index": {}}
          {"product": "server", "value": 1}
          {"index": {}}
          {"product": "server", "value": 1}
          {"index": {}}
          {"product": "server", "value": 1}
          {"index": {}}
          {"product": "VCR", "value": 4}
          {"index": {}}
          {"product": "VCR", "value": 4}
          {"index": {}}
          {"product": "VCR", "value": 4}

---
"Test random_sampler aggregation with no filter":
  - skip:
      features: close_to
  - do:
      search:
        index: data
        size: 0
        body: >
          {
            "aggs": {
              "sampled": {
                "random_sampler": {
                  "probability": 0.95
                },
                "aggs": {
                  "mean": {
                    "avg": {
                      "field": "value"
                    }
                  }
                }
              }
            }
          }
  - close_to: { aggregations.sampled.mean.value: {value: 2.5, error: 1.0} }

---
"Test random_sampler aggregation with filter":
  - do:
      search:
        index: data
        size: 0
        body: >
          {
            "query": {
              "bool": {
                "filter": [
                  {"term": {"product": "server"}}
                ]
              }
            },
            "aggs": {
              "sampled": {
                "random_sampler": {
                  "probability": 0.95
                },
                "aggs": {
                  "mean": {
                    "avg": {
                      "field": "value"
                    }
                  }
                }
              }
            }
          }
  - match: { aggregations.sampled.mean.value: 1.0 }

  - do:
      search:
        index: data
        size: 0
        body: >
          {
            "query": {
              "bool": {
                "filter": [
                  {"term": {"product": "VCR"}}
                ]
              }
            },
            "aggs": {
              "sampled": {
                "random_sampler": {
                  "probability": 0.95
                },
                "aggs": {
                  "mean": {
                    "avg": {
                      "field": "value"
                    }
                  }
                }
              }
            }
          }
  - match: { aggregations.sampled.mean.value: 4.0 }
---
"Test random_sampler aggregation with poor settings":

  - do:
      catch: /\[probability\] must be between 0 and 1/
      search:
        index: data
        size: 0
        body: >
          {
            "aggs": {
              "sampled": {
                "random_sampler": {
                  "probability": 1.5
                },
                "aggs": {
                  "mean": {
                    "avg": {
                      "field": "value"
                    }
                  }
                }
              }
            }
          }
  - do:
      catch: /\[probability\] must be between 0 and 1/
      search:
        index: data
        size: 0
        body: >
          {
            "aggs": {
              "sampled": {
                "random_sampler": {
                  "probability": 0.0
                },
                "aggs": {
                  "mean": {
                    "avg": {
                      "field": "value"
                    }
                  }
                }
              }
            }
          }

  - do:
      catch: /\[random_sampler\] aggregation \[sampled\] must have sub-aggregations/
      search:
        index: data
        size: 0
        body: >
          {
            "aggs": {
              "sampled": {
                "random_sampler": {
                  "probability": 0.2
                }
              }
            }
          }

  - do:
      catch: /\[random_sampler\] aggregation \[sampled\] does not support sampling \[cardinality\] aggregation \[unique\]/
      search:
        index: data
        size: 0
        body: >
          {
            "aggs": {
              "sampled": {
                "random_sampler": {
                  "probability": 0.1
                },
                "aggs": { "unique": {"cardinality": {"field": "product"}}}
              }
            }
          }

  - do:
      catch: /\[random_sampler\] aggregation \[sampled\] cannot have a parent aggregation/
      search:
        index: data
        size: 0
        body: >
          {
            "aggs": {
              "terms": {
                "terms": {
                  "field": "product"
                },
                "aggs": {
                  "sampled": {
                    "random_sampler": {
                      "probability": 0.1
                    },
                    "aggs": { "max": {"max": {"field": "value"}}}
                  }
                }
              }
            }
          }
