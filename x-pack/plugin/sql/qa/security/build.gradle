
apply plugin: 'elasticsearch.build'

dependencies {
  testCompile project(':x-pack:plugin:core')
}

Project mainProject = project

group = "${group}.x-pack.qa.sql.security"

configurations.create('testClasses')

String classesDir = project.file(project.sourceSets.main.output.classesDirs.singleFile).toString()
artifacts.add('testClasses', project.layout.projectDirectory.dir(classesDir)) {
  builtBy tasks.named('testClasses')
} 

// Tests are pushed down to subprojects and will be checked there.
testingConventions.enabled = false

subprojects {
  // Use tests from the root security qa project in subprojects
  configurations.create('testClasses')

  dependencies {
    testCompile project(":x-pack:plugin:core")
    testClasses project(path: mainProject.path, configuration: 'testClasses')
  }

  testClusters.integTest {
    testDistribution = 'DEFAULT'
    // Setup auditing so we can use it in some tests
    setting 'xpack.security.audit.enabled', 'true'
    setting 'xpack.security.enabled', 'true'
    setting 'xpack.license.self_generated.type', 'trial'
    // Setup roles used by tests
    extraConfigFile 'roles.yml', mainProject.file('roles.yml')
    /* Setup the one admin user that we run the tests as.
     * Tests use "run as" to get different users. */
    user username: "test_admin", password: "x-pack-test-password"
  }

  integTest.runner {
    dependsOn configurations.testClasses
    testClassesDirs += project.files(configurations.testClasses.singleFile)
    nonInputProperties.systemProperty 'tests.audit.logfile',
        "${ -> testClusters.integTest.singleNode().getAuditLog()}"
    nonInputProperties.systemProperty 'tests.audit.yesterday.logfile',
        "${ -> testClusters.integTest.singleNode().getAuditLog().getParentFile()}/integTest_audit-${new Date().format('yyyy-MM-dd')}.json"
  }
}
