---
setup:

  - do:
      indices.create:
        index: docs
        body:
          settings:
            number_of_shards:   1
            number_of_replicas: 0

  - do:
      bulk:
        body:
          - index:
              _index: docs
              _id:    1
          - field: foo
          - index:
              _index: docs
              _id:    2
          - field: bar
          - index:
              _index: docs
              _id:    3
          - field: baz

  - do:
      snapshot.create_repository:
        repository: repository-fs
        body:
          type: fs
          settings:
            location: "repository-fs"

  - do:
      snapshot.create:
        repository: repository-fs
        snapshot: snapshot
        wait_for_completion: true

  - do:
      indices.delete:
        index: docs
---
teardown:

  - do:
      snapshot.delete:
        repository: repository-fs
        snapshot: snapshot
        ignore: 404

  - do:
      snapshot.delete_repository:
        repository: repository-fs

---
"Tests searchable snapshots stats":
  - skip:
      version: " - 7.99.99"
      reason:  searchable snapshots introduced in 8.0

  - do:
      catch: missing
      searchable_snapshots.stats: {}

  - match: { error.root_cause.0.type: "resource_not_found_exception" }
  - match: { error.root_cause.0.reason: "No searchable snapshots indices found" }

  - do:
      catch: missing
      searchable_snapshots.stats:
        index: _all

  - match: { error.root_cause.0.type: "resource_not_found_exception" }
  - match: { error.root_cause.0.reason: "No searchable snapshots indices found" }

  - do:
      catch:   missing
      searchable_snapshots.stats:
        index: "unknown"

  - do:
      indices.create:
        index: non_searchable_snapshot_index

  - do:
      catch: missing
      searchable_snapshots.stats:
        index: non_*

  - match: { error.root_cause.0.type: "resource_not_found_exception" }
  - match: { error.root_cause.0.reason: "No searchable snapshots indices found" }

  - do:
      snapshot.create_repository:
        repository: repository-searchable-snapshots
        body:
          type: searchable
          settings:
            delegate_type: fs
            location: "repository-fs"

  - match: { acknowledged: true }

  - do:
      snapshot.restore:
        repository: repository-searchable-snapshots
        snapshot: snapshot
        wait_for_completion: true

  - match: { snapshot.snapshot: snapshot }
  - match: { snapshot.shards.failed: 0 }
  - match: { snapshot.shards.successful: 1 }

  - do:
      search:
        rest_total_hits_as_int: true
        index: docs
        body:
          query:
            match_all: {}

  - match: { hits.total: 3 }

  - do:
      nodes.info: {}
  - set:
      nodes._arbitrary_key_: node_id

  - do:
      searchable_snapshots.stats:
        index: "d*"

  - length:  { indices: 1 }
  - length:  { indices.docs.shards: 1 }
  - length:  { indices.docs.shards.0: 1 }
  - is_true: indices.docs.shards.0.0.snapshot_uuid
  - is_true: indices.docs.shards.0.0.index_uuid
  - match:   { indices.docs.shards.0.0.shard.state: STARTED }
  - match:   { indices.docs.shards.0.0.shard.primary: true }
  - match:   { indices.docs.shards.0.0.shard.node: $node_id }

  - is_true: indices.docs.shards.0.0.files.0.name
  - gt:      { indices.docs.shards.0.0.files.0.length: 0 }
  - gt:      { indices.docs.shards.0.0.files.0.open_count: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.inner_count: 0 }
  - gt:      { indices.docs.shards.0.0.files.0.close_count: 0 }

  - gte:     { indices.docs.shards.0.0.files.0.contiguous_bytes_read.count: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.contiguous_bytes_read.sum: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.contiguous_bytes_read.min: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.contiguous_bytes_read.max: 0 }

  - gte:     { indices.docs.shards.0.0.files.0.non_contiguous_bytes_read.count: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.non_contiguous_bytes_read.sum: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.non_contiguous_bytes_read.min: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.non_contiguous_bytes_read.max: 0 }

  - gte:     { indices.docs.shards.0.0.files.0.cached_bytes_read.count: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.cached_bytes_read.sum: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.cached_bytes_read.min: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.cached_bytes_read.max: 0 }

  - gte:     { indices.docs.shards.0.0.files.0.cached_bytes_written.count: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.cached_bytes_written.sum: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.cached_bytes_written.min: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.cached_bytes_written.max: 0 }

  - gte:     { indices.docs.shards.0.0.files.0.direct_bytes_read.count: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.direct_bytes_read.sum: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.direct_bytes_read.min: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.direct_bytes_read.max: 0 }

  - gte:     { indices.docs.shards.0.0.files.0.forward_seeks.small.count: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.forward_seeks.small.sum: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.forward_seeks.small.min: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.forward_seeks.small.max: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.forward_seeks.large.count: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.forward_seeks.large.sum: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.forward_seeks.large.min: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.forward_seeks.large.max: 0 }

  - gte:     { indices.docs.shards.0.0.files.0.backward_seeks.small.count: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.backward_seeks.small.sum: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.backward_seeks.small.min: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.backward_seeks.small.max: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.backward_seeks.large.count: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.backward_seeks.large.sum: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.backward_seeks.large.min: 0 }
  - gte:     { indices.docs.shards.0.0.files.0.backward_seeks.large.max: 0 }
