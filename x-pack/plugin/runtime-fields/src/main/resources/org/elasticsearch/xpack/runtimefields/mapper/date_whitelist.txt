#
# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
# or more contributor license agreements. Licensed under the Elastic License;
# you may not use this file except in compliance with the Elastic License.
#

# The whitelist for date-valued runtime fields

# These two whitelists are required for painless to find the classes
class org.elasticsearch.xpack.runtimefields.mapper.DateFieldScript @no_import {
}
class org.elasticsearch.xpack.runtimefields.mapper.DateFieldScript$Factory @no_import {
}

static_import {
    # The `emit` callback to collect values for the field
    void emit(org.elasticsearch.xpack.runtimefields.mapper.DateFieldScript, long) bound_to org.elasticsearch.xpack.runtimefields.mapper.DateFieldScript$Emit
    # Parse a value from the source to millis since epoch
    long parse(org.elasticsearch.xpack.runtimefields.mapper.DateFieldScript, def) bound_to org.elasticsearch.xpack.runtimefields.mapper.DateFieldScript$Parse
}


class java.lang.Integer {
    void org.elasticsearch.xpack.runtimefields.mapper.DateFieldScript emit(org.elasticsearch.xpack.runtimefields.mapper.DateFieldScript) @inject_script
}

class java.lang.Long {
    void org.elasticsearch.xpack.runtimefields.mapper.DateFieldScript emit(org.elasticsearch.xpack.runtimefields.mapper.DateFieldScript) @inject_script
}

class java.lang.String {
    void org.elasticsearch.xpack.runtimefields.mapper.DateFieldScript emit(org.elasticsearch.xpack.runtimefields.mapper.DateFieldScript) @inject_script
}

class java.time.temporal.TemporalAccessor {
    void org.elasticsearch.xpack.runtimefields.mapper.DateFieldScript emit(org.elasticsearch.xpack.runtimefields.mapper.DateFieldScript) @inject_script
}
