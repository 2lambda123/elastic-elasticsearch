setup:
  - skip:
      version: " - 8.12.99"
      reason: semantic_text introduced in 8.13.0 # TODO change when 8.13.0 is released

  - do:
      inference.put_model:
        task_type: sparse_embedding
        inference_id: sparse-inference-id
        body: >
          {
            "service": "test_service",
            "service_settings": {
              "model": "my_model",
              "api_key": "abc64"
            },
            "task_settings": {
            }
          }

  - do:
      inference.put_model:
        task_type: text_embedding
        inference_id: dense-inference-id
        body: >
          {
            "service": "text_embedding_test_service",
            "service_settings": {
              "model": "my_model",
              "dimensions": 10,
              "api_key": "abc64",
              "similarity": "cosine"
            },
            "task_settings": {
            }
          }

  - do:
      indices.create:
        index: test-index
        body:
          mappings:
            properties:
              sparse_field:
                type: semantic_text
                inference_id: sparse-inference-id
              dense_field:
                type: semantic_text
                inference_id: dense-inference-id
              non_inference_field:
                type: text

---
"Dense vector results are indexed as nested chunks and searchable":
    - do:
        bulk:
          index: test-index
          refresh: true
          body: |
            {"index":{}}
            {"dense_field": ["you know, for testing", "now with chunks"]}
            {"index":{}}
            {"dense_field": ["some more tests", "that include chunks"]}

    - do:
        search:
          index: test-index
          body:
            query:
              nested:
                path: dense_field.inference.chunks
                query:
                  knn:
                    field: dense_field.inference.chunks.embeddings
                    query_vector_builder:
                      text_embedding:
                        model_id: dense-inference-id
                        model_text: "you know, for testing"

    - match: { hits.total.value: 2 }
    - match: { hits.total.relation: eq }

    # Search with inner hits
    - do:
        search:
          _source: false
          index: test-index
          body:
            query:
              nested:
                path: dense_field.inference.chunks
                inner_hits:
                  _source: false
                  fields: [dense_field.inference.chunks.text]
                query:
                  knn:
                    field: dense_field.inference.chunks.embeddings
                    query_vector_builder:
                      text_embedding:
                        model_id: dense-inference-id
                        model_text: "you know, for testing"

    - match: { hits.total.value: 2 }
    - match: { hits.total.relation: eq }
    - match: { hits.hits.0.inner_hits.dense_field\.inference\.chunks.hits.total.value: 2 }
    - match: { hits.hits.0.inner_hits.dense_field\.inference\.chunks.hits.hits.0.fields.dense_field\.inference\.chunks.0.text: ["you know, for testing"] }
    - match: { hits.hits.0.inner_hits.dense_field\.inference\.chunks.hits.hits.1.fields.dense_field\.inference\.chunks.0.text: ["now with chunks"] }
    - match: { hits.hits.1.inner_hits.dense_field\.inference\.chunks.hits.total.value: 2 }
    - match: { hits.hits.1.inner_hits.dense_field\.inference\.chunks.hits.hits.0.fields.dense_field\.inference\.chunks.0.text: ["some more tests"] }
    - match: { hits.hits.1.inner_hits.dense_field\.inference\.chunks.hits.hits.1.fields.dense_field\.inference\.chunks.0.text: ["that include chunks"] }


---
"Sparse vector results are indexed as nested chunks and searchable":
    - do:
        bulk:
          index: test-index
          refresh: true
          body: |
            {"index":{}}
            {"sparse_field": ["you know, for testing", "now with chunks"]}
            {"index":{}}
            {"sparse_field": ["some more tests", "that include chunks"]}

    - do:
        search:
          index: test-index
          body:
            query:
              nested:
                path: sparse_field.inference.chunks
                query:
                  text_expansion:
                    sparse_field.inference.chunks.embeddings:
                      model_id: sparse-inference-id
                      model_text: "you know, for testing"

    # Search with inner hits
    - do:
        search:
          _source: false
          index: test-index
          body:
            query:
              nested:
                path: sparse_field.inference.chunks
                inner_hits:
                  _source: false
                  fields: [sparse_field.inference.chunks.text]
                query:
                  text_expansion:
                    sparse_field.inference.chunks.embeddings:
                      model_id: sparse-inference-id
                      model_text: "you know, for testing"

    - match: { hits.total.value: 2 }
    - match: { hits.total.relation: eq }
    - match: { hits.hits.0.inner_hits.sparse_field\.inference\.chunks.hits.total.value: 2 }
    - match: { hits.hits.0.inner_hits.sparse_field\.inference\.chunks.hits.hits.0.fields.sparse_field\.inference\.chunks.0.text: ["you know, for testing"] }
    - match: { hits.hits.0.inner_hits.sparse_field\.inference\.chunks.hits.hits.1.fields.sparse_field\.inference\.chunks.0.text: ["now with chunks"] }
    - match: { hits.hits.1.inner_hits.sparse_field\.inference\.chunks.hits.total.value: 2 }
    - match: { hits.hits.1.inner_hits.sparse_field\.inference\.chunks.hits.hits.0.fields.sparse_field\.inference\.chunks.0.text: ["some more tests"] }
    - match: { hits.hits.1.inner_hits.sparse_field\.inference\.chunks.hits.hits.1.fields.sparse_field\.inference\.chunks.0.text: ["that include chunks"] }


