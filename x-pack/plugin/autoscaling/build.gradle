apply plugin: 'elasticsearch.internal-es-plugin'
apply plugin: 'elasticsearch.internal-cluster-test'

esplugin {
  name 'x-pack-autoscaling'
  description 'Elasticsearch Expanded Pack Plugin - Autoscaling'
  classname 'org.elasticsearch.xpack.autoscaling.Autoscaling'
  extendedPlugins = ['x-pack-core']
  hasNativeController false
  requiresKeystore true
}
archivesBaseName = 'x-pack-autoscaling'

dependencies {
  compileOnly project(path: xpackModule('core'))
  testImplementation(testArtifact(project(xpackModule('core'))))
  testImplementation project(':modules:data-streams')
  testImplementation project(path: xpackModule('blob-cache'))
  testImplementation project(path: xpackModule('searchable-snapshots'))
  testImplementation project(path: xpackModule('ilm'))

  testImplementation "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}"
}

addQaCheckDependencies(project)
tasks.named("transportTestExistCheck").configure { task ->
  task.skipTest("org/elasticsearch/xpack/autoscaling/capacity/FixedAutoscalingDeciderService\$FixedReason","missing test")
  task.skipTest("org/elasticsearch/xpack/autoscaling/action/PutAutoscalingPolicyAction\$Request","missing test")
  task.skipTest("org/elasticsearch/xpack/autoscaling/AutoscalingMetadata\$AutoscalingMetadataDiff","missing test")
  task.skipTest("org/elasticsearch/xpack/autoscaling/action/GetAutoscalingCapacityAction\$Request","missing test")
  task.skipTest("org/elasticsearch/xpack/autoscaling/storage/FrozenStorageDeciderService\$FrozenReason","missing test")
  task.skipTest("org/elasticsearch/xpack/autoscaling/shards/FrozenShardsDeciderService\$FrozenShardsReason","missing test")
  task.skipTest("org/elasticsearch/xpack/autoscaling/action/DeleteAutoscalingPolicyAction\$Request","missing test")
  task.skipTest("org/elasticsearch/xpack/autoscaling/storage/ReactiveStorageDeciderService\$ReactiveReason","missing test")
  task.skipTest("org/elasticsearch/xpack/autoscaling/storage/ProactiveStorageDeciderService\$ProactiveReason","missing test")
  task.skipTest("org/elasticsearch/xpack/autoscaling/action/GetAutoscalingPolicyAction\$Request","missing test")
  task.skipTest("org/elasticsearch/xpack/autoscaling/existence/FrozenExistenceDeciderService\$FrozenExistenceReason","missing test")
  task.skipTest("org/elasticsearch/xpack/autoscaling/action/GetAutoscalingPolicyAction\$Response","missing test")
  task.skipTest("org/elasticsearch/xpack/autoscaling/action/GetAutoscalingCapacityAction\$Response","missing test")
}
