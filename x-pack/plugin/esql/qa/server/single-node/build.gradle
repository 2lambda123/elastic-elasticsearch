apply plugin: 'elasticsearch.legacy-yaml-rest-test'
apply plugin: 'elasticsearch.legacy-java-rest-test'

testClusters.matching { it.name == "javaRestTest" }.configureEach {
  testDistribution = 'DEFAULT'
  setting 'xpack.ml.enabled', 'false'
  setting 'xpack.watcher.enabled', 'false'
}

dependencies {
  configurations.javaRestTestRuntimeClasspath {
    resolutionStrategy.force "org.slf4j:slf4j-api:1.7.25"
  }
  configurations.javaRestTestRuntimeOnly {
    // This is also required to make resolveAllDependencies work
    resolutionStrategy.force "org.slf4j:slf4j-api:1.7.25"
  }

  /* Since we're a standalone rest test we actually get transitive
   * dependencies but we don't really want them because they cause
   * all kinds of trouble with the jar hell checks. So we suppress
   * them explicitly for non-es projects. */
  javaRestTestImplementation(project(':x-pack:plugin:esql:qa:server')) {
    transitive = false
  }
  javaRestTestImplementation project(":test:framework")
  javaRestTestRuntimeOnly project(xpackModule('ql:test-fixtures'))

  javaRestTestRuntimeOnly "org.slf4j:slf4j-api:1.7.25"
  javaRestTestRuntimeOnly "net.sf.supercsv:super-csv:${versions.supercsv}"

  javaRestTestImplementation project(path: xpackModule('ql:test-fixtures'))

  javaRestTestImplementation project(xpackModule('esql:qa:testFixtures'))
  yamlRestTestImplementation project(xpackModule('esql:qa:server'))
}

restResources {
  restApi {
    include '_common', 'bulk', 'get', 'indices', 'esql', 'xpack', 'enrich', 'cluster'
  }
  restTests {
    includeXpack 'esql'
  }
}

testClusters.configureEach {
  testDistribution = 'DEFAULT'
  setting 'xpack.license.self_generated.type', 'trial'
  setting 'xpack.monitoring.collection.enabled', 'true'
  setting 'xpack.security.enabled', 'false'
}
