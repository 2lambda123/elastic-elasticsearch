apply plugin: 'elasticsearch.vagrantsupport'
apply plugin: 'elasticsearch.standalone-test'

dependencies {
  testCompile project(xpackModule('security'))
  testCompile project(path: xpackModule('security'), configuration: 'testArtifacts')
}

// add test resources from security, so tests can use example certs
sourceSets.test.resources.srcDirs(project(xpackModule('security')).sourceSets.test.resources.srcDirs)
compileTestJava.options.compilerArgs << "-Xlint:-deprecation,-rawtypes,-serial,-try,-unchecked"

// we have to repeat these patterns because the security test resources are effectively in the src of this project
forbiddenPatterns {
  exclude '**/*.key'
  exclude '**/*.p12'
  exclude '**/*.der'
}

test {
  Project fixtureProject = project(":x-pack:test:smb-fixture")
  /*
   * We have to disable setting the number of available processors as tests in the same JVM randomize processors and will step on each
   * other if we allow them to set the number of available processors as it's set-once in Netty.
   */
  dependsOn fixtureProject.composeUp
  systemProperty 'es.set.netty.runtime.available.processors', 'false'
  include '**/*IT.class'
  include '**/*Tests.class'
  doFirst {
    fixtureProject.dockerCompose.servicesInfos.fixture.ports.forEach { container, host ->
      logger.info(" adding system property fixture.smb-fixture.ports.$container -> $host")
      systemProperty "fixture.smb-fixture.tcp.$container", host
    }
  }
}

// these are just tests, no need to audit
thirdPartyAudit.enabled = false