# Integration tests for error_query using stall_time_seconds field
#

---
"Error query":
  - skip:
      features: [ "allowed_warnings" ]

  - do:
      indices.create:
        index: test_exception
        body:
          settings:
            index.number_of_shards: 2

  - do:
      indices.create:
        index: test_warning
        body:
          settings:
            index.number_of_shards: 2

  - do:
      search:
        index: test*
        timeout: 1ms
        body:
          query:
            "error_query": { "indices": [ { name: "test_exception", shard_ids: [ 1 ], stall_time_seconds: 3, error_type: "exception", message: "boom" }, { name: "test_warning", stall_time_seconds: 2, error_type: "warning", message: "Watch out!" } ] }
      allowed_warnings:
        - "[test_warning][0] Watch out!"
        - "[test_warning][1] Watch out!"

  - match:  { hits.total.value:                                                       0 }
  - match:  { _shards.total:                                                          4 }
  - match:  { _shards.successful:                                                     3 }
  - match:  { _shards.failed:                                                         1 }
  - length: { _shards.failures:                                                       1 }
  - match:  { _shards.failures.0.index:                                "test_exception" }
  - match:  { _shards.failures.0.shard:                                               1 }
  - match:  { _shards.failures.0.reason.caused_by.reason:    "[test_exception][1] boom" }
  - gte: { took: 3000 }
  - is_false: timed_out

  - do:
      search:
        index: test_exception
        timeout: 1500ms
        body:
          query:
            "error_query": { "indices": [ { name: "test_exception", stall_time_seconds: 3, error_type: "none" } ] }

  - match:  { hits.total.value:                                                       0 }
  - match:  { _shards.total:                                                          2 }
  - match:  { _shards.successful:                                                     2 }
  - match:  { _shards.failed:                                                         0 }
  - gte: { took: 3000 }
  # - is_true: timed_out  # I don't know why this is not working. It works in local ad-hoc manual tests.
  #                         I tried setting invalid timeout values and they seem to be getting parsed
  #                         but you can see in the logs that the search timeout value is not exceeded
  #                         when being run in this test, which is not true for my local manual tests.
