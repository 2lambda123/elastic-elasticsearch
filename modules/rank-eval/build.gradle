/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */
apply plugin: 'elasticsearch.legacy-yaml-rest-test'
apply plugin: 'elasticsearch.legacy-yaml-rest-compat-test'
apply plugin: 'elasticsearch.internal-cluster-test'

esplugin {
  description 'The Rank Eval module adds APIs to evaluate ranking quality.'
  classname 'org.elasticsearch.index.rankeval.RankEvalPlugin'
}

restResources {
  restApi {
    include '_common', 'indices', 'index', 'rank_eval'
  }
}

testClusters.configureEach {
  // Modules who's integration is explicitly tested in integration tests
  module ':modules:lang-mustache'
}
tasks.named("transportTestExistCheck").configure { task ->
  task.skipTest("org/elasticsearch/index/rankeval/PrecisionAtK","missing test")
  task.skipTest("org/elasticsearch/index/rankeval/MeanReciprocalRank","missing test")
  task.skipTest("org/elasticsearch/index/rankeval/ExpectedReciprocalRank","missing test")
  task.skipTest("org/elasticsearch/index/rankeval/PrecisionAtK\$Detail","missing test")
  task.skipTest("org/elasticsearch/index/rankeval/RankEvalResponse","missing test")
  task.skipTest("org/elasticsearch/index/rankeval/DiscountedCumulativeGain\$Detail","missing test")
  task.skipTest("org/elasticsearch/index/rankeval/RecallAtK\$Detail","missing test")
  task.skipTest("org/elasticsearch/index/rankeval/DiscountedCumulativeGain","missing test")
  task.skipTest("org/elasticsearch/index/rankeval/RecallAtK","missing test")
  task.skipTest("org/elasticsearch/index/rankeval/ExpectedReciprocalRank\$Detail","missing test")
  task.skipTest("org/elasticsearch/index/rankeval/MeanReciprocalRank\$Detail","missing test")
}
