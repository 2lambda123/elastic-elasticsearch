setup:
  - do:
      indices.create:
          index: test_1
          body:
            settings:
              number_of_replicas: 0
            mappings:
              properties:
                int_field:
                   type : integer
                double_field:
                   type : double
                string_field:
                   type: keyword

  - do:
       bulk:
         refresh: true
         body:
           - index:
               _index: test_1
               _id:    "1"
           - int_field: 1
             double_field: 1.0
             string_field: foo
           - index:
               _index: test_1
               _id:    "2"
           - int_field: 51
             double_field: 51.0
             string_field: foo
           - index:
               _index: test_1
               _id:    "3"
           - int_field: 101
             double_field: 101.0
             string_field: foo
           - index:
               _index: test_1
               _id:    "4"
           - int_field: 151
             double_field: 151.0
             string_field: foo

  - do:
      indices.create:
        index: test_2
        body:
          settings:
            number_of_replicas: 0
          mappings:
            properties:
              other_field:
                type: keyword

  - do:
      bulk:
        refresh: true
        body:
          - index:
              _index: test_2
              _id:    "1"
          - other_field: "other value"
---
"Basic test":

  - do:
      search:
        index: test_1
        rest_total_hits_as_int: true
        body:
          aggs:
            the_int_avg:
              avg:
                field: int_field
            the_double_avg:
              avg:
                field: double_field

  - match: { hits.total: 4 }
  - length: { hits.hits: 4 }
  - match: { aggregations.the_int_avg.value: 76.0 }
  - match: { aggregations.the_double_avg.value: 76.0 }

---
"Only aggs test":

  - do:
      search:
        index: test_1
        rest_total_hits_as_int: true
        body:
          size: 0
          aggs:
            the_int_avg:
              avg:
                field: int_field
            the_double_avg:
              avg:
                field: double_field

  - match: { hits.total: 4 }
  - length: { hits.hits: 0 }
  - match: { aggregations.the_int_avg.value: 76.0 }
  - match: { aggregations.the_double_avg.value: 76.0 }

---
"Filtered test":

  - do:
      search:
        index: test_1
        rest_total_hits_as_int: true
        body:
          query:
            constant_score:
              filter:
                range:
                  int_field:
                    gte: 50
          aggs:
            the_int_avg:
              avg:
                field: int_field
            the_double_avg:
              avg:
                field: double_field

  - match: { hits.total: 3 }
  - length: { hits.hits: 3 }
  - match: { aggregations.the_int_avg.value: 101.0 }
  - match: { aggregations.the_double_avg.value: 101.0 }


---
"Missing field with missing param":

  - do:
      search:
        index: test_1
        rest_total_hits_as_int: true
        body:
          aggs:
            the_missing_avg:
              avg:
                field: foo
                missing: 1

  - match: { hits.total: 4 }
  - length: { hits.hits: 4 }
  - match: { aggregations.the_missing_avg.value: 1 }

---
"Missing field without missing param":

  - do:
      search:
        index: test_1
        rest_total_hits_as_int: true
        body:
          aggs:
            the_missing_avg:
              avg:
                field: foo

  - match: { hits.total: 4 }
  - length: { hits.hits: 4 }
  - is_false: aggregations.the_missing_avg.value

---
"Metadata test":

  - do:
      search:
        index: test_1
        rest_total_hits_as_int: true
        body:
          aggs:
            the_int_avg:
              meta:
                foo: bar
              avg:
                field: int_field

  - match: { hits.total: 4 }
  - length: { hits.hits: 4 }
  - match: { aggregations.the_int_avg.value: 76.0 }
  - match: { aggregations.the_int_avg.meta.foo: "bar" }

---
"Aggregating wrong datatype test":

  - do:
      catch: bad_request
      search:
        index: test_1
        rest_total_hits_as_int: true
        body:
          aggs:
            the_string_avg:
              avg:
                field: string_field

---
"Partially unmapped":

  - do:
      search:
        index: test_1,test_2
        rest_total_hits_as_int: true
        body:
          aggs:
            the_int_avg:
              avg:
                field: int_field

  - match: { hits.total: 5 }
  - length: { hits.hits: 5 }
  - match: { aggregations.the_int_avg.value: 76.0 }

---
"Partially unmapped with missing":

  - do:
      search:
        index: test_1,test_2
        rest_total_hits_as_int: true
        body:
          aggs:
            the_int_avg:
              avg:
                field: int_field
                missing: 10

  - match: { hits.total: 5 }
  - length: { hits.hits: 5 }
  - match: { aggregations.the_int_avg.value: 62.8 }

---
"Counter field":
  - skip:
      version: " - 8.6.99"
      reason: "counter field support added in 8.7"

  - do:
      indices.create:
        index: myindex
        body:
          settings:
            index:
              mode: time_series
              routing_path: [ metricset ]
              time_series:
                start_time: 2000-01-01T00:00:00Z
                end_time: 2099-12-31T23:59:59Z
          mappings:
            properties:
              metricset:
                type: keyword
                time_series_dimension: true
              counter_field:
                type : long
                time_series_metric: counter
  - do:
      catch: /Field \[counter_field\] of type \[long\]\[counter\] is not supported for aggregation \[avg\]/
      search:
        rest_total_hits_as_int: true
        index: myindex
        body:
          aggs:
            the_counter_avg:
              avg:
                field: counter_field
