/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */
apply plugin: 'elasticsearch.yaml-rest-test'
apply plugin: 'elasticsearch.internal-cluster-test'

esplugin {
  description 'Module for ingest processors that do not require additional security permissions or have large dependencies and resources'
  classname 'org.elasticsearch.ingest.common.IngestCommonPlugin'
  extendedPlugins = ['lang-painless']
}

dependencies {
  compileOnly project(':modules:lang-painless')
  api project(':libs:elasticsearch-grok')
  api project(':libs:elasticsearch-dissect')
  api "org.apache.httpcomponents:httpclient:${versions.httpclient}"
  api "org.apache.httpcomponents:httpcore:${versions.httpcore}"
  api "commons-logging:commons-logging:${versions.commonslogging}"
  api "commons-codec:commons-codec:${versions.commonscodec}"
  api "org.apache.logging.log4j:log4j-1.2-api:${versions.log4j}"
}

restResources {
  restApi {
    includeCore '_common', 'ingest', 'cluster', 'indices', 'index', 'bulk', 'nodes', 'get', 'update', 'cat', 'mget'
  }
}

testClusters.all {
  // Needed in order to test ingest pipeline templating:
  // (this is because the integTest node is not using default distribution, but only the minimal number of required modules)
  module ':modules:lang-mustache'
}

tasks.named("thirdPartyAudit").configure {
  ignoreMissingClasses(
    //commons-logging optional dependencies
    'javax.servlet.ServletContextEvent',
    'javax.servlet.ServletContextListener',
    'org.apache.avalon.framework.logger.Logger',
    'org.apache.log.Hierarchy',
    'org.apache.log.Logger',
  )
}
