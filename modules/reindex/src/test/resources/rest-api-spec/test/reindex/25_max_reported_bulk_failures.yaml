---
"max_reported_bulk_failures limits number of returned failures":
  - do:
      index:
        index:   source
        type:    foo
        id:      1
        body:    { "text": "test" }
  - do:
      index:
        index:   dest
        type:    foo
        id:      1
        body:    { "text": "test" }
  - do:
      index:
        index:   source
        type:    foo
        id:      2
        body:    { "text": "test" }
  - do:
      index:
        index:   dest
        type:    foo
        id:      2
        body:    { "text": "test" }
  - do:
      indices.refresh: {}


  - do:
      catch: conflict
      reindex:
        max_reported_bulk_failures: 1
        body:
          source:
            index: source
          dest:
            index: dest
            op_type: create
  - length: {failures: 1}
  - match: {failures.0.index:  dest}
  - match: {failures.0.type:   foo}
  - match: {failures.0.id:     /\d+/}
  - match: {failures.0.status: 409}
  - match: {failures.0.cause.type:   version_conflict_engine_exception}
  # Use a regex so we don't mind if the version isn't always 1. Sometimes it comes out 2.
  - match: {failures.0.cause.reason: "/\\[foo\\]\\[\\d+\\]:.version.conflict,.document.already.exists.\\(current.version.\\[\\d+\\]\\)/"}
  - match: {failures.0.cause.shard:  /\d+/}
  - match: {failures.0.cause.index:  dest}

---
"max_reported_bulk_failures=-1 means all failures":
  - do:
      index:
        index:   source
        type:    foo
        id:      1
        body:    { "text": "test" }
  - do:
      index:
        index:   dest
        type:    foo
        id:      1
        body:    { "text": "test" }
  - do:
      index:
        index:   source
        type:    foo
        id:      2
        body:    { "text": "test" }
  - do:
      index:
        index:   dest
        type:    foo
        id:      2
        body:    { "text": "test" }
  - do:
      indices.refresh: {}


  - do:
      catch: conflict
      reindex:
        max_reported_bulk_failures: -1
        body:
          source:
            index: source
          dest:
            index: dest
            op_type: create
  - length: {failures: 2}
  - match: {failures.0.index:  dest}
  - match: {failures.0.type:   foo}
  - match: {failures.0.id:     /\d+/}
  - match: {failures.0.status: 409}
  - match: {failures.0.cause.type:   version_conflict_engine_exception}
  # Use a regex so we don't mind if the version isn't always 1. Sometimes it comes out 2.
  - match: {failures.0.cause.reason: "/\\[foo\\]\\[\\d+\\]:.version.conflict,.document.already.exists.\\(current.version.\\[\\d+\\]\\)/"}
  - match: {failures.0.cause.shard:  /\d+/}
  - match: {failures.0.cause.index:  dest}
  - match: {failures.1.index:  dest}
  - match: {failures.1.type:   foo}
  - match: {failures.1.id:     /\d+/}
  - match: {failures.1.status: 409}
  - match: {failures.1.cause.type:   version_conflict_engine_exception}
  # Use a regex so we don't mind if the version isn't always 1. Sometimes it comes out 2.
  - match: {failures.1.cause.reason: "/\\[foo\\]\\[\\d+\\]:.version.conflict,.document.already.exists.\\(current.version.\\[\\d+\\]\\)/"}
  - match: {failures.1.cause.shard:  /\d+/}
  - match: {failures.1.cause.index:  dest}
