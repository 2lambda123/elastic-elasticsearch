/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import org.elasticsearch.gradle.precommit.PrecommitTasks

apply plugin: 'elasticsearch.build'
apply plugin: 'nebula.maven-base-publish'
apply plugin: 'nebula.maven-scm'

targetCompatibility = JavaVersion.VERSION_1_8
sourceCompatibility = JavaVersion.VERSION_1_8

group = 'org.elasticsearch.client'
archivesBaseName = 'elasticsearch-nio'

publishing {
  publications {
    nebula {
      artifactId = archivesBaseName
    }
  }
}

dependencies {
  compile "org.apache.logging.log4j:log4j-api:${versions.log4j}"

  testCompile "org.elasticsearch.test:framework:${version}"
  testCompile "com.carrotsearch.randomizedtesting:randomizedtesting-runner:${versions.randomizedrunner}"
  testCompile "junit:junit:${versions.junit}"
  testCompile "org.hamcrest:hamcrest-all:${versions.hamcrest}"
//  testCompile "org.elasticsearch:securemock:${versions.securemock}"
//  testCompile "org.elasticsearch:mocksocket:${versions.mocksocket}"
}

forbiddenApisMain {
  //client does not depend on core, so only jdk and http signatures should be checked
  signaturesURLs = [PrecommitTasks.getResource('/forbidden/jdk-signatures.txt'),
                    PrecommitTasks.getResource('/forbidden/http-signatures.txt')]
}

forbiddenApisTest {
  //we are using jdk-internal instead of jdk-non-portable to allow for com.sun.net.httpserver.* usage
  bundledSignatures -= 'jdk-non-portable'
  bundledSignatures += 'jdk-internal'
  //client does not depend on core, so only jdk signatures should be checked
  signaturesURLs = [PrecommitTasks.getResource('/forbidden/jdk-signatures.txt'),
                    PrecommitTasks.getResource('/forbidden/http-signatures.txt')]
}

//JarHell is part of es core, which we don't want to pull in
jarHell.enabled=false

namingConventions {
  //we don't have integration tests
  skipIntegTestInDisguise = true
}

thirdPartyAudit.excludes = [
]
