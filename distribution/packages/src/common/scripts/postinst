#
# This script is executed in the post-installation phase
#
#   On Debian,
#       $1=configure : is set to 'configure' and if $2 is set, it is an upgrade
#
#   On RedHat,
#       $1=0         : indicates a removal
#       $1=1         : indicates an upgrade

# source the default env file
if [ -f "@path.env@" ]; then
    . "@path.env@"
fi

export ES_PATH_CONF=${ES_PATH_CONF:-@path.conf@}
export ES_HOME=/usr/share/elasticsearh

IS_UPGRADE=false

case "$1" in

    # Debian ####################################################
    configure)

        # If $1=configure and $2 is set, this is an upgrade
        if [ -n "$2" ]; then
            IS_UPGRADE=true
        fi
        PACKAGE=deb
    ;;
    abort-upgrade|abort-remove|abort-deconfigure)
        PACKAGE=deb
    ;;

    # RedHat ####################################################
    1)
        # If $1=1 this is an install
        IS_UPGRADE=false
        PACKAGE=rpm
    ;;
    2)
        # If $1=1 this is an upgrade
        IS_UPGRADE=true
        PACKAGE=rpm
    ;;

    *)
        echo "post install script called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac
# to pick up /usr/lib/sysctl.d/elasticsearch.conf
if command -v systemctl > /dev/null; then
    systemctl restart systemd-sysctl.service || true
fi

if [ "x$IS_UPGRADE" != "xtrue" ]; then
    # Auto-configure security, this seems to be an installation
    ES_MAIN_CLASS=org.elasticsearch.xpack.security.cli.ConfigInitialNode \
    ES_ADDITIONAL_SOURCES="x-pack-env;x-pack-security-env" \
    ES_ADDITIONAL_CLASSPATH_DIRECTORIES=lib/tools/security-cli \
    /usr/share/elasticsearch/bin/elasticsearch-cli -strict <<< ""
    chmod 660 "${ES_PATH_CONF}"/elasticsearch.keystore
    if [ $? -eq 0 ]; then
        INITIAL_PASSWORD=$(ES_MAIN_CLASS=org.elasticsearch.xpack.security.enrollment.tool.AutoConfigGenerateElasticPasswordHash \
        ES_ADDITIONAL_SOURCES="x-pack-env;x-pack-security-env" \
        ES_ADDITIONAL_CLASSPATH_DIRECTORIES=lib/tools/security-cli \
        /usr/share/elasticsearch/bin/elasticsearch-cli)
        if [ $? -eq 0 ]; then
            echo "##########                 Security autoconfiguration information                ############"
            echo "#                                                                                           #"
            echo "# The password of the elastic superuser will be set to: ${INITIAL_PASSWORD}                #"
            echo "# upon starting elasticsearch for the first time                                            #"
            echo "#                                                                                           #"
            echo "#                                                                                           #"
            echo "#############################################################################################"
        else
            echo "##########                 Security autoconfiguration information                ############"
            echo "#                                                                                           #"
            echo "# Failed to auto-configure the password for the elastic user upon installation              #"
            echo "# You can use elasticsearch-reset-elastic-password to set a password for the elastic user   #"
            echo "#                                                                                           #"
            echo "#############################################################################################"
        fi
    else
        echo "##########                 Security autoconfiguration information                ############"
        echo "#                                                                                           #"
        echo "# Failed to auto-configure security. Authentication and Authorization is enabled            #"
        echo "# You can use elasticsearch-reset-elastic-password to set a password for the elastic user   #"
        echo "#                                                                                           #"
        echo "# See <link_here> for instructions on how to configure TLS manually                         #"
        echo "#############################################################################################"
    fi
    if command -v systemctl >/dev/null; then
        echo "### NOT starting on installation, please execute the following statements to configure elasticsearch service to start automatically using systemd"
        echo " sudo systemctl daemon-reload"
        echo " sudo systemctl enable elasticsearch.service"
        echo "### You can start elasticsearch service by executing"
        echo " sudo systemctl start elasticsearch.service"
    fi

elif [ "$RESTART_ON_UPGRADE" = "true" ]; then

    echo -n "Restarting elasticsearch service..."
    if command -v systemctl >/dev/null; then
        systemctl daemon-reload
        systemctl restart elasticsearch.service || true
    fi
    echo " OK"
fi

# the equivalent code for rpm is in posttrans
if [ "$PACKAGE" = "deb" ]; then
    if [ ! -f "${ES_PATH_CONF}"/elasticsearch.keystore ]; then
        /usr/share/elasticsearch/bin/elasticsearch-keystore create
        chown root:elasticsearch "${ES_PATH_CONF}"/elasticsearch.keystore
        chmod 660 "${ES_PATH_CONF}"/elasticsearch.keystore
    else
        if /usr/share/elasticsearch/bin/elasticsearch-keystore has-passwd --silent ; then
          echo "### Warning: unable to upgrade encrypted keystore" 1>&2
          echo " Please run elasticsearch-keystore upgrade and enter password" 1>&2
        else
          /usr/share/elasticsearch/bin/elasticsearch-keystore upgrade
        fi
    fi
fi

@scripts.footer@
