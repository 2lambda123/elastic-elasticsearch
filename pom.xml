<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <groupId>org.elasticsearch</groupId>
        <artifactId>elasticsearch-parent</artifactId>
        <version>2.0.0-SNAPSHOT</version>
    </parent>

    <name>elasticsearch</name>
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.elasticsearch</groupId>
    <artifactId>elasticsearch</artifactId>
    <version>2.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <description>Elasticsearch - Open Source, Distributed, RESTful Search Engine</description>
    <inceptionYear>2009</inceptionYear>
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git@github.com:elasticsearch/elasticsearch.git</connection>
        <developerConnection>scm:git:git@github.com:elasticsearch/elasticsearch.git</developerConnection>
        <url>http://github.com/elasticsearch/elasticsearch</url>
    </scm>

    <properties>
        <!-- We inherit from common project properties but we can still force our settings -->
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
        </dependency>
        <dependency>
            <groupId>com.carrotsearch.randomizedtesting</groupId>
            <artifactId>randomizedtesting-runner</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-test-framework</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.jimfs</groupId>
            <artifactId>jimfs</artifactId>
            <version>1.0</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-backward-codecs</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-analyzers-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-queries</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-memory</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-highlighter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-queryparser</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-suggest</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-join</artifactId>
        </dependency>
        <!-- Lucene spatial, make sure when upgrading to work with latest version of jts/spatial4j dependencies -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-spatial</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-expressions</artifactId>
        </dependency>
        <dependency>
            <groupId>com.spatial4j</groupId>
            <artifactId>spatial4j</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vividsolutions</groupId>
            <artifactId>jts</artifactId>
        </dependency>
        <!-- needed for templating -->
        <dependency>
            <groupId>com.github.spullara.mustache.java</groupId>
            <artifactId>compiler</artifactId>
        </dependency>
        <!-- Lucene spatial -->


        <!-- START: dependencies that are shaded -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <dependency>
            <groupId>com.carrotsearch</groupId>
            <artifactId>hppc</artifactId>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
        </dependency>
        <dependency>
            <groupId>org.joda</groupId>
            <artifactId>joda-convert</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-smile</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-cbor</artifactId>
        </dependency>

        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty</artifactId>
        </dependency>

        <dependency>
            <groupId>com.ning</groupId>
            <artifactId>compress-lzf</artifactId>
        </dependency>

        <dependency>
            <groupId>com.tdunning</groupId>
            <artifactId>t-digest</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
        </dependency>

        <!-- END: dependencies that are shaded -->

        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <classifier>indy</classifier>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>apache-log4j-extras</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
        </dependency>

        <dependency>
            <groupId>org.fusesource</groupId>
            <artifactId>sigar</artifactId>
        </dependency>

        <!-- We don't use this since the publish pom is then messed up -->
        <!--
        <dependency>
            <groupId>sigar</groupId>
            <artifactId>sigar</artifactId>
            <version>1.6.4</version>
            <scope>system</scope>
            <systemPath>${basedir}/lib/sigar/sigar-1.6.4.jar</systemPath>
            <optional>true</optional>
        </dependency>
        -->
    </dependencies>

    <build>

        <resources>
            <resource>
                <directory>${basedir}/src/main/java</directory>
                <includes>
                    <include>**/*.json</include>
                    <include>**/*.yml</include>
                </includes>
            </resource>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>

        <testResources>
            <testResource>
                <directory>${basedir}/src/test/java</directory>
                <includes>
                    <include>**/*.json</include>
                    <include>**/*.yml</include>
                    <include>**/*.txt</include>
                    <include>**/*.properties</include>
                </includes>
                <filtering>true</filtering>
            </testResource>
            <testResource>
                <directory>${basedir}/src/test/java</directory>
                <includes>
                    <include>**/*.gz</include>
                </includes>
            </testResource>
            <testResource>
                <directory>${basedir}/src/test/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
            </testResource>
            <testResource>
                <directory>${basedir}/rest-api-spec</directory>
                <targetPath>rest-api-spec</targetPath>
                <includes>
                    <include>api/*.json</include>
                    <include>test/**/*.yaml</include>
                </includes>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.carrotsearch.randomizedtesting</groupId>
                <artifactId>junit4-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo>Using ${java.runtime.name} ${java.runtime.version} ${java.vendor}</echo>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>invalid-patterns</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target unless="${validate.skip}">
                                <pathconvert pathsep="${line.separator}" dirsep="/" property="validate.patternsFound" setonempty="false">
                                    <fileset dir="${basedir}">
                                        <include name="**/*.java"/>
                                        <include name="**/*.py"/>
                                        <include name="**/*.txt"/>
                                        <include name="**/*.xml"/>
                                        <include name="**/*.rb"/>
                                        <include name="**/*.pl"/>
                                        <exclude name="**/org/elasticsearch/cluster/routing/shard_routes.txt"/>
                                        <exclude name="target/**/*"/>
                                        <exclude name=".metadata/**/*"/>
                                        <or>
                                            <containsregexp expression="\bno(n|)commit\b" casesensitive="no"/>
                                            <containsregexp expression="\t" casesensitive="no"/>
                                        </or>
                                    </fileset>
                                    <map from="${basedir}${file.separator}" to="* "/>
                                </pathconvert>
                                <fail if="validate.patternsFound">The following files contain tabs or
                                    nocommits:${line.separator}${validate.patternsFound}
                                </fail>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <phase>generate-test-resources</phase>
                        <id>create-heapdump-directory</id>
                        <configuration>
                            <tasks>
                                <echo message="Creating heapdump directory"/>
                                <mkdir dir="${tests.heapdump.path}"/>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>tests</id>
                        <phase>test</phase>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <!-- don't run if we skip the tests -->
                            <failOnError>false</failOnError>
                            <target>
                                <property name="runtime_classpath" refid="maven.runtime.classpath"/>
                                <property name="test_classpath" refid="maven.test.classpath"/>
                                <property name="plugin_classpath" refid="maven.plugin.classpath"/>
                                <taskdef resource="com/carrotsearch/junit4/antlib.xml">
                                    <classpath>
                                        <pathelement path="${plugin_classpath}"/>
                                        <pathelement path="${runtime_classpath}"/>
                                        <pathelement path="${test_classpath}"/>
                                    </classpath>
                                </taskdef>
                                <tophints max="${tests.topn}">
                                    <file file="${basedir}/${execution.hint.file}"/>
                                </tophints>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- we skip surefire to work with randomized testing above -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>attach-test-sources</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>org/elasticsearch/test/**/*</include>
                                <include>org/apache/lucene/util/AbstractRandomizedTest.java</include>
                            </includes>
                            <excludes>
                                <!-- unit tests for yaml suite parser & rest spec parser need to be excluded -->
                                <exclude>org/elasticsearch/test/rest/test/**/*</exclude>
                                <!-- unit tests for test framework classes-->
                                <exclude>org/elasticsearch/test/test/**/*</exclude>
                            </excludes>
                            <!-- Resources are large and not really helpful as "test sources". -->
                            <excludeResources>true</excludeResources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <shadeTestJar>true</shadeTestJar>
                    <minimizeJar>true</minimizeJar>
                    <promoteTransitiveDependencies>true</promoteTransitiveDependencies>
                    <artifactSet>
                        <includes>
                            <include>com.google.guava:guava</include>
                            <include>com.carrotsearch:hppc</include>
                            <include>com.fasterxml.jackson.core:jackson-core</include>
                            <include>com.fasterxml.jackson.dataformat:jackson-dataformat-smile</include>
                            <include>com.fasterxml.jackson.dataformat:jackson-dataformat-yaml</include>
                            <include>com.fasterxml.jackson.dataformat:jackson-dataformat-cbor</include>
                            <include>joda-time:joda-time</include>
                            <include>org.joda:joda-convert</include>
                            <include>io.netty:netty</include>
                            <include>com.ning:compress-lzf</include>
                            <include>com.github.spullara.mustache.java:compiler</include>
                            <include>com.tdunning:t-digest</include>
                            <include>org.apache.commons:commons-lang3</include>
                            <include>commons-cli:commons-cli</include>
                        </includes>
                    </artifactSet>
                    <relocations>
                        <relocation>
                            <pattern>com.google.common</pattern>
                            <shadedPattern>org.elasticsearch.common</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>com.carrotsearch.hppc</pattern>
                            <shadedPattern>org.elasticsearch.common.hppc</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>jsr166e</pattern>
                            <shadedPattern>org.elasticsearch.common.util.concurrent.jsr166e</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>com.fasterxml.jackson</pattern>
                            <shadedPattern>org.elasticsearch.common.jackson</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>org.joda.time</pattern>
                            <shadedPattern>org.elasticsearch.common.joda.time</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>org.jboss.netty</pattern>
                            <shadedPattern>org.elasticsearch.common.netty</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>com.ning.compress</pattern>
                            <shadedPattern>org.elasticsearch.common.compress</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>com.github.mustachejava</pattern>
                            <shadedPattern>org.elasticsearch.common.mustache</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>com.tdunning.math.stats</pattern>
                            <shadedPattern>org.elasticsearch.common.stats</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>org.apache.commons.lang</pattern>
                            <shadedPattern>org.elasticsearch.common.lang</shadedPattern>
                        </relocation>
                        <relocation>
                            <pattern>org.apache.commons.cli</pattern>
                            <shadedPattern>org.elasticsearch.common.cli.commons</shadedPattern>
                        </relocation>
                    </relocations>
                    <filters>
                        <filter>
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/license/**</exclude>
                                <exclude>META-INF/*</exclude>
                                <exclude>META-INF/maven/**</exclude>
                                <exclude>LICENSE</exclude>
                                <exclude>NOTICE</exclude>
                                <exclude>/*.txt</exclude>
                                <exclude>build.properties</exclude>
                            </excludes>
                        </filter>
                        <filter>
                            <artifact>io.netty:netty</artifact>
                            <includes>
                                <include>org/jboss/netty/**</include>
                            </includes>
                        </filter>
                    </filters>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/bin</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/bin</directory>
                                    <filtering>true</filtering>
                                    <excludes>
                                        <exclude>*.exe</exclude>
                                    </excludes>
                                </resource>
                                <resource>
                                    <directory>${basedir}/bin</directory>
                                    <filtering>false</filtering>
                                    <includes>
                                        <include>*.exe</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <outputDirectory>${project.build.directory}/releases/</outputDirectory>
                    <descriptors>
                        <descriptor>${basedir}/src/main/assemblies/targz-bin.xml</descriptor>
                        <descriptor>${basedir}/src/main/assemblies/zip-bin.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- some infos https://github.com/tcurdt/jdeb/blob/master/docs/maven.md -->
                <groupId>org.vafer</groupId>
                <artifactId>jdeb</artifactId>
                <configuration>
                    <deb>${project.build.directory}/releases/${project.artifactId}-${elasticsearch.version}.deb</deb>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jdeb</goal>
                        </goals>
                        <configuration>
                            <dataSet>
                                <data>
                                    <src>${project.basedir}/</src>
                                    <includes>*.txt, *.textile</includes>
                                    <excludes>LICENSE.txt, .DS_Store</excludes>
                                    <type>directory</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/share/elasticsearch</prefix>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <data>
                                    <!-- use the filtered one from the resources plugin -->
                                    <src>${project.build.directory}/bin</src>
                                    <type>directory</type>
                                    <excludes>*.bat, .DS_Store, *.exe</excludes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/share/elasticsearch/bin</prefix>
                                        <filemode>755</filemode>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.build.directory}/</src>
                                    <includes>${project.build.finalName}.jar</includes>
                                    <type>directory</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/share/elasticsearch/lib</prefix>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.basedir}/lib/sigar/</src>
                                    <includes>sigar-*.jar, libsigar-*-linux.*</includes>
                                    <type>directory</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/share/elasticsearch/lib/sigar</prefix>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.build.directory}/lib</src>
                                    <includes>lucene*, *log4j*, jna*, spatial4j*, jts*, groovy*, antlr-runtime*, asm*</includes>
                                    <type>directory</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/share/elasticsearch/lib</prefix>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.basedir}/src/deb/default/</src>
                                    <type>directory</type>
                                    <excludes>.DS_Store</excludes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/etc/default</prefix>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.basedir}/src/deb/init.d/</src>
                                    <type>directory</type>
                                    <excludes>.DS_Store</excludes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/etc/init.d</prefix>
                                        <filemode>755</filemode>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.basedir}/src/deb/systemd/elasticsearch.service</src>
                                    <dst>/usr/lib/systemd/system/elasticsearch.service</dst>
                                    <type>file</type>
                                </data>
                                <data>
                                    <src>${project.basedir}/config</src>
                                    <type>directory</type>
                                    <excludes>.DS_Store</excludes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/etc/elasticsearch</prefix>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.basedir}/src/deb/lintian</src>
                                    <type>directory</type>
                                    <excludes>.DS_Store</excludes>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/share/lintian/overrides</prefix>
                                        <user>root</user>
                                        <group>root</group>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.basedir}/src/deb/copyright</src>
                                    <dst>/usr/share/doc/elasticsearch/copyright</dst>
                                    <type>file</type>
                                </data>
                            </dataSet>

                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <configuration>
                    <copyright>2013, Elasticsearch</copyright>
                    <distribution>Elasticsearch</distribution>
                    <group>Application/Internet</group>
                    <packager>Elasticsearch</packager>
                    <prefix>/usr</prefix>
                    <changelogFile>src/changelog</changelogFile>
                    <defineStatements>
                        <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
                        <defineStatement>_binaries_in_noarch_packages_terminate_build 0</defineStatement>
                    </defineStatements>
                    <defaultFilemode>644</defaultFilemode>
                    <defaultDirmode>755</defaultDirmode>
                    <defaultUsername>root</defaultUsername>
                    <defaultGroupname>root</defaultGroupname>
                    <mappings>
                        <mapping>
                            <directory>/etc/elasticsearch/</directory>
                            <configuration>noreplace</configuration>
                            <sources>
                                <source>
                                    <location>config/</location>
                                    <includes>
                                        <include>*.yml</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/etc/sysconfig/</directory>
                            <configuration>noreplace</configuration>
                            <sources>
                                <source>
                                    <location>src/rpm/sysconfig</location>
                                    <includes>
                                        <include>elasticsearch</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/etc/rc.d/init.d/</directory>
                            <filemode>755</filemode>
                            <configuration>true</configuration>
                            <sources>
                                <source>
                                    <location>src/rpm/init.d/elasticsearch</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/usr/lib/systemd/system/</directory>
                            <filemode>755</filemode>
                            <configuration>true</configuration>
                            <sources>
                                <source>
                                    <location>src/rpm/systemd</location>
                                    <includes>
                                        <include>elasticsearch.service</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/usr/lib/sysctl.d/</directory>
                            <filemode>755</filemode>
                            <configuration>true</configuration>
                            <sources>
                                <source>
                                    <location>src/rpm/systemd/sysctl.d</location>
                                    <includes>
                                        <include>elasticsearch.conf</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/usr/lib/tmpfiles.d/</directory>
                            <configuration>true</configuration>
                            <sources>
                                <source>
                                    <location>src/rpm/systemd/</location>
                                    <includes>
                                        <include>elasticsearch.conf</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/var/run/elasticsearch/</directory>
                            <filemode>755</filemode>
                            <username>elasticsearch</username>
                            <groupname>elasticsearch</groupname>
                        </mapping>
                        <mapping>
                            <directory>/var/lib/elasticsearch/</directory>
                            <filemode>755</filemode>
                            <username>elasticsearch</username>
                            <groupname>elasticsearch</groupname>
                        </mapping>
                        <mapping>
                            <directory>/var/log/elasticsearch/</directory>
                            <filemode>755</filemode>
                            <username>elasticsearch</username>
                            <groupname>elasticsearch</groupname>
                        </mapping>
                        <mapping>
                            <directory>/usr/share/elasticsearch/bin/</directory>
                            <filemode>755</filemode>
                            <sources>
                                <source>
                                    <location>target/bin</location>
                                    <includes>
                                        <include>elasticsearch</include>
                                        <include>elasticsearch.in.sh</include>
                                        <include>plugin</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/usr/share/elasticsearch/lib</directory>
                            <sources>
                                <source>
                                    <location>target/lib/</location>
                                    <includes>
                                        <include>lucene*</include>
                                        <include>*log4j*</include>
                                        <include>jna*</include>
                                        <include>spatial4j*</include>
                                        <include>jts*</include>
                                        <include>groovy*</include>
                                        <include>antlr-runtime*</include>
                                        <include>asm*</include>
                                    </includes>
                                </source>
                                <source>
                                    <location>${project.build.directory}/</location>
                                    <includes>
                                        <include>${project.build.finalName}.jar</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/usr/share/elasticsearch/lib/sigar</directory>
                            <sources>
                                <source>
                                    <location>lib/sigar</location>
                                    <includes>
                                        <include>sigar*.jar</include>
                                        <include>libsigar-*-linux.*</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/usr/share/elasticsearch/</directory>
                            <sources>
                                <source>
                                    <location>.</location>
                                    <includes>
                                        <include>LICENSE.txt</include>
                                        <include>NOTICE.txt</include>
                                        <include>README.textile</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                    </mappings>
                    <preinstallScriptlet>
                        <scriptFile>src/rpm/scripts/preinstall</scriptFile>
                        <fileEncoding>utf-8</fileEncoding>
                    </preinstallScriptlet>
                    <postinstallScriptlet>
                        <scriptFile>src/rpm/scripts/postinstall</scriptFile>
                        <fileEncoding>utf-8</fileEncoding>
                    </postinstallScriptlet>
                    <preremoveScriptlet>
                        <scriptFile>src/rpm/scripts/preremove</scriptFile>
                        <fileEncoding>utf-8</fileEncoding>
                    </preremoveScriptlet>
                    <postremoveScriptlet>
                        <scriptFile>src/rpm/scripts/postremove</scriptFile>
                        <fileEncoding>utf-8</fileEncoding>
                    </postremoveScriptlet>
                </configuration>
            </plugin>
            <plugin>
                <groupId>de.thetaphi</groupId>
                <artifactId>forbiddenapis</artifactId>
                <executions>
                    <execution>
                        <id>check-forbidden-apis</id>
                        <configuration>
                            <targetVersion>1.7</targetVersion>
                            <!-- disallow undocumented classes like sun.misc.Unsafe: -->
                            <internalRuntimeForbidden>true</internalRuntimeForbidden>
                            <!-- if the used Java version is too new, don't fail, just do nothing: -->
                            <failOnUnsupportedJava>false</failOnUnsupportedJava>
                            <excludes>
                                <exclude>jsr166e/**</exclude>
                                <!-- start excludes for valid system-out -->
                                <exclude>org/elasticsearch/common/logging/log4j/ConsoleAppender*</exclude>
                                <exclude>org/elasticsearch/common/http/client/HttpDownloadHelper*</exclude>
                                <exclude>org/elasticsearch/common/cli/Terminal*</exclude>
                                <exclude>org/elasticsearch/plugins/PluginManager$SysOut.class</exclude>
                                <exclude>org/elasticsearch/common/http/client/HttpDownloadHelper.class</exclude>
                                <exclude>org/elasticsearch/bootstrap/Bootstrap.class</exclude>
                                <exclude>org/elasticsearch/Version.class</exclude>
                                <exclude>org/elasticsearch/common/lucene/search/Queries$QueryWrapperFilterFactory.class</exclude>
                                <!-- end excludes for valid system-out -->
                                <!-- start excludes for Math.abs -->
                                <exclude>org/elasticsearch/common/util/MathUtils.class</exclude>
                                <exclude>org/elasticsearch/common/math/UnboxedMathUtils.class</exclude>
                                <exclude>org/elasticsearch/cluster/routing/OperationRouting.class</exclude>
                                <!-- end excludes for Math.abs -->
                                <!-- start exclude for FilteredQuery -->
                                <exclude>org/elasticsearch/common/lucene/search/XFilteredQuery.class</exclude>
                                <!-- end exclude for FilteredQuery -->
                                <!-- start exclude for Channels utility class -->
                                <exclude>org/elasticsearch/common/io/Channels.class</exclude>
                                <!-- end exclude for Channels -->
                                <!-- start exclude for Lucene utility class -->
                                <exclude>org/elasticsearch/common/lucene/Lucene$LenientParser.class</exclude>
                                <!-- end exclude for Lucene -->
                                <!-- start exclude for Future utility class -->
                                <exclude>org/elasticsearch/common/util/concurrent/FutureUtils.class</exclude>
                                <!-- end exclude for Future utility class -->
                            </excludes>
                            <bundledSignatures>
                                <!-- This will automatically choose the right signatures based on 'targetVersion': -->
                                <bundledSignature>jdk-unsafe</bundledSignature>
                                <bundledSignature>jdk-deprecated</bundledSignature>
                                <bundledSignature>jdk-system-out</bundledSignature>
                            </bundledSignatures>
                            <signaturesFiles>
                                <signaturesFile>dev-tools/forbidden/core-signatures.txt</signaturesFile>
                                <signaturesFile>dev-tools/forbidden/all-signatures.txt</signaturesFile>
                            </signaturesFiles>
                            <signatures>${forbidden.signatures}</signatures>
                        </configuration>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>check-forbidden-test-apis</id>
                        <configuration>
                            <targetVersion>1.7</targetVersion>
                            <!-- disallow undocumented classes like sun.misc.Unsafe: -->
                            <internalRuntimeForbidden>true</internalRuntimeForbidden>
                            <!-- if the used Java version is too new, don't fail, just do nothing: -->
                            <failOnUnsupportedJava>false</failOnUnsupportedJava>
                            <bundledSignatures>
                                <!-- This will automatically choose the right signatures based on 'targetVersion': -->
                                <bundledSignature>jdk-unsafe</bundledSignature>
                                <bundledSignature>jdk-deprecated</bundledSignature>
                            </bundledSignatures>
                            <excludes>
                                <!-- start exclude for test GC simulation using Thread.suspend -->
                                <exclude>org/elasticsearch/test/disruption/LongGCDisruption.class</exclude>
                                <!-- end exclude for GC simulation  -->
                                <!-- start exclude for java.io.File bridging -->
                                <exclude>org/elasticsearch/test/ExternalNode.class</exclude>
                                <exclude>org/elasticsearch/test/ElasticsearchTestCase.class</exclude>
                                <!-- end exclude for java.io.File bridging -->
                            </excludes>
                            <signaturesFiles>
                                <signaturesFile>dev-tools/forbidden/test-signatures.txt</signaturesFile>
                                <signaturesFile>dev-tools/forbidden/all-signatures.txt</signaturesFile>
                            </signaturesFiles>
                            <signatures>${forbidden.test.signatures}</signatures>
                        </configuration>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCheck</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>org/elasticsearch/test/**/*</include>
                                <include>org/elasticsearch/cache/recycler/MockPageCacheRecycler.class</include>
                                <include>org/apache/lucene/util/AbstractRandomizedTest.class</include>
                                <include>org/apache/lucene/util/AbstractRandomizedTest$*.class</include>
                                <include>org/elasticsearch/common/cli/CliToolTestCase.class</include>
                                <include>org/elasticsearch/common/cli/CliToolTestCase$*.class</include>
                            </includes>
                            <excludes>
                                <!-- unit tests for yaml suite parser & rest spec parser need to be excluded -->
                                <exclude>org/elasticsearch/test/rest/test/**/*</exclude>
                                <!-- unit tests for test framework classes-->
                                <exclude>org/elasticsearch/test/test/**/*</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <!-- Used for parent project when it's a SNAPSHOT version -->
        <repository>
            <id>oss-snapshots</id>
            <name>Sonatype OSS Snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </repository>
    </repositories>

    <profiles>
        <!-- default profile, with randomization setting kicks in -->
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.carrotsearch.randomizedtesting</groupId>
                        <artifactId>junit4-maven-plugin</artifactId>
                        <configuration>
                            <argLine>${tests.jvm.argline}</argLine>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>com.mycila</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <configuration>
                            <header>dev-tools/elasticsearch_license_header.txt</header>
                            <headerDefinitions>
                                <headerDefinition>dev-tools/license_header_definition.xml</headerDefinition>
                            </headerDefinitions>
                            <includes>
                                <include>src/main/java/org/elasticsearch/**/*.java</include>
                                <include>src/test/java/org/elasticsearch/**/*.java</include>
                            </includes>
                            <excludes>
                                <!-- Guice -->
                                <exclude>src/main/java/org/elasticsearch/common/inject/**</exclude>
                                <exclude>src/main/java/org/elasticsearch/common/geo/GeoHashUtils.java</exclude>
                                <exclude>src/main/java/org/elasticsearch/common/lucene/search/XBooleanFilter.java</exclude>
                                <exclude>src/main/java/org/elasticsearch/common/lucene/search/XFilteredQuery.java</exclude>
                                <exclude>src/main/java/org/apache/lucene/queryparser/XSimpleQueryParser.java</exclude>
                                <exclude>src/main/java/org/apache/lucene/**/X*.java</exclude>
                                <!-- t-digest -->
                                <exclude>src/main/java/org/elasticsearch/search/aggregations/metrics/percentiles/tdigest/TDigestState.java</exclude>
                                <exclude>src/test/java/org/elasticsearch/search/aggregations/metrics/GroupTree.java</exclude>
                                <!-- netty pipelining -->
                                <exclude>src/main/java/org/elasticsearch/http/netty/pipelining/**</exclude>
                            </excludes>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>compile</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- profile for development that doesn't check forbidden-apis, no-commit validation or license headers run with mvn -Pdev -->
        <profile>
            <id>dev</id>
            <properties>
                <validate.skip>true</validate.skip>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>de.thetaphi</groupId>
                        <artifactId>forbiddenapis</artifactId>
                        <executions>
                            <execution>
                                <id>check-forbidden-apis</id>
                                <phase>none</phase>
                            </execution>
                            <execution>
                                <id>check-forbidden-test-apis</id>
                                <phase>none</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- license profile, to generate third party license file -->
        <profile>
            <id>license</id>
            <activation>
                <property>
                    <name>license.generation</name>
                    <value>true</value>
                </property>
            </activation>
            <!-- not including license-maven-plugin is sufficient to expose default license -->
        </profile>
        <!-- jacoco coverage profile.  This will insert -jagent -->
        <profile>
            <id>coverage</id>
            <activation>
                <property>
                    <name>tests.coverage</name>
                    <value>true</value>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <!--  must be on the classpath  -->
                    <groupId>org.jacoco</groupId>
                    <artifactId>org.jacoco.agent</artifactId>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>static</id>
            <activation>
                <property>
                    <name>tests.static</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>findbugs-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jxr-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-pmd-plugin</artifactId>
                        <configuration>
                            <rulesets>
                                <ruleset>${basedir}/dev-tools/pmd/custom.xml</ruleset>
                            </rulesets>
                            <targetJdk>1.7</targetJdk>
                            <excludes>
                                <exclude>**/jsr166e/**</exclude>
                                <exclude>**/org/apache/lucene/**</exclude>
                                <exclude>**/org/apache/elasticsearch/common/Base64.java</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>findbugs-maven-plugin</artifactId>
                        <configuration>
                            <xmlOutput>true</xmlOutput>
                            <xmlOutputDirectory>target/site</xmlOutputDirectory>
                            <fork>true</fork>
                            <maxHeap>2048</maxHeap>
                            <timeout>1800000</timeout>
                            <onlyAnalyze>org.elasticsearch.-</onlyAnalyze>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-project-info-reports-plugin</artifactId>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>index</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                </plugins>
            </reporting>
        </profile>
    </profiles>
</project>
