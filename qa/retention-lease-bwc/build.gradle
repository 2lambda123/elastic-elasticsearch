import org.elasticsearch.gradle.Version
import org.elasticsearch.gradle.test.RestIntegTestTask

/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

apply plugin: 'elasticsearch.esplugin'

esplugin {
  description 'add retention lease plugin'
  classname 'org.elasticsearch.retention_lease_bwc.AddRetentionLeasePlugin'
}

integTest.enabled = false

task oldClusterTest(type: RestIntegTestTask) {
  mustRunAfter(precommit)
}

oldClusterTestCluster {
  numNodes = 2
  numBwcNodes = 2
  bwcVersion = Version.fromString("6.6.2-SNAPSHOT")
  setting "cluster.name", "retention-lease-bwc"
}

task newClusterTest(type: RestIntegTestTask) {

}

newClusterTestCluster {
  dependsOn "oldClusterTestCluster#wait"
  numNodes = 1
  plugin ":qa:retention-lease-bwc"
  setting "discovery.zen.ping.unicast.hosts", "\"${-> oldClusterTest.nodes.get(0).transportUri()}\""
  setting "cluster.name", "retention-lease-bwc"
  setting "node.name", "new-node"
}

newClusterTestRunner {
  finalizedBy "oldClusterTestCluster#node0.stop"
  finalizedBy "oldClusterTestCluster#node1.stop"
  finalizedBy "newClusterTestCluster#stop"
}

check.dependsOn newClusterTest
unitTest.enabled = false
