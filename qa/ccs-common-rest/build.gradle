/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */


import org.elasticsearch.gradle.Version
import org.elasticsearch.gradle.internal.test.RestIntegTestTask
import org.elasticsearch.gradle.testclusters.DefaultTestClustersTask


apply plugin: 'elasticsearch.internal-testclusters'
apply plugin: 'elasticsearch.standalone-rest-test'
apply plugin: 'elasticsearch.rest-resources'

restResources {
  restApi {
    include '_common', 'bulk', 'count', 'cluster', 'index', 'indices', 'field_caps', 'msearch',
      'search', 'async_search', 'graph', '*_point_in_time', "info"
  }
  restTests {
    includeCore 'field_caps', 'msearch', 'search', 'suggest'
  }
}

def writeCluster = testClusters.register("ccs-write") {
  numberOfNodes = 2
  setting 'node.roles', '[data,ingest,master]'
}

def searchCluster = testClusters.register("ccs-search") {
  setting 'node.roles', '[data,ingest,master,remote_cluster_client]'
  setting 'cluster.remote.connections_per_cluster', '1'
  setting 'cluster.remote.remote_cluster.seeds',
    { "\"${writeCluster.get().getAllTransportPortURI().get(0)}\"" }
}

testClusters.configureEach {
  setting 'xpack.security.enabled', 'false'
  requiresFeature 'es.index_mode_feature_flag_registered', Version.fromString("8.0.0")
}

tasks.register('startWriteCluster', DefaultTestClustersTask) {
  useCluster writeCluster
  doLast {
    clusters.each { c ->
      print "Writer cluster transport uri for ccs configuration is: "
      println c.getAllTransportPortURI().get(0)
    }
  }
}

tasks.register("ccs-write", RestIntegTestTask) {
  mustRunAfter("precommit")
  dependsOn startWriteCluster

  useCluster writeCluster
  useCluster searchCluster

  systemProperty 'tests.rest.suite',
    [
      'field_caps',
      "msearch",
      'search',
      'search.aggregation',
      'search.highlight',
      'search.inner_hits',
      'suggest',
    ].join(',')

  systemProperty 'tests.rest.blacklist',
    [
      // TODO look into fixing these
      'search/70_response_filtering/Search with response filtering', // makes assertions on "_clusters" section
      'search/150_rewrite_on_coordinator/Ensure that we fetch the document only once', // terms lookup query with index
      'search/170_terms_query/Terms Query with No.of terms exceeding index.max_terms_count should FAIL', // terms lookup query with index
      'search/350_point_in_time/basic', // [indices] cannot be used with point in time
      'search/350_point_in_time/point-in-time with slicing', // [indices] cannot be used with point in time
      'search/350_point_in_time/wildcard', // [indices] cannot be used with point in time
      'search.aggregation/220_filters_bucket/cache busting', // node_selector?
      'search.aggregation/220_filters_bucket/cache hits', // node_selector?
      'search.aggregation/50_filter/Standard queries get cached',
      'search.aggregation/50_filter/Terms lookup gets cached', // terms lookup by "index" doesn't seem to work correctly
      'search.aggregation/70_adjacency_matrix/Terms lookup' // terms lookup by "index" doesn't seem to work correctly
    ].join(',')


  doFirst {
    // Getting the endpoints causes a wait for the cluster
    println "Writer cluster endpoints are: ${-> writeCluster.get().allHttpSocketURI.join(",")}"
    println "Search cluster endpoints are: ${-> searchCluster.get().allHttpSocketURI.join(",")}"
    nonInputProperties.systemProperty('tests.rest.cluster', writeCluster.map(c -> c.allHttpSocketURI.join(",")))
    nonInputProperties.systemProperty('tests.rest.search_cluster', searchCluster.map(c -> c.allHttpSocketURI.join(",")))
  }
}

