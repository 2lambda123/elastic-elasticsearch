/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

plugins {
  id 'groovy'
  id 'application'
  id 'com.github.johnrengelman.shadow' version '2.0.2'
  id 'elasticsearch.build'
  id 'elasticsearch.vagrantsupport'
  id 'elasticsearch.vagrant'
}

dependencies {
  compile localGroovy()
  compile "org.hamcrest:hamcrest-all:${versions.hamcrest}"
  runtime project(':libs:elasticsearch-core') // needs to be on the classpath for JarHell
  packagingTest project(path: project.path, configuration: 'shadow')
}

shadowJar {
  dependencies {
    exclude(project(":libs:elasticsearch-core")) // isn't needed in tests
  }
}

List<String> plugins = []
for (Project subproj : project.rootProject.subprojects) {
  if (subproj.path.startsWith(':plugins:') || subproj.path.equals(':example-plugins:custom-settings')) {
    // add plugin as a dep
    dependencies {
      packaging project(path: "${subproj.path}", configuration: 'zip')
    }
    plugins.add(subproj.name)
  }
}
plugins = plugins.toSorted()

setupPackagingTest {
  doFirst {
    File expectedPlugins = file('build/plugins/expected')
    expectedPlugins.parentFile.mkdirs()
    expectedPlugins.setText(plugins.join('\n'), 'UTF-8')
  }
}

mainClassName = 'org.elasticsearch.packaging.PackagingMain'

tasks.test.enabled = false

tasks.dependencyLicenses.enabled = false
tasks.dependenciesInfo.enabled = false

tasks.thirdPartyAudit.enabled = false

tasks.forbiddenApis.enabled = false
tasks.forbiddenApisMain.enabled = false
tasks.forbiddenApisTest.enabled = false
