---
setup:
  - do:
        indices.create:
          index: test1
          body:
              mappings:
                t:
                  properties:
                    text:
                      type:     text
                    keyword:
                      type:     keyword
                    number:
                      type:     double
                    geo:
                      type:     geo_point
                    object:
                      type: object
                      properties:
                        nested1 :
                          type : text
                          index: false
                        nested2:
                          type: float
                          doc_values: false
  - do:
        indices.create:
          index: test2
          body:
              mappings:
                t:
                  properties:
                    text:
                      type:     text
                    keyword:
                      type:     keyword
                    number:
                      type:     double
                    geo:
                      type:     geo_point
                    object:
                      type: object
                      properties:
                        nested1 :
                          type : text
                          index: false
                        nested2:
                          type: float
                          doc_values: false
  - do:
        indices.create:
          index: test3
          body:
              mappings:
                t:
                  properties:
                    text:
                      type:     text
                    keyword:
                      type:     keyword
                    number:
                      type:     long
                    geo:
                      type:     keyword
                    object:
                      type: object
                      properties:
                        nested1 :
                          type : long
                          index: false
                        nested2:
                          type: keyword
                          doc_values: false

---
"Get expand simple field caps":
  - skip:
      version: " - 5.99.99"
      reason:  geo_point fields don't return min/max for versions greater than 5.2.0

  - do:
      indices.field_caps:
        index: 'test1,test2,test3'
        fields: [text, keyword, number, geo]
        level: indices

  - match: {fields.text.test1.types:                     text}
  - match: {fields.text.test1.searchable:                true}
  - match: {fields.text.test1.aggregatable:              false}
  - match: {fields.keyword.test1.types:                  keyword}
  - match: {fields.keyword.test1.searchable:             true}
  - match: {fields.keyword.test1.aggregatable:           true}
  - match: {fields.number.test1.types:                   double}
  - match: {fields.number.test1.searchable:              true}
  - match: {fields.number.test1.aggregatable:            true}
  - match: {fields.geo.test1.types:                      geo_point}
  - match: {fields.geo.test1.searchable:                 true}
  - match: {fields.geo.test1.aggregatable:               true}
  - match: {fields.text.test2.types:                     text}
  - match: {fields.text.test2.searchable:                true}
  - match: {fields.text.test2.aggregatable:              false}
  - match: {fields.keyword.test2.types:                  keyword}
  - match: {fields.keyword.test2.searchable:             true}
  - match: {fields.keyword.test2.aggregatable:           true}
  - match: {fields.number.test2.types:                   double}
  - match: {fields.number.test2.searchable:              true}
  - match: {fields.number.test2.aggregatable:            true}
  - match: {fields.geo.test1.types:                      geo_point}
  - match: {fields.geo.test2.searchable:                 true}
  - match: {fields.geo.test2.aggregatable:               true}
  - match: {fields.text.test3.types:                     text}
  - match: {fields.text.test3.searchable:                true}
  - match: {fields.text.test3.aggregatable:              false}
  - match: {fields.keyword.test3.types:                  keyword}
  - match: {fields.keyword.test3.searchable:             true}
  - match: {fields.keyword.test3.aggregatable:           true}
  - match: {fields.number.test3.types:                   long}
  - match: {fields.number.test3.searchable:              true}
  - match: {fields.number.test3.aggregatable:            true}
  - match: {fields.geo.test3.types:                      keyword}
  - match: {fields.geo.test3.searchable:                 true}
  - match: {fields.geo.test3.aggregatable:               true}
---
"Get simple field caps":
  - skip:
      version: " - 5.99.99"
      reason:  this uses a new API that has been added in 6.0

  - do:
      indices.field_caps:
        index: 'test1,test2,test3'
        fields: [text, keyword, number, geo]

  - match: {fields.text._all.types:                     text}
  - match: {fields.text._all.searchable:                true}
  - match: {fields.text._all.aggregatable:              false}
  - match: {fields.keyword._all.types:                  keyword}
  - match: {fields.keyword._all.searchable:             true}
  - match: {fields.keyword._all.aggregatable:           true}
  - match: {fields.number._all.types:                   [double, long]}
  - match: {fields.number._all.searchable:              true}
  - match: {fields.number._all.aggregatable:            true}
  - match: {fields.geo._all.types:                      [geo_point, keyword]}
  - match: {fields.geo._all.searchable:                 true}
  - match: {fields.geo._all.aggregatable:               true}
---
"Get expand nested field caps":
  - skip:
      version: " - 5.99.99"
      reason:  this uses a new API that has been added in 6.0

  - do:
      indices.field_caps:
        index: t*
        fields: object*
        level: indices

  - match: {fields.object\.nested1.test1.types:                  text}
  - match: {fields.object\.nested1.test1.searchable:             false}
  - match: {fields.object\.nested1.test1.aggregatable:           false}
  - match: {fields.object\.nested2.test1.types:                  float}
  - match: {fields.object\.nested2.test1.searchable:             true}
  - match: {fields.object\.nested2.test1.aggregatable:           false}
  - match: {fields.object\.nested1.test2.types:                  text}
  - match: {fields.object\.nested1.test2.searchable:             false}
  - match: {fields.object\.nested1.test2.aggregatable:           false}
  - match: {fields.object\.nested2.test2.types:                  float}
  - match: {fields.object\.nested2.test2.searchable:             true}
  - match: {fields.object\.nested2.test2.aggregatable:           false}
  - match: {fields.object\.nested1.test3.types:                  long}
  - match: {fields.object\.nested1.test3.searchable:             false}
  - match: {fields.object\.nested1.test3.aggregatable:           true}
  - match: {fields.object\.nested2.test3.types:                  keyword}
  - match: {fields.object\.nested2.test3.searchable:             true}
  - match: {fields.object\.nested2.test3.aggregatable:           false}
---
"Get nested field caps":
  - skip:
      version: " - 5.99.99"
      reason:  this uses a new API that has been added in 6.0

  - do:
      indices.field_caps:
        index: 'test1,test2,test3'
        fields: object*

  - match: {fields.object\.nested1._all.types:                  [long, text]}
  - match: {fields.object\.nested1._all.searchable:             false}
  - match: {fields.object\.nested1._all.aggregatable:           true}
  - match: {fields.object\.nested2._all.types:                  [float, keyword]}
  - match: {fields.object\.nested2._all.searchable:             true}
  - match: {fields.object\.nested2._all.aggregatable:           false}
---
"Get expand wildcard field caps":
  - skip:
      version: " - 5.99.99"
      reason:  this uses a new API that has been added in 6.0

  - do:
      indices.field_caps:
        index: 'test1,test2,test*'
        fields: "*"
        level: indices

  - match: {fields.text.test1.types:                            text}
  - match: {fields.text.test1.searchable:                       true}
  - match: {fields.text.test1.aggregatable:                     false}
  - match: {fields.keyword.test1.types:                         keyword}
  - match: {fields.keyword.test1.searchable:                    true}
  - match: {fields.keyword.test1.aggregatable:                  true}
  - match: {fields.number.test1.types:                          double}
  - match: {fields.number.test1.searchable:                     true}
  - match: {fields.number.test1.aggregatable:                   true}
  - match: {fields.number.test1.aggregatable:                   true}
  - match: {fields.object\.nested1.test1.types:                 text}
  - match: {fields.object\.nested1.test1.searchable:            false}
  - match: {fields.object\.nested1.test1.aggregatable:          false}
  - match: {fields.object\.nested2.test1.types:                 float}
  - match: {fields.object\.nested2.test1.searchable:            true}
  - match: {fields.object\.nested2.test1.aggregatable:          false}
  - match: {fields.text.test2.types:                            text}
  - match: {fields.text.test2.searchable:                       true}
  - match: {fields.text.test2.aggregatable:                     false}
  - match: {fields.keyword.test2.types:                         keyword}
  - match: {fields.keyword.test2.searchable:                    true}
  - match: {fields.keyword.test2.aggregatable:                  true}
  - match: {fields.number.test2.types:                          double}
  - match: {fields.number.test2.searchable:                     true}
  - match: {fields.number.test2.aggregatable:                   true}
  - match: {fields.object\.nested1.test2.types:                 text}
  - match: {fields.object\.nested1.test2.searchable:            false}
  - match: {fields.object\.nested1.test2.aggregatable:          false}
  - match: {fields.object\.nested2.test2.types:                 float}
  - match: {fields.object\.nested2.test2.searchable:            true}
  - match: {fields.object\.nested2.test2.aggregatable:          false}
  - match: {fields.text.test3.types:                            text}
  - match: {fields.text.test3.searchable:                       true}
  - match: {fields.text.test3.aggregatable:                     false}
  - match: {fields.keyword.test3.types:                         keyword}
  - match: {fields.keyword.test3.searchable:                    true}
  - match: {fields.keyword.test3.aggregatable:                  true}
  - match: {fields.number.test3.types:                          long}
  - match: {fields.number.test3.searchable:                     true}
  - match: {fields.number.test3.aggregatable:                   true}
  - match: {fields.geo.test3.types:                             keyword}
  - match: {fields.geo.test3.searchable:                        true}
  - match: {fields.geo.test3.aggregatable:                      true}
  - match: {fields.object\.nested1.test3.types:                 long}
  - match: {fields.object\.nested1.test3.searchable:            false}
  - match: {fields.object\.nested1.test3.aggregatable:          true}
  - match: {fields.object\.nested2.test3.types:                 keyword}
  - match: {fields.object\.nested2.test3.searchable:            true}
  - match: {fields.object\.nested2.test3.aggregatable:          false}
---
"Get wildcard field caps":
  - skip:
      version: " - 5.99.99"
      reason:  this uses a new API that has been added in 6.0

  - do:
      indices.field_caps:
        index: _all
        fields: "*"
        level: cluster
  - match: {fields.text._all.types:                            text}
  - match: {fields.text._all.searchable:                       true}
  - match: {fields.text._all.aggregatable:                     false}
  - match: {fields.keyword._all.types:                         keyword}
  - match: {fields.keyword._all.searchable:                    true}
  - match: {fields.keyword._all.aggregatable:                  true}
  - match: {fields.number._all.types:                          [double, long]}
  - match: {fields.number._all.searchable:                     true}
  - match: {fields.number._all.aggregatable:                   true}
  - match: {fields.object\.nested1._all.types:                 [long, text]}
  - match: {fields.object\.nested1._all.searchable:            false}
  - match: {fields.object\.nested1._all.aggregatable:          true}
  - match: {fields.object\.nested2._all.types:                 [float, keyword]}
  - match: {fields.object\.nested2._all.searchable:            true}
  - match: {fields.object\.nested2._all.aggregatable:          false}
