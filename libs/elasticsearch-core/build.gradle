import org.elasticsearch.gradle.precommit.PrecommitTasks

/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

apply plugin: 'elasticsearch.build'
apply plugin: 'nebula.optional-base'
apply plugin: 'nebula.maven-base-publish'
apply plugin: 'nebula.maven-scm'

archivesBaseName = 'elasticsearch-core'

publishing {
    publications {
        nebula {
            artifactId = archivesBaseName
        }
    }
}

dependencies {
    compile "org.apache.logging.log4j:log4j-api:${versions.log4j}"
    compile "org.apache.logging.log4j:log4j-core:${versions.log4j}", optional
}

forbiddenApisMain {
    // elasticsearch-core does not depend on server
    // TODO: Need to explore this
    signaturesURLs = [PrecommitTasks.getResource('/forbidden/jdk-signatures.txt')]
}

if (isEclipse) {
    // in eclipse the project is under a fake root, we need to change around the source sets
    sourceSets {
        if (project.path == ":libs:elasticsearch-core") {
            main.java.srcDirs = ['java']
            main.resources.srcDirs = ['resources']
        } else {
            test.java.srcDirs = ['java']
            test.resources.srcDirs = ['resources']
        }
    }
}

thirdPartyAudit.excludes = [
        // classes are missing!
        // from com.fasterxml.jackson.dataformat.yaml.YAMLMapper (jackson-dataformat-yaml)
        'com.fasterxml.jackson.databind.ObjectMapper',

        // from log4j
        'com.conversantmedia.util.concurrent.DisruptorBlockingQueue',
        'com.conversantmedia.util.concurrent.SpinPolicy',
        'com.fasterxml.jackson.annotation.JsonInclude$Include',
        'com.fasterxml.jackson.databind.DeserializationContext',
        'com.fasterxml.jackson.databind.DeserializationFeature',
        'com.fasterxml.jackson.databind.JsonMappingException',
        'com.fasterxml.jackson.databind.JsonNode',
        'com.fasterxml.jackson.databind.Module$SetupContext',
        'com.fasterxml.jackson.databind.ObjectReader',
        'com.fasterxml.jackson.databind.ObjectWriter',
        'com.fasterxml.jackson.databind.SerializerProvider',
        'com.fasterxml.jackson.databind.deser.std.StdDeserializer',
        'com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer',
        'com.fasterxml.jackson.databind.module.SimpleModule',
        'com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter',
        'com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider',
        'com.fasterxml.jackson.databind.ser.std.StdScalarSerializer',
        'com.fasterxml.jackson.databind.ser.std.StdSerializer',
        'com.fasterxml.jackson.dataformat.xml.JacksonXmlModule',
        'com.fasterxml.jackson.dataformat.xml.XmlMapper',
        'com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter',
        'com.fasterxml.jackson.databind.node.JsonNodeFactory',
        'com.fasterxml.jackson.databind.node.ObjectNode',
        'org.fusesource.jansi.Ansi',
        'org.fusesource.jansi.AnsiRenderer$Code',
        'com.lmax.disruptor.BlockingWaitStrategy',
        'com.lmax.disruptor.BusySpinWaitStrategy',
        'com.lmax.disruptor.EventFactory',
        'com.lmax.disruptor.EventTranslator',
        'com.lmax.disruptor.EventTranslatorTwoArg',
        'com.lmax.disruptor.EventTranslatorVararg',
        'com.lmax.disruptor.ExceptionHandler',
        'com.lmax.disruptor.LifecycleAware',
        'com.lmax.disruptor.RingBuffer',
        'com.lmax.disruptor.Sequence',
        'com.lmax.disruptor.SequenceReportingEventHandler',
        'com.lmax.disruptor.SleepingWaitStrategy',
        'com.lmax.disruptor.TimeoutBlockingWaitStrategy',
        'com.lmax.disruptor.WaitStrategy',
        'com.lmax.disruptor.YieldingWaitStrategy',
        'com.lmax.disruptor.dsl.Disruptor',
        'com.lmax.disruptor.dsl.ProducerType',
        'javax.jms.Connection',
        'javax.jms.ConnectionFactory',
        'javax.jms.Destination',
        'javax.jms.JMSException',
        'javax.jms.MapMessage',
        'javax.jms.Message',
        'javax.jms.MessageConsumer',
        'javax.jms.MessageProducer',
        'javax.jms.Session',
        'javax.mail.Authenticator',
        'javax.mail.Message$RecipientType',
        'javax.mail.PasswordAuthentication',
        'javax.mail.Session',
        'javax.mail.Transport',
        'javax.mail.internet.InternetAddress',
        'javax.mail.internet.InternetHeaders',
        'javax.mail.internet.MimeBodyPart',
        'javax.mail.internet.MimeMessage',
        'javax.mail.internet.MimeMultipart',
        'javax.mail.internet.MimeUtility',
        'javax.mail.util.ByteArrayDataSource',
        'javax.persistence.AttributeConverter',
        'javax.persistence.EntityManager',
        'javax.persistence.EntityManagerFactory',
        'javax.persistence.EntityTransaction',
        'javax.persistence.Persistence',
        'javax.persistence.PersistenceException',
        'org.apache.commons.compress.compressors.CompressorStreamFactory',
        'org.apache.commons.compress.utils.IOUtils',
        'org.apache.commons.csv.CSVFormat',
        'org.apache.commons.csv.QuoteMode',
        'org.apache.kafka.clients.producer.Callback',
        'org.apache.kafka.clients.producer.KafkaProducer',
        'org.apache.kafka.clients.producer.Producer',
        'org.apache.kafka.clients.producer.ProducerRecord',
        'org.apache.kafka.clients.producer.RecordMetadata',
        'org.codehaus.stax2.XMLStreamWriter2',
        'org.jctools.queues.MessagePassingQueue$Consumer',
        'org.jctools.queues.MpscArrayQueue',
        'org.osgi.framework.AdaptPermission',
        'org.osgi.framework.AdminPermission',
        'org.osgi.framework.Bundle',
        'org.osgi.framework.BundleActivator',
        'org.osgi.framework.BundleContext',
        'org.osgi.framework.BundleEvent',
        'org.osgi.framework.BundleReference',
        'org.osgi.framework.FrameworkUtil',
        'org.osgi.framework.ServiceRegistration',
        'org.osgi.framework.SynchronousBundleListener',
        'org.osgi.framework.wiring.BundleWire',
        'org.osgi.framework.wiring.BundleWiring',
        'org.zeromq.ZMQ$Context',
        'org.zeromq.ZMQ$Socket',
        'org.zeromq.ZMQ',

        // NEW:
        'com.fasterxml.jackson.core.JsonGenerator',
        'com.fasterxml.jackson.core.JsonParser$Feature',
        'com.fasterxml.jackson.core.JsonParser',
        'com.fasterxml.jackson.core.JsonToken',
        'com.fasterxml.jackson.core.PrettyPrinter',
        'com.fasterxml.jackson.core.Version',
        'com.fasterxml.jackson.core.type.TypeReference',
        'com.fasterxml.jackson.core.util.DefaultPrettyPrinter',
        'com.fasterxml.jackson.core.util.MinimalPrettyPrinter',
        'com.fasterxml.jackson.dataformat.yaml.YAMLFactory',
        'com.fasterxml.jackson.dataformat.yaml.YAMLMapper',
]