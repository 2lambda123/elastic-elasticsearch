/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

apply plugin: 'elasticsearch.publish'

dependencies {
  moduleCompileOnly  project(':libs:elasticsearch-x-content')  // TODO: for JsonStringEncoder
  moduleCompileOnly  project(':libs:elasticsearch-cli')  // TODO: prob remove this, if just for exception types
  moduleCompileOnly "org.apache.logging.log4j:log4j-api:${versions.log4j}"
  moduleCompileOnly "org.apache.logging.log4j:log4j-core:${versions.log4j}"

  moduleCompileOnly "co.elastic.logging:log4j2-ecs-layout:${versions.ecsLogging}"
  moduleCompileOnly "co.elastic.logging:ecs-logging-core:${versions.ecsLogging}"

  testImplementation "com.carrotsearch.randomizedtesting:randomizedtesting-runner:${versions.randomizedrunner}"
  testImplementation "junit:junit:${versions.junit}"
  testImplementation "org.hamcrest:hamcrest:${versions.hamcrest}"

  testImplementation(project(":test:framework")) {
    exclude group: 'org.elasticsearch', module: 'elasticsearch-logging'
  }
}

//tasks.named('forbiddenApisMain').configure {
//  // :libs:elasticsearch-core does not depend on server
//  // TODO: Need to decide how we want to handle for forbidden signatures with the changes to server
//  replaceSignatureFiles 'jdk-signatures'
//}
//
tasks.named("compileJava").configure {
  options.compilerArgs.add("-Xlint:-requires-automatic")
  options.compilerArgs.add("-Xlint:-module") // qualified exports
  options.compilerArgs.add("-Xlint:-exports") // implements Message!!
}

disableTasks('forbiddenApisMain')
